#ifndef PS_SOCK_PROTOCOLSTACK_GLOBALEVENTDEFS_H
#define PS_SOCK_PROTOCOLSTACK_GLOBALEVENTDEFS_H
//TODO Change this
/*====*====*====*====*====*====*====*====*====*====*====*====*====*====*====*

                      S O C K P L A T F O R M L I B . H

GENERAL DESCRIPTION
  This header file defines the sockets platform library for all targets (WM,
  Linux, AMSS etc.). Any target which wants to support ds Sockets API shall
  implement this library

INITIALIZATION AND SEQUENCING REQUIREMENTS
  None

Copyright (c) 2008 by Qualcomm Technologies, Incorporated.  All Rights Reserved.
*====*====*====*====*====*====*====*====*====*====*====*====*====*====*====*/
/*===========================================================================

                        EDIT HISTORY FOR MODULE

  $Header: //commercial/MPSS.JO.2.0.c1.4/Main/modem_proc/datamodem/interface/pssock/src/PS_Sock_ProtocolStack_GlobalEventDefs.h#1 $
  $DateTime: 2016/12/13 08:00:03 $ $Author: mplcsds1 $

===========================================================================*/
/*===========================================================================

                     INCLUDE FILES FOR MODULE

===========================================================================*/
#include "comdef.h"
#include "customer.h"
#include "target.h"

/*===========================================================================

                      PUBLIC DATA DECLARATIONS

===========================================================================*/
namespace PS
{
  namespace Sock
  {
    namespace ProtocolStack
    {
      typedef int32  GlobalEventType;

      /** List of global events that are generated by the PS Stack.

        This namespace defines the events that are generated by the PS Stack.

        @see PS::Sock::ProtocolStack::iGlobalEventListener
      */
      namespace GlobalEvent
      {
        const GlobalEventType  PS_MEM_BUF_AVAILABLE     = 0;
        /**< Posted when PS Stack has enough free PS_MEM buffers */
        const GlobalEventType  PS_MEM_BUF_NOT_AVAILABLE = 1;
        /**< Posted when PS Stack runs out of PS_MEM buffers */
        const GlobalEventType  DSM_ITEM_AVAILABLE       = 2;
        /**< Posted when PS Stack has enough DSM items */
        const GlobalEventType  DSM_ITEM_NOT_AVAILABLE   = 3;
        /**< Posted when PS Stack runs out of DSM items */
      }

    } /* namespace ProtocolStack */
  } /* namespace Sock */
} /* namespace PS */

#endif /* PS_SOCK_PROTOCOLSTACK_GLOBALEVENTDEFS_H */
