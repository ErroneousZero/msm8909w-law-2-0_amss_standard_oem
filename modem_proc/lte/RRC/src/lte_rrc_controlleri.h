/*!
  @file
  lte_rrc_controlleri.h

  @brief
  Internal header file of RRC Controller containing private data.

*/

/*===========================================================================

  Copyright (c) 2008 Qualcomm Technologies Incorporated. All Rights Reserved

  Qualcomm Proprietary

  Export of this technology or software is regulated by the U.S. Government.
  Diversion contrary to U.S. law prohibited.

  All ideas, data and information contained in or disclosed by
  this document are confidential and proprietary information of
  Qualcomm Technologies Incorporated and all rights therein are expressly reserved.
  By accepting this material the recipient agrees that this material
  and the information contained therein are held in confidence and in
  trust and will not be used, copied, reproduced in whole or in part,
  nor its contents revealed in any manner to others without the express
  written permission of Qualcomm Technologies Incorporated.

===========================================================================*/

/*===========================================================================

                        EDIT HISTORY FOR MODULE

This section contains comments describing changes made to the module.
Notice that changes are listed in reverse chronological order.

$Header: //commercial/MPSS.JO.2.0.c1.4/Main/modem_proc/lte/RRC/src/lte_rrc_controlleri.h#1 $

when       who     what, where, why
--------   ---     ----------------------------------------------------------
04/10/2012 ap        Added Controller Deadlock timer duration macro
03/22/2010 sureshs Split data into static and dynamic parts
12/03/2009 sureshs Rename of suspend type field
12/03/2009 sk        Moved lte_rrc_suspend_type_e from lte_rrc_int_msg.h
12/01/2009 sureshs Added suspend_resume_cause field
10/12/2009 sureshs Support for CDMA time info
09/23/2009 sureshs Added mode as a private data item
09/11/2009 sureshs Removed capabilities stuff
08/20/2009 sureshs Added private variable to track ML1 state
08/17/2009 sureshs Added suspend_type field
10/13/2008 sureshs Created sub structure for SM data and SIM update data
09/09/2008 sureshs Changed an include to non-local directory
07/28/2008 sureshs Initial version
===========================================================================*/

#ifndef LTE_RRC_CONTROLLERI_H
#define LTE_RRC_CONTROLLERI_H

/*===========================================================================

                           INCLUDE FILES

===========================================================================*/

#include <lte_rrc_int_msg.h>
#include <lte_rrc_controller.h>
#include <lte_rrc_utils.h>
#include <stm2.h>

/*===========================================================================

                   INTERNAL DEFINITIONS AND TYPES

===========================================================================*/


/* Maximum time to wait for Confirms from lower layers after sending corresponding Cfg Reqs */
#define LTE_RRC_CTLR_DEADLOCK_TIME 1000

/* Maximum time to wait for Confirms, in slte mode, from lower layers after sending corresponding Cfg Reqs */
#define LTE_RRC_CTLR_DEADLOCK_TIME_IN_SLTE 5000

/* Maximum Deadlock  time (5.5s) for CPHY_RESUME_REQ with time out val set to 5s*/
#define LTE_RRC_CTLR_DEADLOCK_TIME_TRM_FAIL 5500


/*! @brief Enum to represent suspend type
*/
typedef enum
{
  LTE_RRC_CTLR_SUSPEND_TYPE_ML1_SUSPEND, /*!< 0 */
  LTE_RRC_CTLR_SUSPEND_TYPE_ML1_STOP,    /*!< 1 */
  LTE_RRC_CTLR_SUSPEND_TYPE_ML1_STOP_L2_STOP,    /*!< 2 */
} lte_rrc_ctlr_suspend_type_e;

/*! @brief Enum to represent the stop requests to be sent to lower layers
*/
typedef enum
{
  LTE_RRC_CTLR_STOP_REQ_TYPE_NONE, /*!< 0 */
  LTE_RRC_CTLR_STOP_REQ_TYPE_ML1_L2,    /*!< 1 */
  LTE_RRC_CTLR_STOP_REQ_TYPE_L2,    /*!< 2 */
} lte_rrc_ctlr_stop_req_type_e;

/*! @brief TRM Priority Info for DSDS
*/
typedef struct
{
  lte_trm_priority_e current_trm_priority; /*Indicates TRM priority(HIGH/LOW) */
  lte_trm_priority_e trm_pri_his[LTE_RRC_TRM_PRIORITY_REQ_MAX]; /*Indicates TRM priority(HIGH/LOW) */
}lte_rrc_dsds_trm_pri_info_s;

/*! @brief Dynamic context of Controller SM
*/
typedef struct
{
  stm_state_t dest_state; /*!< Destination state in Mode Change Req */
  lte_rrc_ctlr_suspend_type_e suspend_type; /*!< Suspend type */
  lte_rrc_mode_change_e mode; /*!< Mode in the request */
  lte_stmr_cdma_rtc_pair cdma_time_info; /*!< CDMA time info */
  lte_cphy_wcdma_time_info_s      wcdma_time_info; /*!< WCDMA time info */
  lte_cphy_tdscdma_time_info_s    tdscdma_time_info; /*!< TDSCDMA time info */
  lte_cphy_gsm_time_info_s        gsm_time_info; /*!< GSM time info */

  lte_cphy_suspend_resume_cause_e suspend_resume_cause; 
                                        /*!< suspend_resume_cause */
  uint32 llc_trans_id; /*! Transaction ID generated by LLC */
  lte_rrc_ctlr_stop_req_type_e stop_req_type; /*! Stop req type, indicating 
                                         which stop requests are to be sent */

  lte_rrc_tmr_s deadlock_tmr; /*!< Deadlock timer */
  boolean deadlock_timer_is_running; /*!< Is Deadlock timer running ?*/

  /*!< Confirmation flags */
  boolean ml1_start_cnf_is_pending;
  boolean mac_start_cnf_is_pending;
  boolean rlcdl_start_cnf_is_pending;
  boolean rlcul_start_cnf_is_pending;
  boolean pdcpdl_start_cnf_is_pending;
  boolean pdcpul_start_cnf_is_pending;
  boolean ml1_stop_cnf_is_pending;
  boolean mac_stop_cnf_is_pending;
  boolean rlcdl_stop_cnf_is_pending;
  boolean rlcul_stop_cnf_is_pending;
  boolean pdcpdl_stop_cnf_is_pending;
  boolean pdcpul_stop_cnf_is_pending;
  lte_rrc_rf_status_info_s rf_status; 

  boolean susp_rsme_ref_time_valid;
  lte_ref_time_s susp_ref_time;
  lte_ref_time_s rsme_ref_time;

  lte_rrc_dest_scenario_e dest_scenario;

  /* TRM Timeout value for DSDS */
  uint16 trm_timeout_val;

  /* Need to Update ML1 after stop cnf and received update while stopping*/
  boolean update_msim_crat_feat_needed;
  
  /*!< Boolean to indicate Single RX mode */
  boolean single_rx_mode;
} lte_rrc_ctlr_dyn_data_s;

/*! @brief Static context of Controller SM
*/
typedef struct
{
  lte_rrc_sim_update_req_s sim_data;
  /* below is static due to unsolicited start and stop cnf in Inactive state */
  boolean mcc_is_pending; /*!< Is mode change confirm yet to be sent? */
  /* TRM Priority Info for DSDS */
  lte_rrc_dsds_trm_pri_info_s trm_pri; 
  sys_modem_device_mode_e_type   device_mode; /*!< Device capability */
  sys_modem_dual_standby_pref_e_type  standby_mode; /*!< Number of active SIMs */
  boolean non_dds_mode; /*!< Non-DDS mode status*/
} lte_rrc_ctlr_static_data_s;

/*! @brief Data type for Controller SM
*/
typedef struct
{
  lte_rrc_ctlr_static_data_s *sd_ptr; /*!< static data */
  lte_rrc_ctlr_dyn_data_s    *dd_ptr; /*!< dynamic data */
} lte_rrc_ctlr_s;

#endif /* LTE_RRC_CONTROLLERI_H */



