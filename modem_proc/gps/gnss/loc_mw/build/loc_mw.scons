# -------------------------------------------------------------------------------- #
#                            L O C _ M W . S C O N S
#
# DESCRIPTION
#   SCons file for the Location Middleware subsystem.
#
#
# INITIALIZATION AND SEQUENCING REQUIREMENTS
#   None.
#
#
#  Copyright (c) 2010 - 2012 Qualcomm Technologies Incorporated.
#  Qualcomm Confidential and Proprietary. All Rights Reserved.
#  Copyright (c) 2013 - 2014 Qualcomm Atheros, Inc.
#  Qualcomm Atheros Confidential and Proprietary. All Rights Reserved. 
#
# Export of this technology or software is regulated by the U.S. Government.
# Diversion contrary to U.S. law prohibited.
#
# All ideas, data and information contained in or disclosed by
# this document are confidential and proprietary information of
# Qualcomm Technologies Incorporated and all rights therein are expressly reserved.
# By accepting this material the recipient agrees that this material
# and the information contained therein are held in confidence and in
# trust and will not be used, copied, reproduced in whole or in part,
# nor its contents revealed in any manner to others without the express
# written permission of Qualcomm Technologies Incorporated.
# --------------------------------------------------------------------------------- #

# --------------------------------------------------------------------------------- #
#
#                      EDIT HISTORY FOR FILE
#
# This section contains comments describing changes made to this file.
# Notice that changes are listed in reverse chronological order.
#
# $Header: //commercial/MPSS.JO.2.0.c1.4/Main/modem_proc/gps/gnss/loc_mw/build/loc_mw.scons#1 $
# $DateTime: 2016/12/13 07:59:45 $
# $Author: mplcsds1 $ 
# 
# when         who     what, where, why
# ---------    ---     ------------------------------------------------------------
# 10/06/10     ah      Initial Version
#
# --------------------------------------------------------------------------------- #

#--------------------------------------------------------------------------------
# Import and clone the SCons environment
#--------------------------------------------------------------------------------
Import('env')
from glob import glob
from os.path import join, basename

if not 'USES_EXPORT_LOC_API' in env:
  env.CleanPack('CLEANPACK_TARGET', env.FindFiles('*', '..'))
  Return()

env.PrintInfo("Using LocMW")

env.PublishProtectedApi('LOC_MW_AON',[
                            '${GPS_ROOT}/gnss/loc_mw/aon/inc',
                           ])

env.RequireProtectedApi('LOC_MW_AON')
#--------------------------------------------------------------------------------
# Setup source PATH
#--------------------------------------------------------------------------------
SRCPATH = '../src'
env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

#--------------------------------------------------------------------------------
# Name of the subsystem to which this unit belongs
#--------------------------------------------------------------------------------
LIB_TARGET = '${BUILDPATH}/' + 'loc_mw'

#--------------------------------------------------------------------------------
# Set MSG_BT_SSID_DFLT for legacy MSG macros by removing previous version and adding new
# Definition
#--------------------------------------------------------------------------------
env.Replace(CPPDEFINES = [x for x in env['CPPDEFINES'] if not x.startswith("MSG_BT_SSID_DFLT=")] +
                                         ["MSG_BT_SSID_DFLT=MSG_SSID_GPSSM"]) 

#--------------------------------------------------------------------------------
# Images that this VU is added
#--------------------------------------------------------------------------------
IMAGES = ['MODEM_MODEM']

#--------------------------------------------------------------------------------
# Generate the library and add to an image
#--------------------------------------------------------------------------------
LIB_SOURCES        = ['${BUILDPATH}/' + basename(fname)
                      for fname in glob(join(env.subst(SRCPATH), '*.c'))]

# Remove the Test folder
env.CleanPack('CLEANPACK_TARGET', env.FindFiles('*', '../test'))

#--------------------------------------------------------------------------------
# Add our library to the Modem image
#--------------------------------------------------------------------------------
env.AddLibrary(IMAGES, LIB_TARGET, LIB_SOURCES)

#--------------------------------------------------------------------------------
# APQ targets has different RC init parameters than MPSS targets.   
#--------------------------------------------------------------------------------
if 'USES_GPSAPQ' in env:
    RCINIT_IMG = ['CORE_MODEM', 'CORE_QDSP6_SW', 'CORE_GSS']
    env.AddRCInitTask(           # NV
    RCINIT_IMG,                 # define TMC_RCINIT_REXTASK_NV 
    {
      'sequence_group'             : 'RCINIT_GROUP_3',                  # required
      'thread_name'                : 'loc_middleware',                              # required
      'stack_size_bytes'           : '16384',
      'priority_amss_order'        : 'SHARED_BACKGROUND_PRI_ORDER',
      'cpu_affinity'               : 'REX_ANY_SMT_MASK',
    })
else:
    RCINIT_TASK_FN = {
        'thread_name'         : 'loc_middleware',
        'thread_entry'        : 'loc_middleware_task',
        'stack_size_bytes'    : env.subst('$LOC_MIDDLEWARE_STKSZ'),
        'sequence_group'      : env.subst('$MODEM_UPPERLAYER'),
        'priority_amss_order' : 'LOC_MIDDLEWARE_PRI_ORDER',
        'cpu_affinity'        : 'REX_ANY_CPU_AFFINITY_MASK',
        'policy_optin'        : ['default', 'ftm', ],
    }
    env.AddRCInitTask (IMAGES, RCINIT_TASK_FN)


env.LoadSoftwareUnits()
