/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 6.6.5, Date: 22-Oct-2013.
 */
#ifndef TM_RRLP_ASN1_H
#define TM_RRLP_ASN1_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdio.h>
#include <stdlib.h>
#include "rtkey_rrlp.h"
#include "rtpersrc/asn1per.h"

/**
 * Header file for ASN.1 module MAP-ExtensionDataTypes
 */
/**************************************************************/
/*                                                            */
/*  PrivateExtension                                          */
/*                                                            */
/**************************************************************/
/*
PrivateExtension ::= SEQUENCE {
   extId MAP-EXTENSION.&extensionId ({ExtensionSet}),
   extType MAP-EXTENSION.&ExtensionType ({ExtensionSet}{@extId}) OPTIONAL
}
*/
typedef struct EXTERN rrlp_PrivateExtension {
   struct {
      unsigned extTypePresent : 1;
   } m;
   ASN1OBJID extId;
   ASN1OpenType extType;
} rrlp_PrivateExtension;

EXTERN int asn1PE_rrlp_PrivateExtension (OSCTXT* pctxt, rrlp_PrivateExtension* pvalue);

EXTERN int asn1PD_rrlp_PrivateExtension (OSCTXT* pctxt, rrlp_PrivateExtension* pvalue);

EXTERN void asn1Free_rrlp_PrivateExtension (OSCTXT *pctxt, 
   rrlp_PrivateExtension* pvalue);

/**************************************************************/
/*                                                            */
/*  PrivateExtensionList                                      */
/*                                                            */
/**************************************************************/
/*
PrivateExtensionList ::= SEQUENCE (SIZE (1..maxNumOfPrivateExtensions)) OF PrivateExtension
*/
typedef struct EXTERN rrlp_PrivateExtensionList {
   OSUINT32 n;
   rrlp_PrivateExtension *elem;
} rrlp_PrivateExtensionList;

EXTERN int asn1PE_rrlp_PrivateExtensionList (OSCTXT* pctxt, rrlp_PrivateExtensionList* pvalue);

EXTERN int asn1PD_rrlp_PrivateExtensionList (OSCTXT* pctxt, rrlp_PrivateExtensionList* pvalue);

EXTERN void asn1Free_rrlp_PrivateExtensionList (OSCTXT *pctxt, 
   rrlp_PrivateExtensionList* pvalue);

/**************************************************************/
/*                                                            */
/*  PCS_Extensions                                            */
/*                                                            */
/**************************************************************/
/*
 Unsupported private extensions shall be discarded if received.

PCS-Extensions ::= SEQUENCE {
   ...
}
*/
typedef struct EXTERN rrlp_PCS_Extensions {
   OSRTDList extElem1;
} rrlp_PCS_Extensions;

EXTERN int asn1PE_rrlp_PCS_Extensions (OSCTXT* pctxt, rrlp_PCS_Extensions* pvalue);

EXTERN int asn1PD_rrlp_PCS_Extensions (OSCTXT* pctxt, rrlp_PCS_Extensions* pvalue);

EXTERN void asn1Free_rrlp_PCS_Extensions (OSCTXT *pctxt, rrlp_PCS_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  ExtensionContainer                                        */
/*                                                            */
/**************************************************************/
/*
 The length of the Object Identifier shall not exceed 16 octets and the
 number of components of the Object Identifier shall not exceed 16
 data types

ExtensionContainer ::= SEQUENCE {
   privateExtensionList [0] PrivateExtensionList OPTIONAL,
   pcs-Extensions [1] PCS-Extensions OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_ExtensionContainer {
   struct {
      unsigned privateExtensionListPresent : 1;
      unsigned pcs_ExtensionsPresent : 1;
   } m;
   rrlp_PrivateExtensionList privateExtensionList;
   rrlp_PCS_Extensions pcs_Extensions;
   OSRTDList extElem1;
} rrlp_ExtensionContainer;

EXTERN int asn1PE_rrlp_ExtensionContainer (OSCTXT* pctxt, rrlp_ExtensionContainer* pvalue);

EXTERN int asn1PD_rrlp_ExtensionContainer (OSCTXT* pctxt, rrlp_ExtensionContainer* pvalue);

EXTERN void asn1Free_rrlp_ExtensionContainer (OSCTXT *pctxt, 
   rrlp_ExtensionContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  SLR_Arg_PCS_Extensions                                    */
/*                                                            */
/**************************************************************/
/*
SLR-Arg-PCS-Extensions ::= SEQUENCE {
   ...na-ESRK-Request [0] NULL OPTIONAL
}
*/
typedef struct EXTERN rrlp_SLR_Arg_PCS_Extensions {
   struct {
      unsigned na_ESRK_RequestPresent : 1;
   } m;
   OSRTDList extElem1;
} rrlp_SLR_Arg_PCS_Extensions;

EXTERN int asn1PE_rrlp_SLR_Arg_PCS_Extensions (OSCTXT* pctxt, rrlp_SLR_Arg_PCS_Extensions* pvalue);

EXTERN int asn1PD_rrlp_SLR_Arg_PCS_Extensions (OSCTXT* pctxt, rrlp_SLR_Arg_PCS_Extensions* pvalue);

EXTERN void asn1Free_rrlp_SLR_Arg_PCS_Extensions (OSCTXT *pctxt, 
   rrlp_SLR_Arg_PCS_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  SLR_ArgExtensionContainer                                 */
/*                                                            */
/**************************************************************/
/*
SLR-ArgExtensionContainer ::= SEQUENCE {
   privateExtensionList [0] PrivateExtensionList OPTIONAL,
   slr-Arg-PCS-Extensions [1] SLR-Arg-PCS-Extensions OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_SLR_ArgExtensionContainer {
   struct {
      unsigned privateExtensionListPresent : 1;
      unsigned slr_Arg_PCS_ExtensionsPresent : 1;
   } m;
   rrlp_PrivateExtensionList privateExtensionList;
   rrlp_SLR_Arg_PCS_Extensions slr_Arg_PCS_Extensions;
   OSRTDList extElem1;
} rrlp_SLR_ArgExtensionContainer;

EXTERN int asn1PE_rrlp_SLR_ArgExtensionContainer (OSCTXT* pctxt, rrlp_SLR_ArgExtensionContainer* pvalue);

EXTERN int asn1PD_rrlp_SLR_ArgExtensionContainer (OSCTXT* pctxt, rrlp_SLR_ArgExtensionContainer* pvalue);

EXTERN void asn1Free_rrlp_SLR_ArgExtensionContainer (OSCTXT *pctxt, 
   rrlp_SLR_ArgExtensionContainer* pvalue);

/* Value definitions */

#define ASN1V_maxNumOfPrivateExtensions 10

/**
 * Header file for ASN.1 module MAP-LCS-DataTypes
 */
/**************************************************************/
/*                                                            */
/*  Ext_GeographicalInformation                               */
/*                                                            */
/**************************************************************/
/*
Ext-GeographicalInformation ::= OCTET STRING (SIZE (1..maxExt-GeographicalInformation))
*/
typedef struct EXTERN rrlp_Ext_GeographicalInformation {
   OSUINT32 numocts;
   OSOCTET data[20];
} rrlp_Ext_GeographicalInformation;

EXTERN int asn1PE_rrlp_Ext_GeographicalInformation (OSCTXT* pctxt, rrlp_Ext_GeographicalInformation* pvalue);

EXTERN int asn1PD_rrlp_Ext_GeographicalInformation (OSCTXT* pctxt, rrlp_Ext_GeographicalInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  VelocityEstimate                                          */
/*                                                            */
/**************************************************************/
/*
 the maximum length allows for further shapes in 3GPP TS 23.032 to be included in later 
 versions of 3GPP TS 29.002

VelocityEstimate ::= OCTET STRING (SIZE (4..7))
*/
typedef struct EXTERN rrlp_VelocityEstimate {
   OSUINT32 numocts;
   OSOCTET data[7];
} rrlp_VelocityEstimate;

EXTERN int asn1PE_rrlp_VelocityEstimate (OSCTXT* pctxt, rrlp_VelocityEstimate* pvalue);

EXTERN int asn1PD_rrlp_VelocityEstimate (OSCTXT* pctxt, rrlp_VelocityEstimate* pvalue);

/* Value definitions */

#define ASN1V_maxExt_GeographicalInformation 20

/**
 * Header file for ASN.1 module RRLP-Components
 */
/**************************************************************/
/*                                                            */
/*  Accuracy                                                  */
/*                                                            */
/**************************************************************/
/*
 The values of this field are defined in 3GPP TS 23.032 (Uncertainty code)

Accuracy ::= INTEGER (0..127)
*/
typedef OSUINT8 rrlp_Accuracy;

EXTERN int asn1PE_rrlp_Accuracy (OSCTXT* pctxt, rrlp_Accuracy value);

EXTERN int asn1PD_rrlp_Accuracy (OSCTXT* pctxt, rrlp_Accuracy* pvalue);

/**************************************************************/
/*                                                            */
/*  AccuracyOpt                                               */
/*                                                            */
/**************************************************************/
/*
 Accuracy of the location estimation

AccuracyOpt ::= SEQUENCE {
   accuracy [0] Accuracy OPTIONAL
}
*/
typedef struct EXTERN rrlp_AccuracyOpt {
   struct {
      unsigned accuracyPresent : 1;
   } m;
   rrlp_Accuracy accuracy;
} rrlp_AccuracyOpt;

EXTERN int asn1PE_rrlp_AccuracyOpt (OSCTXT* pctxt, rrlp_AccuracyOpt* pvalue);

EXTERN int asn1PD_rrlp_AccuracyOpt (OSCTXT* pctxt, rrlp_AccuracyOpt* pvalue);

/**************************************************************/
/*                                                            */
/*  MethodType                                                */
/*                                                            */
/**************************************************************/
/*


MethodType ::= CHOICE {
   msAssisted [0] AccuracyOpt,
   msBased [1] Accuracy,
   msBasedPref [2] Accuracy,
   msAssistedPref [3] Accuracy
}
*/
/* Choice tag constants */

#define T_rrlp_MethodType_msAssisted    1
#define T_rrlp_MethodType_msBased       2
#define T_rrlp_MethodType_msBasedPref   3
#define T_rrlp_MethodType_msAssistedPref 4

typedef struct EXTERN rrlp_MethodType {
   OSUINT32 t;
   union {
      /* t = 1 */
      rrlp_AccuracyOpt *msAssisted;
      /* t = 2 */
      rrlp_Accuracy msBased;
      /* t = 3 */
      rrlp_Accuracy msBasedPref;
      /* t = 4 */
      rrlp_Accuracy msAssistedPref;
   } u;
} rrlp_MethodType;

EXTERN int asn1PE_rrlp_MethodType (OSCTXT* pctxt, rrlp_MethodType* pvalue);

EXTERN int asn1PD_rrlp_MethodType (OSCTXT* pctxt, rrlp_MethodType* pvalue);

EXTERN void asn1Free_rrlp_MethodType (OSCTXT *pctxt, rrlp_MethodType* pvalue);

/**************************************************************/
/*                                                            */
/*  PositionMethod                                            */
/*                                                            */
/**************************************************************/
/*
 Position Method

PositionMethod ::= ENUMERATED { eotd(0), gps(1), gpsOrEOTD(2) }
*/
typedef enum {
   rrlp_PositionMethod_eotd = 0,
   rrlp_PositionMethod_gps = 1,
   rrlp_PositionMethod_gpsOrEOTD = 2
} rrlp_PositionMethod_Root;

typedef OSUINT32 rrlp_PositionMethod;

EXTERN int asn1PE_rrlp_PositionMethod (OSCTXT* pctxt, rrlp_PositionMethod value);

EXTERN int asn1PD_rrlp_PositionMethod (OSCTXT* pctxt, rrlp_PositionMethod* pvalue);

/**************************************************************/
/*                                                            */
/*  MeasureResponseTime                                       */
/*                                                            */
/**************************************************************/
/*
 Measurement request response time

MeasureResponseTime ::= INTEGER (0..7)
*/
typedef OSUINT8 rrlp_MeasureResponseTime;

EXTERN int asn1PE_rrlp_MeasureResponseTime (OSCTXT* pctxt, rrlp_MeasureResponseTime value);

EXTERN int asn1PD_rrlp_MeasureResponseTime (OSCTXT* pctxt, rrlp_MeasureResponseTime* pvalue);

/**************************************************************/
/*                                                            */
/*  UseMultipleSets                                           */
/*                                                            */
/**************************************************************/
/*
 useMultiple Sets, FFS!

UseMultipleSets ::= ENUMERATED { multipleSets(0), oneSet(1) }
*/
typedef enum {
   rrlp_UseMultipleSets_multipleSets = 0,
   rrlp_UseMultipleSets_oneSet = 1
} rrlp_UseMultipleSets_Root;

typedef OSUINT32 rrlp_UseMultipleSets;

EXTERN int asn1PE_rrlp_UseMultipleSets (OSCTXT* pctxt, rrlp_UseMultipleSets value);

EXTERN int asn1PD_rrlp_UseMultipleSets (OSCTXT* pctxt, rrlp_UseMultipleSets* pvalue);

/**************************************************************/
/*                                                            */
/*  EnvironmentCharacter                                      */
/*                                                            */
/**************************************************************/
/*
 Environment characterization

EnvironmentCharacter ::= ENUMERATED { badArea(0), notBadArea(1), mixedArea(2), ... }
*/
typedef enum {
   rrlp_EnvironmentCharacter_badArea = 0,
   rrlp_EnvironmentCharacter_notBadArea = 1,
   rrlp_EnvironmentCharacter_mixedArea = 2
} rrlp_EnvironmentCharacter_Root;

typedef OSUINT32 rrlp_EnvironmentCharacter;

EXTERN int asn1PE_rrlp_EnvironmentCharacter (OSCTXT* pctxt, rrlp_EnvironmentCharacter value);

EXTERN int asn1PD_rrlp_EnvironmentCharacter (OSCTXT* pctxt, rrlp_EnvironmentCharacter* pvalue);

/**************************************************************/
/*                                                            */
/*  PositionInstruct                                          */
/*                                                            */
/**************************************************************/
/*
 add these defintions to RRLP-Components module
 Position instructions

PositionInstruct ::= SEQUENCE {
   methodType [0] MethodType,
   positionMethod [1] PositionMethod,
   measureResponseTime [2] MeasureResponseTime,
   useMultipleSets [3] UseMultipleSets,
   environmentCharacter [4] EnvironmentCharacter OPTIONAL
}
*/
typedef struct EXTERN rrlp_PositionInstruct {
   struct {
      unsigned environmentCharacterPresent : 1;
   } m;
   rrlp_MethodType methodType;
   rrlp_PositionMethod positionMethod;
   rrlp_MeasureResponseTime measureResponseTime;
   rrlp_UseMultipleSets useMultipleSets;
   rrlp_EnvironmentCharacter environmentCharacter;
} rrlp_PositionInstruct;

EXTERN int asn1PE_rrlp_PositionInstruct (OSCTXT* pctxt, rrlp_PositionInstruct* pvalue);

EXTERN int asn1PD_rrlp_PositionInstruct (OSCTXT* pctxt, rrlp_PositionInstruct* pvalue);

EXTERN void asn1Free_rrlp_PositionInstruct (OSCTXT *pctxt, 
   rrlp_PositionInstruct* pvalue);

/**************************************************************/
/*                                                            */
/*  BCCHCarrier                                               */
/*                                                            */
/**************************************************************/
/*
 RF channel number of BCCH

BCCHCarrier ::= INTEGER (0..1023)
*/
typedef OSUINT16 rrlp_BCCHCarrier;

EXTERN int asn1PE_rrlp_BCCHCarrier (OSCTXT* pctxt, rrlp_BCCHCarrier value);

EXTERN int asn1PD_rrlp_BCCHCarrier (OSCTXT* pctxt, rrlp_BCCHCarrier* pvalue);

/**************************************************************/
/*                                                            */
/*  BSIC                                                      */
/*                                                            */
/**************************************************************/
/*
 Base station Identity Code

BSIC ::= INTEGER (0..63)
*/
typedef OSUINT8 rrlp_BSIC;

EXTERN int asn1PE_rrlp_BSIC (OSCTXT* pctxt, rrlp_BSIC value);

EXTERN int asn1PD_rrlp_BSIC (OSCTXT* pctxt, rrlp_BSIC* pvalue);

/**************************************************************/
/*                                                            */
/*  TimeSlotScheme                                            */
/*                                                            */
/**************************************************************/
/*
 Timeslot scheme

TimeSlotScheme ::= ENUMERATED { equalLength(0), variousLength(1) }
*/
typedef enum {
   rrlp_TimeSlotScheme_equalLength = 0,
   rrlp_TimeSlotScheme_variousLength = 1
} rrlp_TimeSlotScheme_Root;

typedef OSUINT32 rrlp_TimeSlotScheme;

EXTERN int asn1PE_rrlp_TimeSlotScheme (OSCTXT* pctxt, rrlp_TimeSlotScheme value);

EXTERN int asn1PD_rrlp_TimeSlotScheme (OSCTXT* pctxt, rrlp_TimeSlotScheme* pvalue);

/**************************************************************/
/*                                                            */
/*  BTSPosition                                               */
/*                                                            */
/**************************************************************/
/*
 ellipsoid point and
 ellipsoid point with altitude and uncertainty ellipsoid shapes are supported

BTSPosition ::= Ext-GeographicalInformation
*/
typedef rrlp_Ext_GeographicalInformation rrlp_BTSPosition;

EXTERN int asn1PE_rrlp_BTSPosition (OSCTXT* pctxt, rrlp_BTSPosition* pvalue);

EXTERN int asn1PD_rrlp_BTSPosition (OSCTXT* pctxt, rrlp_BTSPosition* pvalue);

/**************************************************************/
/*                                                            */
/*  ReferenceAssistData                                       */
/*                                                            */
/**************************************************************/
/*
 E-OTD reference BTS for Assitance data IE

ReferenceAssistData ::= SEQUENCE {
   bcchCarrier [0] BCCHCarrier,
   bsic [1] BSIC,
   timeSlotScheme [2] TimeSlotScheme,
   btsPosition [3] BTSPosition OPTIONAL
}
*/
typedef struct EXTERN rrlp_ReferenceAssistData {
   struct {
      unsigned btsPositionPresent : 1;
   } m;
   rrlp_BCCHCarrier bcchCarrier;
   rrlp_BSIC bsic;
   rrlp_TimeSlotScheme timeSlotScheme;
   rrlp_BTSPosition btsPosition;
} rrlp_ReferenceAssistData;

EXTERN int asn1PE_rrlp_ReferenceAssistData (OSCTXT* pctxt, rrlp_ReferenceAssistData* pvalue);

EXTERN int asn1PD_rrlp_ReferenceAssistData (OSCTXT* pctxt, rrlp_ReferenceAssistData* pvalue);

/**************************************************************/
/*                                                            */
/*  MultiFrameOffset                                          */
/*                                                            */
/**************************************************************/
/*
 Multiframe offset

MultiFrameOffset ::= INTEGER (0..51)
*/
typedef OSUINT8 rrlp_MultiFrameOffset;

EXTERN int asn1PE_rrlp_MultiFrameOffset (OSCTXT* pctxt, rrlp_MultiFrameOffset value);

EXTERN int asn1PD_rrlp_MultiFrameOffset (OSCTXT* pctxt, rrlp_MultiFrameOffset* pvalue);

/**************************************************************/
/*                                                            */
/*  RoughRTD                                                  */
/*                                                            */
/**************************************************************/
/*
 The Multiframe Offset value 51 shall not be encoded by the transmitting entity and
 shall be treated by the receiving entity as 0.
 Rough RTD value between one base station and reference BTS

RoughRTD ::= INTEGER (0..1250)
*/
typedef OSUINT16 rrlp_RoughRTD;

EXTERN int asn1PE_rrlp_RoughRTD (OSCTXT* pctxt, rrlp_RoughRTD value);

EXTERN int asn1PD_rrlp_RoughRTD (OSCTXT* pctxt, rrlp_RoughRTD* pvalue);

/**************************************************************/
/*                                                            */
/*  FineRTD                                                   */
/*                                                            */
/**************************************************************/
/*
 Fine RTD value between this BTS and the reference BTS	

FineRTD ::= INTEGER (0..255)
*/
typedef OSUINT8 rrlp_FineRTD;

EXTERN int asn1PE_rrlp_FineRTD (OSCTXT* pctxt, rrlp_FineRTD value);

EXTERN int asn1PD_rrlp_FineRTD (OSCTXT* pctxt, rrlp_FineRTD* pvalue);

/**************************************************************/
/*                                                            */
/*  RelDistance                                               */
/*                                                            */
/**************************************************************/
/*
 Relative north/east distance

RelDistance ::= INTEGER (-200000..200000)
*/
typedef OSINT32 rrlp_RelDistance;

EXTERN int asn1PE_rrlp_RelDistance (OSCTXT* pctxt, rrlp_RelDistance value);

EXTERN int asn1PD_rrlp_RelDistance (OSCTXT* pctxt, rrlp_RelDistance* pvalue);

/**************************************************************/
/*                                                            */
/*  RelativeAlt                                               */
/*                                                            */
/**************************************************************/
/*
 Relative altitude

RelativeAlt ::= INTEGER (-4000..4000)
*/
typedef OSINT16 rrlp_RelativeAlt;

EXTERN int asn1PE_rrlp_RelativeAlt (OSCTXT* pctxt, rrlp_RelativeAlt value);

EXTERN int asn1PD_rrlp_RelativeAlt (OSCTXT* pctxt, rrlp_RelativeAlt* pvalue);

/**************************************************************/
/*                                                            */
/*  ReferenceWGS84                                            */
/*                                                            */
/**************************************************************/
/*
 Coordinates of neighbour BTS, WGS-84 ellipsoid

ReferenceWGS84 ::= SEQUENCE {
   relativeNorth [0] RelDistance,
   relativeEast [1] RelDistance,
   relativeAlt [2] RelativeAlt OPTIONAL
}
*/
typedef struct EXTERN rrlp_ReferenceWGS84 {
   struct {
      unsigned relativeAltPresent : 1;
   } m;
   rrlp_RelDistance relativeNorth;
   rrlp_RelDistance relativeEast;
   rrlp_RelativeAlt relativeAlt;
} rrlp_ReferenceWGS84;

EXTERN int asn1PE_rrlp_ReferenceWGS84 (OSCTXT* pctxt, rrlp_ReferenceWGS84* pvalue);

EXTERN int asn1PD_rrlp_ReferenceWGS84 (OSCTXT* pctxt, rrlp_ReferenceWGS84* pvalue);

/**************************************************************/
/*                                                            */
/*  CalcAssistanceBTS                                         */
/*                                                            */
/**************************************************************/
/*
 E-OTD Location calculation assistance data,
 CalcAssistanceBTS element is optional not subfields

CalcAssistanceBTS ::= SEQUENCE {
   fineRTD [0] FineRTD,
   referenceWGS84 [1] ReferenceWGS84
}
*/
typedef struct EXTERN rrlp_CalcAssistanceBTS {
   rrlp_FineRTD fineRTD;
   rrlp_ReferenceWGS84 referenceWGS84;
} rrlp_CalcAssistanceBTS;

EXTERN int asn1PE_rrlp_CalcAssistanceBTS (OSCTXT* pctxt, rrlp_CalcAssistanceBTS* pvalue);

EXTERN int asn1PD_rrlp_CalcAssistanceBTS (OSCTXT* pctxt, rrlp_CalcAssistanceBTS* pvalue);

/**************************************************************/
/*                                                            */
/*  MsrAssistBTS                                              */
/*                                                            */
/**************************************************************/
/*
MsrAssistBTS ::= SEQUENCE {
   bcchCarrier [0] BCCHCarrier,
   bsic [1] BSIC,
   multiFrameOffset [2] MultiFrameOffset,
   timeSlotScheme [3] TimeSlotScheme,
   roughRTD [4] RoughRTD,
   calcAssistanceBTS [5] CalcAssistanceBTS OPTIONAL
}
*/
typedef struct EXTERN rrlp_MsrAssistBTS {
   struct {
      unsigned calcAssistanceBTSPresent : 1;
   } m;
   rrlp_BCCHCarrier bcchCarrier;
   rrlp_BSIC bsic;
   rrlp_MultiFrameOffset multiFrameOffset;
   rrlp_TimeSlotScheme timeSlotScheme;
   rrlp_RoughRTD roughRTD;
   rrlp_CalcAssistanceBTS calcAssistanceBTS;
} rrlp_MsrAssistBTS;

EXTERN int asn1PE_rrlp_MsrAssistBTS (OSCTXT* pctxt, rrlp_MsrAssistBTS* pvalue);

EXTERN int asn1PD_rrlp_MsrAssistBTS (OSCTXT* pctxt, rrlp_MsrAssistBTS* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfMsrAssistBTS                                         */
/*                                                            */
/**************************************************************/
/*
SeqOfMsrAssistBTS ::= SEQUENCE (SIZE (1..15)) OF MsrAssistBTS
*/
typedef struct EXTERN rrlp_SeqOfMsrAssistBTS {
   OSUINT32 n;
   rrlp_MsrAssistBTS *elem;
} rrlp_SeqOfMsrAssistBTS;

EXTERN int asn1PE_rrlp_SeqOfMsrAssistBTS (OSCTXT* pctxt, rrlp_SeqOfMsrAssistBTS* pvalue);

EXTERN int asn1PD_rrlp_SeqOfMsrAssistBTS (OSCTXT* pctxt, rrlp_SeqOfMsrAssistBTS* pvalue);

EXTERN void asn1Free_rrlp_SeqOfMsrAssistBTS (OSCTXT *pctxt, 
   rrlp_SeqOfMsrAssistBTS* pvalue);

/**************************************************************/
/*                                                            */
/*  MsrAssistData                                             */
/*                                                            */
/**************************************************************/
/*
 E-OTD measurement assistance data IE
 The total number of neighbors in this element (MsrAssistData)
 and in SystemInfoAssistData element (presented neighbors
 can be at a maximum 15!)

MsrAssistData ::= SEQUENCE {
   msrAssistList [0] SeqOfMsrAssistBTS
}
*/
typedef struct EXTERN rrlp_MsrAssistData {
   rrlp_SeqOfMsrAssistBTS msrAssistList;
} rrlp_MsrAssistData;

EXTERN int asn1PE_rrlp_MsrAssistData (OSCTXT* pctxt, rrlp_MsrAssistData* pvalue);

EXTERN int asn1PD_rrlp_MsrAssistData (OSCTXT* pctxt, rrlp_MsrAssistData* pvalue);

EXTERN void asn1Free_rrlp_MsrAssistData (OSCTXT *pctxt, rrlp_MsrAssistData* pvalue);

/**************************************************************/
/*                                                            */
/*  AssistBTSData                                             */
/*                                                            */
/**************************************************************/
/*
 Actual assistance data for system information base station

AssistBTSData ::= SEQUENCE {
   bsic [0] BSIC,
   multiFrameOffset [1] MultiFrameOffset,
   timeSlotScheme [2] TimeSlotScheme,
   roughRTD [3] RoughRTD,
   calcAssistanceBTS [4] CalcAssistanceBTS OPTIONAL
}
*/
typedef struct EXTERN rrlp_AssistBTSData {
   struct {
      unsigned calcAssistanceBTSPresent : 1;
   } m;
   rrlp_BSIC bsic;
   rrlp_MultiFrameOffset multiFrameOffset;
   rrlp_TimeSlotScheme timeSlotScheme;
   rrlp_RoughRTD roughRTD;
   rrlp_CalcAssistanceBTS calcAssistanceBTS;
} rrlp_AssistBTSData;

EXTERN int asn1PE_rrlp_AssistBTSData (OSCTXT* pctxt, rrlp_AssistBTSData* pvalue);

EXTERN int asn1PD_rrlp_AssistBTSData (OSCTXT* pctxt, rrlp_AssistBTSData* pvalue);

/**************************************************************/
/*                                                            */
/*  SystemInfoAssistBTS                                       */
/*                                                            */
/**************************************************************/
/*
 whether n.th is present or not ?

SystemInfoAssistBTS ::= CHOICE {
   notPresent [0] NULL,
   present [1] AssistBTSData
}
*/
/* Choice tag constants */

#define T_rrlp_SystemInfoAssistBTS_notPresent 1
#define T_rrlp_SystemInfoAssistBTS_present 2

typedef struct EXTERN rrlp_SystemInfoAssistBTS {
   OSUINT32 t;
   union {
      /* t = 1 */
      /* t = 2 */
      rrlp_AssistBTSData *present;
   } u;
} rrlp_SystemInfoAssistBTS;

EXTERN int asn1PE_rrlp_SystemInfoAssistBTS (OSCTXT* pctxt, rrlp_SystemInfoAssistBTS* pvalue);

EXTERN int asn1PD_rrlp_SystemInfoAssistBTS (OSCTXT* pctxt, rrlp_SystemInfoAssistBTS* pvalue);

EXTERN void asn1Free_rrlp_SystemInfoAssistBTS (OSCTXT *pctxt, 
   rrlp_SystemInfoAssistBTS* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfSystemInfoAssistBTS                                  */
/*                                                            */
/**************************************************************/
/*
SeqOfSystemInfoAssistBTS ::= SEQUENCE (SIZE (1..32)) OF SystemInfoAssistBTS
*/
typedef struct EXTERN rrlp_SeqOfSystemInfoAssistBTS {
   OSUINT32 n;
   rrlp_SystemInfoAssistBTS *elem;
} rrlp_SeqOfSystemInfoAssistBTS;

EXTERN int asn1PE_rrlp_SeqOfSystemInfoAssistBTS (OSCTXT* pctxt, rrlp_SeqOfSystemInfoAssistBTS* pvalue);

EXTERN int asn1PD_rrlp_SeqOfSystemInfoAssistBTS (OSCTXT* pctxt, rrlp_SeqOfSystemInfoAssistBTS* pvalue);

EXTERN void asn1Free_rrlp_SeqOfSystemInfoAssistBTS (OSCTXT *pctxt, 
   rrlp_SeqOfSystemInfoAssistBTS* pvalue);

/**************************************************************/
/*                                                            */
/*  SystemInfoAssistData                                      */
/*                                                            */
/**************************************************************/
/*
 The RoughRTD value 1250 shall not be encoded by the transmitting entity and shall
 be treated by the receiving entity as 0.
 E-OTD Measurement assistance data for system information List IE
 The total number of base stations in this element (SystemInfoAssistData
 presented neighbors) and in MsrAssistData element can be at a maximum 15.

SystemInfoAssistData ::= SEQUENCE {
   systemInfoAssistList [0] SeqOfSystemInfoAssistBTS
}
*/
typedef struct EXTERN rrlp_SystemInfoAssistData {
   rrlp_SeqOfSystemInfoAssistBTS systemInfoAssistList;
} rrlp_SystemInfoAssistData;

EXTERN int asn1PE_rrlp_SystemInfoAssistData (OSCTXT* pctxt, rrlp_SystemInfoAssistData* pvalue);

EXTERN int asn1PD_rrlp_SystemInfoAssistData (OSCTXT* pctxt, rrlp_SystemInfoAssistData* pvalue);

EXTERN void asn1Free_rrlp_SystemInfoAssistData (OSCTXT *pctxt, 
   rrlp_SystemInfoAssistData* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSTOW23b                                                 */
/*                                                            */
/**************************************************************/
/*
 GPSTOW, range 0-604799.92, resolution 0.08 sec, 23-bit presentation

GPSTOW23b ::= INTEGER (0..7559999)
*/
typedef OSUINT32 rrlp_GPSTOW23b;

EXTERN int asn1PE_rrlp_GPSTOW23b (OSCTXT* pctxt, rrlp_GPSTOW23b value);

EXTERN int asn1PD_rrlp_GPSTOW23b (OSCTXT* pctxt, rrlp_GPSTOW23b* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSWeek                                                   */
/*                                                            */
/**************************************************************/
/*
 GPS week number

GPSWeek ::= INTEGER (0..1023)
*/
typedef OSUINT16 rrlp_GPSWeek;

EXTERN int asn1PE_rrlp_GPSWeek (OSCTXT* pctxt, rrlp_GPSWeek value);

EXTERN int asn1PD_rrlp_GPSWeek (OSCTXT* pctxt, rrlp_GPSWeek* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSTime                                                   */
/*                                                            */
/**************************************************************/
/*
 GPS Time includes week number and time-of-week (TOW)

GPSTime ::= SEQUENCE {
   gpsTOW23b [0] GPSTOW23b,
   gpsWeek [1] GPSWeek
}
*/
typedef struct EXTERN rrlp_GPSTime {
   rrlp_GPSTOW23b gpsTOW23b;
   rrlp_GPSWeek gpsWeek;
} rrlp_GPSTime;

EXTERN int asn1PE_rrlp_GPSTime (OSCTXT* pctxt, rrlp_GPSTime* pvalue);

EXTERN int asn1PD_rrlp_GPSTime (OSCTXT* pctxt, rrlp_GPSTime* pvalue);

/**************************************************************/
/*                                                            */
/*  FrameNumber                                               */
/*                                                            */
/**************************************************************/
/*
 Frame number

FrameNumber ::= INTEGER (0..2097151)
*/
typedef OSUINT32 rrlp_FrameNumber;

EXTERN int asn1PE_rrlp_FrameNumber (OSCTXT* pctxt, rrlp_FrameNumber value);

EXTERN int asn1PD_rrlp_FrameNumber (OSCTXT* pctxt, rrlp_FrameNumber* pvalue);

/**************************************************************/
/*                                                            */
/*  TimeSlot                                                  */
/*                                                            */
/**************************************************************/
/*
 Time slot number

TimeSlot ::= INTEGER (0..7)
*/
typedef OSUINT8 rrlp_TimeSlot;

EXTERN int asn1PE_rrlp_TimeSlot (OSCTXT* pctxt, rrlp_TimeSlot value);

EXTERN int asn1PD_rrlp_TimeSlot (OSCTXT* pctxt, rrlp_TimeSlot* pvalue);

/**************************************************************/
/*                                                            */
/*  BitNumber                                                 */
/*                                                            */
/**************************************************************/
/*
 Bit number

BitNumber ::= INTEGER (0..156)
*/
typedef OSUINT8 rrlp_BitNumber;

EXTERN int asn1PE_rrlp_BitNumber (OSCTXT* pctxt, rrlp_BitNumber value);

EXTERN int asn1PD_rrlp_BitNumber (OSCTXT* pctxt, rrlp_BitNumber* pvalue);

/**************************************************************/
/*                                                            */
/*  GSMTime                                                   */
/*                                                            */
/**************************************************************/
/*
GSMTime ::= SEQUENCE {
   bcchCarrier [0] BCCHCarrier,
   bsic [1] BSIC,
   frameNumber [2] FrameNumber,
   timeSlot [3] TimeSlot,
   bitNumber [4] BitNumber
}
*/
typedef struct EXTERN rrlp_GSMTime {
   rrlp_BCCHCarrier bcchCarrier;
   rrlp_BSIC bsic;
   rrlp_FrameNumber frameNumber;
   rrlp_TimeSlot timeSlot;
   rrlp_BitNumber bitNumber;
} rrlp_GSMTime;

EXTERN int asn1PE_rrlp_GSMTime (OSCTXT* pctxt, rrlp_GSMTime* pvalue);

EXTERN int asn1PD_rrlp_GSMTime (OSCTXT* pctxt, rrlp_GSMTime* pvalue);

/**************************************************************/
/*                                                            */
/*  SatelliteID                                               */
/*                                                            */
/**************************************************************/
/*
SatelliteID ::= INTEGER (0..63)
*/
typedef OSUINT8 rrlp_SatelliteID;

EXTERN int asn1PE_rrlp_SatelliteID (OSCTXT* pctxt, rrlp_SatelliteID value);

EXTERN int asn1PD_rrlp_SatelliteID (OSCTXT* pctxt, rrlp_SatelliteID* pvalue);

/**************************************************************/
/*                                                            */
/*  TLMWord                                                   */
/*                                                            */
/**************************************************************/
/*
 TLM Word, 14 bits

TLMWord ::= INTEGER (0..16383)
*/
typedef OSUINT16 rrlp_TLMWord;

EXTERN int asn1PE_rrlp_TLMWord (OSCTXT* pctxt, rrlp_TLMWord value);

EXTERN int asn1PD_rrlp_TLMWord (OSCTXT* pctxt, rrlp_TLMWord* pvalue);

/**************************************************************/
/*                                                            */
/*  AntiSpoofFlag                                             */
/*                                                            */
/**************************************************************/
/*
 Anti-Spoof flag

AntiSpoofFlag ::= INTEGER (0..1)
*/
typedef OSUINT8 rrlp_AntiSpoofFlag;

EXTERN int asn1PE_rrlp_AntiSpoofFlag (OSCTXT* pctxt, rrlp_AntiSpoofFlag value);

EXTERN int asn1PD_rrlp_AntiSpoofFlag (OSCTXT* pctxt, rrlp_AntiSpoofFlag* pvalue);

/**************************************************************/
/*                                                            */
/*  AlertFlag                                                 */
/*                                                            */
/**************************************************************/
/*
 Alert flag

AlertFlag ::= INTEGER (0..1)
*/
typedef OSUINT8 rrlp_AlertFlag;

EXTERN int asn1PE_rrlp_AlertFlag (OSCTXT* pctxt, rrlp_AlertFlag value);

EXTERN int asn1PD_rrlp_AlertFlag (OSCTXT* pctxt, rrlp_AlertFlag* pvalue);

/**************************************************************/
/*                                                            */
/*  TLMReservedBits                                           */
/*                                                            */
/**************************************************************/
/*
 Reserved bits in TLM word, MSB occurs earlier in TLM Word transmitted by satellite

TLMReservedBits ::= INTEGER (0..3)
*/
typedef OSUINT8 rrlp_TLMReservedBits;

EXTERN int asn1PE_rrlp_TLMReservedBits (OSCTXT* pctxt, rrlp_TLMReservedBits value);

EXTERN int asn1PD_rrlp_TLMReservedBits (OSCTXT* pctxt, rrlp_TLMReservedBits* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSTOWAssistElement                                       */
/*                                                            */
/**************************************************************/
/*
GPSTOWAssistElement ::= SEQUENCE {
   satelliteID [0] SatelliteID,
   tlmWord [1] TLMWord,
   antiSpoof [2] AntiSpoofFlag,
   alert [3] AlertFlag,
   tlmRsvdBits [4] TLMReservedBits
}
*/
typedef struct EXTERN rrlp_GPSTOWAssistElement {
   rrlp_SatelliteID satelliteID;
   rrlp_TLMWord tlmWord;
   rrlp_AntiSpoofFlag antiSpoof;
   rrlp_AlertFlag alert;
   rrlp_TLMReservedBits tlmRsvdBits;
} rrlp_GPSTOWAssistElement;

EXTERN int asn1PE_rrlp_GPSTOWAssistElement (OSCTXT* pctxt, rrlp_GPSTOWAssistElement* pvalue);

EXTERN int asn1PD_rrlp_GPSTOWAssistElement (OSCTXT* pctxt, rrlp_GPSTOWAssistElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSTOWAssist                                              */
/*                                                            */
/**************************************************************/
/*
 GPSTOWAssist consists of TLM message, Anti-spoof flag, Alert flag, and 2 reserved bits in TLM Word
 for each visible satellite.
 N_SAT can be read from number of elements in GPSTOWAssist

GPSTOWAssist ::= SEQUENCE (SIZE (1..12)) OF GPSTOWAssistElement
*/
typedef struct EXTERN rrlp_GPSTOWAssist {
   OSUINT32 n;
   rrlp_GPSTOWAssistElement *elem;
} rrlp_GPSTOWAssist;

EXTERN int asn1PE_rrlp_GPSTOWAssist (OSCTXT* pctxt, rrlp_GPSTOWAssist* pvalue);

EXTERN int asn1PD_rrlp_GPSTOWAssist (OSCTXT* pctxt, rrlp_GPSTOWAssist* pvalue);

EXTERN void asn1Free_rrlp_GPSTOWAssist (OSCTXT *pctxt, rrlp_GPSTOWAssist* pvalue);

/**************************************************************/
/*                                                            */
/*  ReferenceTime                                             */
/*                                                            */
/**************************************************************/
/*
ReferenceTime ::= SEQUENCE {
   gpsTime [0] GPSTime,
   gsmTime [1] GSMTime OPTIONAL,
   gpsTowAssist [2] GPSTOWAssist OPTIONAL
}
*/
typedef struct EXTERN rrlp_ReferenceTime {
   struct {
      unsigned gsmTimePresent : 1;
      unsigned gpsTowAssistPresent : 1;
   } m;
   rrlp_GPSTime gpsTime;
   rrlp_GSMTime gsmTime;
   rrlp_GPSTOWAssist gpsTowAssist;
} rrlp_ReferenceTime;

EXTERN int asn1PE_rrlp_ReferenceTime (OSCTXT* pctxt, rrlp_ReferenceTime* pvalue);

EXTERN int asn1PD_rrlp_ReferenceTime (OSCTXT* pctxt, rrlp_ReferenceTime* pvalue);

EXTERN void asn1Free_rrlp_ReferenceTime (OSCTXT *pctxt, rrlp_ReferenceTime* pvalue);

/**************************************************************/
/*                                                            */
/*  RefLocation                                               */
/*                                                            */
/**************************************************************/
/*
 Reference Location IE

RefLocation ::= SEQUENCE {
   threeDLocation [0] Ext-GeographicalInformation
}
*/
typedef struct EXTERN rrlp_RefLocation {
   rrlp_Ext_GeographicalInformation threeDLocation;
} rrlp_RefLocation;

EXTERN int asn1PE_rrlp_RefLocation (OSCTXT* pctxt, rrlp_RefLocation* pvalue);

EXTERN int asn1PD_rrlp_RefLocation (OSCTXT* pctxt, rrlp_RefLocation* pvalue);

/**************************************************************/
/*                                                            */
/*  SatElement                                                */
/*                                                            */
/**************************************************************/
/*
 number of correction for satellites

SatElement ::= SEQUENCE {
   satelliteID [0] SatelliteID,
   iode [1] INTEGER (0..239),
   udre [2] INTEGER (0..3),
   pseudoRangeCor [3] INTEGER (-2047..2047),
   rangeRateCor [4] INTEGER (-127..127),
   deltaPseudoRangeCor2 [5] INTEGER (-127..127),
   deltaRangeRateCor2 [6] INTEGER (-7..7),
   deltaPseudoRangeCor3 [7] INTEGER (-127..127),
   deltaRangeRateCor3 [8] INTEGER (-7..7)
}
*/
typedef struct EXTERN rrlp_SatElement {
   rrlp_SatelliteID satelliteID;
   OSUINT8 iode;
   OSUINT8 udre;
   OSINT16 pseudoRangeCor;
   OSINT8 rangeRateCor;
   OSINT8 deltaPseudoRangeCor2;
   OSINT8 deltaRangeRateCor2;
   OSINT8 deltaPseudoRangeCor3;
   OSINT8 deltaRangeRateCor3;
} rrlp_SatElement;

EXTERN int asn1PE_rrlp_SatElement (OSCTXT* pctxt, rrlp_SatElement* pvalue);

EXTERN int asn1PD_rrlp_SatElement (OSCTXT* pctxt, rrlp_SatElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfSatElement                                           */
/*                                                            */
/**************************************************************/
/*
SeqOfSatElement ::= SEQUENCE (SIZE (1..16)) OF SatElement
*/
typedef struct EXTERN rrlp_SeqOfSatElement {
   OSUINT32 n;
   rrlp_SatElement *elem;
} rrlp_SeqOfSatElement;

EXTERN int asn1PE_rrlp_SeqOfSatElement (OSCTXT* pctxt, rrlp_SeqOfSatElement* pvalue);

EXTERN int asn1PD_rrlp_SeqOfSatElement (OSCTXT* pctxt, rrlp_SeqOfSatElement* pvalue);

EXTERN void asn1Free_rrlp_SeqOfSatElement (OSCTXT *pctxt, 
   rrlp_SeqOfSatElement* pvalue);

/**************************************************************/
/*                                                            */
/*  DGPSCorrections                                           */
/*                                                            */
/**************************************************************/
/*
 DGPS Corrections IE

DGPSCorrections ::= SEQUENCE {
   gpsTOW [0] INTEGER (0..604799),
   status [1] INTEGER (0..7),
   satList [2] SeqOfSatElement
}
*/
typedef struct EXTERN rrlp_DGPSCorrections {
   OSUINT32 gpsTOW;
   OSUINT8 status;
   rrlp_SeqOfSatElement satList;
} rrlp_DGPSCorrections;

EXTERN int asn1PE_rrlp_DGPSCorrections (OSCTXT* pctxt, rrlp_DGPSCorrections* pvalue);

EXTERN int asn1PD_rrlp_DGPSCorrections (OSCTXT* pctxt, rrlp_DGPSCorrections* pvalue);

EXTERN void asn1Free_rrlp_DGPSCorrections (OSCTXT *pctxt, 
   rrlp_DGPSCorrections* pvalue);

/**************************************************************/
/*                                                            */
/*  EphemerisSubframe1Reserved                                */
/*                                                            */
/**************************************************************/
/*
 Reserved bits in subframe 1 of navigation message

EphemerisSubframe1Reserved ::= SEQUENCE {
   reserved1 [0] INTEGER (0..8388607),
   reserved2 [1] INTEGER (0..16777215),
   reserved3 [2] INTEGER (0..16777215),
   reserved4 [3] INTEGER (0..65535)
}
*/
typedef struct EXTERN rrlp_EphemerisSubframe1Reserved {
   OSUINT32 reserved1;
   OSUINT32 reserved2;
   OSUINT32 reserved3;
   OSUINT16 reserved4;
} rrlp_EphemerisSubframe1Reserved;

EXTERN int asn1PE_rrlp_EphemerisSubframe1Reserved (OSCTXT* pctxt, rrlp_EphemerisSubframe1Reserved* pvalue);

EXTERN int asn1PD_rrlp_EphemerisSubframe1Reserved (OSCTXT* pctxt, rrlp_EphemerisSubframe1Reserved* pvalue);

/**************************************************************/
/*                                                            */
/*  UncompressedEphemeris                                     */
/*                                                            */
/**************************************************************/
/*
 Uncompressed satellite emhemeris and clock corrections

UncompressedEphemeris ::= SEQUENCE {
   ephemCodeOnL2 [0] INTEGER (0..3),
   ephemURA [1] INTEGER (0..15),
   ephemSVhealth [2] INTEGER (0..63),
   ephemIODC [3] INTEGER (0..1023),
   ephemL2Pflag [4] INTEGER (0..1),
   ephemSF1Rsvd [5] EphemerisSubframe1Reserved,
   ephemTgd [6] INTEGER (-128..127),
   ephemToc [7] INTEGER (0..37799),
   ephemAF2 [8] INTEGER (-128..127),
   ephemAF1 [9] INTEGER (-32768..32767),
   ephemAF0 [10] INTEGER (-2097152..2097151),
   ephemCrs [11] INTEGER (-32768..32767),
   ephemDeltaN [12] INTEGER (-32768..32767),
   ephemM0 [13] INTEGER (-2147483648..2147483647),
   ephemCuc [14] INTEGER (-32768..32767),
   ephemE [15] INTEGER (0..4294967295),
   ephemCus [16] INTEGER (-32768..32767),
   ephemAPowerHalf [17] INTEGER (0..4294967295),
   ephemToe [18] INTEGER (0..37799),
   ephemFitFlag [19] INTEGER (0..1),
   ephemAODA [20] INTEGER (0..31),
   ephemCic [21] INTEGER (-32768..32767),
   ephemOmegaA0 [22] INTEGER (-2147483648..2147483647),
   ephemCis [23] INTEGER (-32768..32767),
   ephemI0 [24] INTEGER (-2147483648..2147483647),
   ephemCrc [25] INTEGER (-32768..32767),
   ephemW [26] INTEGER (-2147483648..2147483647),
   ephemOmegaADot [27] INTEGER (-8388608..8388607),
   ephemIDot [28] INTEGER (-8192..8191)
}
*/
typedef struct EXTERN rrlp_UncompressedEphemeris {
   OSUINT8 ephemCodeOnL2;
   OSUINT8 ephemURA;
   OSUINT8 ephemSVhealth;
   OSUINT16 ephemIODC;
   OSUINT8 ephemL2Pflag;
   rrlp_EphemerisSubframe1Reserved ephemSF1Rsvd;
   OSINT8 ephemTgd;
   OSUINT16 ephemToc;
   OSINT8 ephemAF2;
   OSINT16 ephemAF1;
   OSINT32 ephemAF0;
   OSINT16 ephemCrs;
   OSINT16 ephemDeltaN;
   OSINT32 ephemM0;
   OSINT16 ephemCuc;
   OSUINT32 ephemE;
   OSINT16 ephemCus;
   OSUINT32 ephemAPowerHalf;
   OSUINT16 ephemToe;
   OSUINT8 ephemFitFlag;
   OSUINT8 ephemAODA;
   OSINT16 ephemCic;
   OSINT32 ephemOmegaA0;
   OSINT16 ephemCis;
   OSINT32 ephemI0;
   OSINT16 ephemCrc;
   OSINT32 ephemW;
   OSINT32 ephemOmegaADot;
   OSINT16 ephemIDot;
} rrlp_UncompressedEphemeris;

EXTERN int asn1PE_rrlp_UncompressedEphemeris (OSCTXT* pctxt, rrlp_UncompressedEphemeris* pvalue);

EXTERN int asn1PD_rrlp_UncompressedEphemeris (OSCTXT* pctxt, rrlp_UncompressedEphemeris* pvalue);

/**************************************************************/
/*                                                            */
/*  SatStatus                                                 */
/*                                                            */
/**************************************************************/
/*
 the Status of the navigation model

SatStatus ::= CHOICE {
   newSatelliteAndModelUC [0] UncompressedEphemeris,
   oldSatelliteAndModel [1] NULL,
   newNaviModelUC [2] UncompressedEphemeris,
   ...
}
*/
/* Choice tag constants */

#define T_rrlp_SatStatus_newSatelliteAndModelUC 1
#define T_rrlp_SatStatus_oldSatelliteAndModel 2
#define T_rrlp_SatStatus_newNaviModelUC 3
#define T_rrlp_SatStatus_extElem1       4

typedef struct EXTERN rrlp_SatStatus {
   OSUINT32 t;
   union {
      /* t = 1 */
      rrlp_UncompressedEphemeris *newSatelliteAndModelUC;
      /* t = 2 */
      /* t = 3 */
      rrlp_UncompressedEphemeris *newNaviModelUC;
      /* t = 4 */
      ASN1OpenType *extElem1;
   } u;
} rrlp_SatStatus;

EXTERN int asn1PE_rrlp_SatStatus (OSCTXT* pctxt, rrlp_SatStatus* pvalue);

EXTERN int asn1PD_rrlp_SatStatus (OSCTXT* pctxt, rrlp_SatStatus* pvalue);

EXTERN void asn1Free_rrlp_SatStatus (OSCTXT *pctxt, rrlp_SatStatus* pvalue);

/**************************************************************/
/*                                                            */
/*  NavModelElement                                           */
/*                                                            */
/**************************************************************/
/*
NavModelElement ::= SEQUENCE {
   satelliteID [0] SatelliteID,
   satStatus [1] SatStatus
}
*/
typedef struct EXTERN rrlp_NavModelElement {
   rrlp_SatelliteID satelliteID;
   rrlp_SatStatus satStatus;
} rrlp_NavModelElement;

EXTERN int asn1PE_rrlp_NavModelElement (OSCTXT* pctxt, rrlp_NavModelElement* pvalue);

EXTERN int asn1PD_rrlp_NavModelElement (OSCTXT* pctxt, rrlp_NavModelElement* pvalue);

EXTERN void asn1Free_rrlp_NavModelElement (OSCTXT *pctxt, 
   rrlp_NavModelElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfNavModelElement                                      */
/*                                                            */
/**************************************************************/
/*
 navigation model satellite list

SeqOfNavModelElement ::= SEQUENCE (SIZE (1..16)) OF NavModelElement
*/
typedef struct EXTERN rrlp_SeqOfNavModelElement {
   OSUINT32 n;
   rrlp_NavModelElement *elem;
} rrlp_SeqOfNavModelElement;

EXTERN int asn1PE_rrlp_SeqOfNavModelElement (OSCTXT* pctxt, rrlp_SeqOfNavModelElement* pvalue);

EXTERN int asn1PD_rrlp_SeqOfNavModelElement (OSCTXT* pctxt, rrlp_SeqOfNavModelElement* pvalue);

EXTERN void asn1Free_rrlp_SeqOfNavModelElement (OSCTXT *pctxt, 
   rrlp_SeqOfNavModelElement* pvalue);

/**************************************************************/
/*                                                            */
/*  NavigationModel                                           */
/*                                                            */
/**************************************************************/
/*
 identifies satellite
 Navigation Model IE

NavigationModel ::= SEQUENCE {
   navModelList [0] SeqOfNavModelElement
}
*/
typedef struct EXTERN rrlp_NavigationModel {
   rrlp_SeqOfNavModelElement navModelList;
} rrlp_NavigationModel;

EXTERN int asn1PE_rrlp_NavigationModel (OSCTXT* pctxt, rrlp_NavigationModel* pvalue);

EXTERN int asn1PD_rrlp_NavigationModel (OSCTXT* pctxt, rrlp_NavigationModel* pvalue);

EXTERN void asn1Free_rrlp_NavigationModel (OSCTXT *pctxt, 
   rrlp_NavigationModel* pvalue);

/**************************************************************/
/*                                                            */
/*  IonosphericModel                                          */
/*                                                            */
/**************************************************************/
/*
 Ionospheric Model IE

IonosphericModel ::= SEQUENCE {
   alfa0 [0] INTEGER (-128..127),
   alfa1 [1] INTEGER (-128..127),
   alfa2 [2] INTEGER (-128..127),
   alfa3 [3] INTEGER (-128..127),
   beta0 [4] INTEGER (-128..127),
   beta1 [5] INTEGER (-128..127),
   beta2 [6] INTEGER (-128..127),
   beta3 [7] INTEGER (-128..127)
}
*/
typedef struct EXTERN rrlp_IonosphericModel {
   OSINT8 alfa0;
   OSINT8 alfa1;
   OSINT8 alfa2;
   OSINT8 alfa3;
   OSINT8 beta0;
   OSINT8 beta1;
   OSINT8 beta2;
   OSINT8 beta3;
} rrlp_IonosphericModel;

EXTERN int asn1PE_rrlp_IonosphericModel (OSCTXT* pctxt, rrlp_IonosphericModel* pvalue);

EXTERN int asn1PD_rrlp_IonosphericModel (OSCTXT* pctxt, rrlp_IonosphericModel* pvalue);

/**************************************************************/
/*                                                            */
/*  UTCModel                                                  */
/*                                                            */
/**************************************************************/
/*
 Universal Time Coordinate Model

UTCModel ::= SEQUENCE {
   utcA1 [0] INTEGER (-8388608..8388607),
   utcA0 [1] INTEGER (-2147483648..2147483647),
   utcTot [2] INTEGER (0..255),
   utcWNt [3] INTEGER (0..255),
   utcDeltaTls [4] INTEGER (-128..127),
   utcWNlsf [5] INTEGER (0..255),
   utcDN [6] INTEGER (-128..127),
   utcDeltaTlsf [7] INTEGER (-128..127)
}
*/
typedef struct EXTERN rrlp_UTCModel {
   OSINT32 utcA1;
   OSINT32 utcA0;
   OSUINT8 utcTot;
   OSUINT8 utcWNt;
   OSINT8 utcDeltaTls;
   OSUINT8 utcWNlsf;
   OSINT8 utcDN;
   OSINT8 utcDeltaTlsf;
} rrlp_UTCModel;

EXTERN int asn1PE_rrlp_UTCModel (OSCTXT* pctxt, rrlp_UTCModel* pvalue);

EXTERN int asn1PD_rrlp_UTCModel (OSCTXT* pctxt, rrlp_UTCModel* pvalue);

/**************************************************************/
/*                                                            */
/*  AlmanacElement                                            */
/*                                                            */
/**************************************************************/
/*
 Almanac info once per satellite

AlmanacElement ::= SEQUENCE {
   satelliteID [0] SatelliteID,
   almanacE [1] INTEGER (0..65535),
   alamanacToa [2] INTEGER (0..255),
   almanacKsii [3] INTEGER (-32768..32767),
   almanacOmegaDot [4] INTEGER (-32768..32767),
   almanacSVhealth [5] INTEGER (0..255),
   almanacAPowerHalf [6] INTEGER (0..16777215),
   almanacOmega0 [7] INTEGER (-8388608..8388607),
   almanacW [8] INTEGER (-8388608..8388607),
   almanacM0 [9] INTEGER (-8388608..8388607),
   almanacAF0 [10] INTEGER (-1024..1023),
   almanacAF1 [11] INTEGER (-1024..1023)
}
*/
typedef struct EXTERN rrlp_AlmanacElement {
   rrlp_SatelliteID satelliteID;
   OSUINT16 almanacE;
   OSUINT8 alamanacToa;
   OSINT16 almanacKsii;
   OSINT16 almanacOmegaDot;
   OSUINT8 almanacSVhealth;
   OSUINT32 almanacAPowerHalf;
   OSINT32 almanacOmega0;
   OSINT32 almanacW;
   OSINT32 almanacM0;
   OSINT16 almanacAF0;
   OSINT16 almanacAF1;
} rrlp_AlmanacElement;

EXTERN int asn1PE_rrlp_AlmanacElement (OSCTXT* pctxt, rrlp_AlmanacElement* pvalue);

EXTERN int asn1PD_rrlp_AlmanacElement (OSCTXT* pctxt, rrlp_AlmanacElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfAlmanacElement                                       */
/*                                                            */
/**************************************************************/
/*
SeqOfAlmanacElement ::= SEQUENCE (SIZE (1..64)) OF AlmanacElement
*/
typedef struct EXTERN rrlp_SeqOfAlmanacElement {
   OSUINT32 n;
   rrlp_AlmanacElement *elem;
} rrlp_SeqOfAlmanacElement;

EXTERN int asn1PE_rrlp_SeqOfAlmanacElement (OSCTXT* pctxt, rrlp_SeqOfAlmanacElement* pvalue);

EXTERN int asn1PD_rrlp_SeqOfAlmanacElement (OSCTXT* pctxt, rrlp_SeqOfAlmanacElement* pvalue);

EXTERN void asn1Free_rrlp_SeqOfAlmanacElement (OSCTXT *pctxt, 
   rrlp_SeqOfAlmanacElement* pvalue);

/**************************************************************/
/*                                                            */
/*  Almanac                                                   */
/*                                                            */
/**************************************************************/
/*
 Almanac, Long term model
 NOTE: These are parameters are subset of the ephemeris
 NOTE: But with reduced resolution and accuracy

Almanac ::= SEQUENCE {
   alamanacWNa [0] INTEGER (0..255),
   almanacList [1] SeqOfAlmanacElement
}
*/
typedef struct EXTERN rrlp_Almanac {
   OSUINT8 alamanacWNa;
   rrlp_SeqOfAlmanacElement almanacList;
} rrlp_Almanac;

EXTERN int asn1PE_rrlp_Almanac (OSCTXT* pctxt, rrlp_Almanac* pvalue);

EXTERN int asn1PD_rrlp_Almanac (OSCTXT* pctxt, rrlp_Almanac* pvalue);

EXTERN void asn1Free_rrlp_Almanac (OSCTXT *pctxt, rrlp_Almanac* pvalue);

/**************************************************************/
/*                                                            */
/*  TimeRelation                                              */
/*                                                            */
/**************************************************************/
/*
 the relationship between GPS time and air-interface timing

TimeRelation ::= SEQUENCE {
   gpsTOW [0] GPSTOW23b,
   gsmTime [1] GSMTime OPTIONAL
}
*/
typedef struct EXTERN rrlp_TimeRelation {
   struct {
      unsigned gsmTimePresent : 1;
   } m;
   rrlp_GPSTOW23b gpsTOW;
   rrlp_GSMTime gsmTime;
} rrlp_TimeRelation;

EXTERN int asn1PE_rrlp_TimeRelation (OSCTXT* pctxt, rrlp_TimeRelation* pvalue);

EXTERN int asn1PD_rrlp_TimeRelation (OSCTXT* pctxt, rrlp_TimeRelation* pvalue);

/**************************************************************/
/*                                                            */
/*  AddionalDopplerFields                                     */
/*                                                            */
/**************************************************************/
/*
AddionalDopplerFields ::= SEQUENCE {
   doppler1 [0] INTEGER (0..63),
   dopplerUncertainty [1] INTEGER (0..7)
}
*/
typedef struct EXTERN rrlp_AddionalDopplerFields {
   OSUINT8 doppler1;
   OSUINT8 dopplerUncertainty;
} rrlp_AddionalDopplerFields;

EXTERN int asn1PE_rrlp_AddionalDopplerFields (OSCTXT* pctxt, rrlp_AddionalDopplerFields* pvalue);

EXTERN int asn1PD_rrlp_AddionalDopplerFields (OSCTXT* pctxt, rrlp_AddionalDopplerFields* pvalue);

/**************************************************************/
/*                                                            */
/*  AddionalAngleFields                                       */
/*                                                            */
/**************************************************************/
/*
AddionalAngleFields ::= SEQUENCE {
   azimuth [0] INTEGER (0..31),
   elevation [1] INTEGER (0..7)
}
*/
typedef struct EXTERN rrlp_AddionalAngleFields {
   OSUINT8 azimuth;
   OSUINT8 elevation;
} rrlp_AddionalAngleFields;

EXTERN int asn1PE_rrlp_AddionalAngleFields (OSCTXT* pctxt, rrlp_AddionalAngleFields* pvalue);

EXTERN int asn1PD_rrlp_AddionalAngleFields (OSCTXT* pctxt, rrlp_AddionalAngleFields* pvalue);

/**************************************************************/
/*                                                            */
/*  AcquisElement                                             */
/*                                                            */
/**************************************************************/
/*
 data occuring per number of satellites

AcquisElement ::= SEQUENCE {
   svid [0] SatelliteID,
   doppler0 [1] INTEGER (-2048..2047),
   addionalDoppler [2] AddionalDopplerFields OPTIONAL,
   codePhase [3] INTEGER (0..1022),
   intCodePhase [4] INTEGER (0..19),
   gpsBitNumber [5] INTEGER (0..3),
   codePhaseSearchWindow [6] INTEGER (0..15),
   addionalAngle [7] AddionalAngleFields OPTIONAL
}
*/
typedef struct EXTERN rrlp_AcquisElement {
   struct {
      unsigned addionalDopplerPresent : 1;
      unsigned addionalAnglePresent : 1;
   } m;
   rrlp_SatelliteID svid;
   OSINT16 doppler0;
   rrlp_AddionalDopplerFields addionalDoppler;
   OSUINT16 codePhase;
   OSUINT8 intCodePhase;
   OSUINT8 gpsBitNumber;
   OSUINT8 codePhaseSearchWindow;
   rrlp_AddionalAngleFields addionalAngle;
} rrlp_AcquisElement;

EXTERN int asn1PE_rrlp_AcquisElement (OSCTXT* pctxt, rrlp_AcquisElement* pvalue);

EXTERN int asn1PD_rrlp_AcquisElement (OSCTXT* pctxt, rrlp_AcquisElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfAcquisElement                                        */
/*                                                            */
/**************************************************************/
/*
SeqOfAcquisElement ::= SEQUENCE (SIZE (1..16)) OF AcquisElement
*/
typedef struct EXTERN rrlp_SeqOfAcquisElement {
   OSUINT32 n;
   rrlp_AcquisElement *elem;
} rrlp_SeqOfAcquisElement;

EXTERN int asn1PE_rrlp_SeqOfAcquisElement (OSCTXT* pctxt, rrlp_SeqOfAcquisElement* pvalue);

EXTERN int asn1PD_rrlp_SeqOfAcquisElement (OSCTXT* pctxt, rrlp_SeqOfAcquisElement* pvalue);

EXTERN void asn1Free_rrlp_SeqOfAcquisElement (OSCTXT *pctxt, 
   rrlp_SeqOfAcquisElement* pvalue);

/**************************************************************/
/*                                                            */
/*  AcquisAssist                                              */
/*                                                            */
/**************************************************************/
/*
 Acquisition Assistance

AcquisAssist ::= SEQUENCE {
   timeRelation [0] TimeRelation,
   acquisList [1] SeqOfAcquisElement
}
*/
typedef struct EXTERN rrlp_AcquisAssist {
   rrlp_TimeRelation timeRelation;
   rrlp_SeqOfAcquisElement acquisList;
} rrlp_AcquisAssist;

EXTERN int asn1PE_rrlp_AcquisAssist (OSCTXT* pctxt, rrlp_AcquisAssist* pvalue);

EXTERN int asn1PD_rrlp_AcquisAssist (OSCTXT* pctxt, rrlp_AcquisAssist* pvalue);

EXTERN void asn1Free_rrlp_AcquisAssist (OSCTXT *pctxt, rrlp_AcquisAssist* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOf_BadSatelliteSet                                     */
/*                                                            */
/**************************************************************/
/*
 Real-Time Integrity
 number of bad satellites can be read from this element

SeqOf-BadSatelliteSet ::= SEQUENCE (SIZE (1..16)) OF SatelliteID
*/
typedef struct EXTERN rrlp_SeqOf_BadSatelliteSet {
   OSUINT32 n;
   rrlp_SatelliteID *elem;
} rrlp_SeqOf_BadSatelliteSet;

EXTERN int asn1PE_rrlp_SeqOf_BadSatelliteSet (OSCTXT* pctxt, rrlp_SeqOf_BadSatelliteSet* pvalue);

EXTERN int asn1PD_rrlp_SeqOf_BadSatelliteSet (OSCTXT* pctxt, rrlp_SeqOf_BadSatelliteSet* pvalue);

EXTERN void asn1Free_rrlp_SeqOf_BadSatelliteSet (OSCTXT *pctxt, 
   rrlp_SeqOf_BadSatelliteSet* pvalue);

/**************************************************************/
/*                                                            */
/*  ControlHeader                                             */
/*                                                            */
/**************************************************************/
/*
 Control header of the GPS assistance data

ControlHeader ::= SEQUENCE {
   referenceTime [0] ReferenceTime OPTIONAL,
   refLocation [1] RefLocation OPTIONAL,
   dgpsCorrections [2] DGPSCorrections OPTIONAL,
   navigationModel [3] NavigationModel OPTIONAL,
   ionosphericModel [4] IonosphericModel OPTIONAL,
   utcModel [5] UTCModel OPTIONAL,
   almanac [6] Almanac OPTIONAL,
   acquisAssist [7] AcquisAssist OPTIONAL,
   realTimeIntegrity [8] SeqOf-BadSatelliteSet OPTIONAL
}
*/
typedef struct EXTERN rrlp_ControlHeader {
   struct {
      unsigned referenceTimePresent : 1;
      unsigned refLocationPresent : 1;
      unsigned dgpsCorrectionsPresent : 1;
      unsigned navigationModelPresent : 1;
      unsigned ionosphericModelPresent : 1;
      unsigned utcModelPresent : 1;
      unsigned almanacPresent : 1;
      unsigned acquisAssistPresent : 1;
      unsigned realTimeIntegrityPresent : 1;
   } m;
   rrlp_ReferenceTime referenceTime;
   rrlp_RefLocation refLocation;
   rrlp_DGPSCorrections dgpsCorrections;
   rrlp_NavigationModel navigationModel;
   rrlp_IonosphericModel ionosphericModel;
   rrlp_UTCModel utcModel;
   rrlp_Almanac almanac;
   rrlp_AcquisAssist acquisAssist;
   rrlp_SeqOf_BadSatelliteSet realTimeIntegrity;
} rrlp_ControlHeader;

EXTERN int asn1PE_rrlp_ControlHeader (OSCTXT* pctxt, rrlp_ControlHeader* pvalue);

EXTERN int asn1PD_rrlp_ControlHeader (OSCTXT* pctxt, rrlp_ControlHeader* pvalue);

EXTERN void asn1Free_rrlp_ControlHeader (OSCTXT *pctxt, rrlp_ControlHeader* pvalue);

/**************************************************************/
/*                                                            */
/*  GPS_AssistData                                            */
/*                                                            */
/**************************************************************/
/*
 exception handling:
 an unrecognized value shall be treated the same as value 0
 GPS assistance data IE

GPS-AssistData ::= SEQUENCE {
   controlHeader [0] ControlHeader
}
*/
typedef struct EXTERN rrlp_GPS_AssistData {
   rrlp_ControlHeader controlHeader;
} rrlp_GPS_AssistData;

EXTERN int asn1PE_rrlp_GPS_AssistData (OSCTXT* pctxt, rrlp_GPS_AssistData* pvalue);

EXTERN int asn1PD_rrlp_GPS_AssistData (OSCTXT* pctxt, rrlp_GPS_AssistData* pvalue);

EXTERN void asn1Free_rrlp_GPS_AssistData (OSCTXT *pctxt, rrlp_GPS_AssistData* pvalue);

/**************************************************************/
/*                                                            */
/*  ExpectedOTD                                               */
/*                                                            */
/**************************************************************/
/*
 Expected OTD value between nbor base station and reference BTS
 at MS's current estimated location.

ExpectedOTD ::= INTEGER (0..1250)
*/
typedef OSUINT16 rrlp_ExpectedOTD;

EXTERN int asn1PE_rrlp_ExpectedOTD (OSCTXT* pctxt, rrlp_ExpectedOTD value);

EXTERN int asn1PD_rrlp_ExpectedOTD (OSCTXT* pctxt, rrlp_ExpectedOTD* pvalue);

/**************************************************************/
/*                                                            */
/*  ExpOTDUncertainty                                         */
/*                                                            */
/**************************************************************/
/*
 The ExpectedOTD value 1250 shall not be encoded by the transmitting entity and
 shall be treated by the receiving entity as 0.
 Uncertainty of Exptected OTD in bits

ExpOTDUncertainty ::= INTEGER (0..7)
*/
typedef OSUINT8 rrlp_ExpOTDUncertainty;

EXTERN int asn1PE_rrlp_ExpOTDUncertainty (OSCTXT* pctxt, rrlp_ExpOTDUncertainty value);

EXTERN int asn1PD_rrlp_ExpOTDUncertainty (OSCTXT* pctxt, rrlp_ExpOTDUncertainty* pvalue);

/**************************************************************/
/*                                                            */
/*  MsrAssistBTS_R98_ExpOTD                                   */
/*                                                            */
/**************************************************************/
/*
 This element completes MsrAssistBTS IE

MsrAssistBTS-R98-ExpOTD ::= SEQUENCE {
   expectedOTD [0] ExpectedOTD,
   expOTDUncertainty [1] ExpOTDUncertainty
}
*/
typedef struct EXTERN rrlp_MsrAssistBTS_R98_ExpOTD {
   rrlp_ExpectedOTD expectedOTD;
   rrlp_ExpOTDUncertainty expOTDUncertainty;
} rrlp_MsrAssistBTS_R98_ExpOTD;

EXTERN int asn1PE_rrlp_MsrAssistBTS_R98_ExpOTD (OSCTXT* pctxt, rrlp_MsrAssistBTS_R98_ExpOTD* pvalue);

EXTERN int asn1PD_rrlp_MsrAssistBTS_R98_ExpOTD (OSCTXT* pctxt, rrlp_MsrAssistBTS_R98_ExpOTD* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfMsrAssistBTS_R98_ExpOTD                              */
/*                                                            */
/**************************************************************/
/*
 Indexes in SeqOfMsrAssistBTS-R98-ExpOTD refer to SeqOfMsrAssistBTS
 If the index exceeds the SegOfMsrAssistBTS range or if there is other
 inconsistencies between the BTS indices, the MS shall apply protocol
 error cause incorrectData

SeqOfMsrAssistBTS-R98-ExpOTD ::= SEQUENCE (SIZE (1..15)) OF MsrAssistBTS-R98-ExpOTD
*/
typedef struct EXTERN rrlp_SeqOfMsrAssistBTS_R98_ExpOTD {
   OSUINT32 n;
   rrlp_MsrAssistBTS_R98_ExpOTD *elem;
} rrlp_SeqOfMsrAssistBTS_R98_ExpOTD;

EXTERN int asn1PE_rrlp_SeqOfMsrAssistBTS_R98_ExpOTD (OSCTXT* pctxt, rrlp_SeqOfMsrAssistBTS_R98_ExpOTD* pvalue);

EXTERN int asn1PD_rrlp_SeqOfMsrAssistBTS_R98_ExpOTD (OSCTXT* pctxt, rrlp_SeqOfMsrAssistBTS_R98_ExpOTD* pvalue);

EXTERN void asn1Free_rrlp_SeqOfMsrAssistBTS_R98_ExpOTD (OSCTXT *pctxt, 
   rrlp_SeqOfMsrAssistBTS_R98_ExpOTD* pvalue);

/**************************************************************/
/*                                                            */
/*  MsrAssistData_R98_ExpOTD                                  */
/*                                                            */
/**************************************************************/
/*
 MsrAssistData R98 extension

MsrAssistData-R98-ExpOTD ::= SEQUENCE {
   msrAssistList-R98-ExpOTD [0] SeqOfMsrAssistBTS-R98-ExpOTD
}
*/
typedef struct EXTERN rrlp_MsrAssistData_R98_ExpOTD {
   rrlp_SeqOfMsrAssistBTS_R98_ExpOTD msrAssistList_R98_ExpOTD;
} rrlp_MsrAssistData_R98_ExpOTD;

EXTERN int asn1PE_rrlp_MsrAssistData_R98_ExpOTD (OSCTXT* pctxt, rrlp_MsrAssistData_R98_ExpOTD* pvalue);

EXTERN int asn1PD_rrlp_MsrAssistData_R98_ExpOTD (OSCTXT* pctxt, rrlp_MsrAssistData_R98_ExpOTD* pvalue);

EXTERN void asn1Free_rrlp_MsrAssistData_R98_ExpOTD (OSCTXT *pctxt, 
   rrlp_MsrAssistData_R98_ExpOTD* pvalue);

/**************************************************************/
/*                                                            */
/*  AssistBTSData_R98_ExpOTD                                  */
/*                                                            */
/**************************************************************/
/*
 This element completes AssistBTSData IE

AssistBTSData-R98-ExpOTD ::= SEQUENCE {
   expectedOTD [0] ExpectedOTD,
   expOTDuncertainty [1] ExpOTDUncertainty
}
*/
typedef struct EXTERN rrlp_AssistBTSData_R98_ExpOTD {
   rrlp_ExpectedOTD expectedOTD;
   rrlp_ExpOTDUncertainty expOTDuncertainty;
} rrlp_AssistBTSData_R98_ExpOTD;

EXTERN int asn1PE_rrlp_AssistBTSData_R98_ExpOTD (OSCTXT* pctxt, rrlp_AssistBTSData_R98_ExpOTD* pvalue);

EXTERN int asn1PD_rrlp_AssistBTSData_R98_ExpOTD (OSCTXT* pctxt, rrlp_AssistBTSData_R98_ExpOTD* pvalue);

/**************************************************************/
/*                                                            */
/*  SystemInfoAssistBTS_R98_ExpOTD                            */
/*                                                            */
/**************************************************************/
/*
 whether n.th is present or not ?

SystemInfoAssistBTS-R98-ExpOTD ::= CHOICE {
   notPresent [0] NULL,
   present [1] AssistBTSData-R98-ExpOTD
}
*/
/* Choice tag constants */

#define T_rrlp_SystemInfoAssistBTS_R98_ExpOTD_notPresent 1
#define T_rrlp_SystemInfoAssistBTS_R98_ExpOTD_present 2

typedef struct EXTERN rrlp_SystemInfoAssistBTS_R98_ExpOTD {
   OSUINT32 t;
   union {
      /* t = 1 */
      /* t = 2 */
      rrlp_AssistBTSData_R98_ExpOTD *present;
   } u;
} rrlp_SystemInfoAssistBTS_R98_ExpOTD;

EXTERN int asn1PE_rrlp_SystemInfoAssistBTS_R98_ExpOTD (OSCTXT* pctxt, rrlp_SystemInfoAssistBTS_R98_ExpOTD* pvalue);

EXTERN int asn1PD_rrlp_SystemInfoAssistBTS_R98_ExpOTD (OSCTXT* pctxt, rrlp_SystemInfoAssistBTS_R98_ExpOTD* pvalue);

EXTERN void asn1Free_rrlp_SystemInfoAssistBTS_R98_ExpOTD (OSCTXT *pctxt, 
   rrlp_SystemInfoAssistBTS_R98_ExpOTD* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfSystemInfoAssistBTS_R98_ExpOTD                       */
/*                                                            */
/**************************************************************/
/*
 SeqOfSystemInfoAssistBTS-R98-ExpOTD index refer to SeqOfSystemInfoAssistBTS
 If the index exceeds the SegOfSystemInfoAssistBTS range or if there is other
 inconsistencies between the BTS indices, the MS shall apply protocol
 error cause incorrectData

SeqOfSystemInfoAssistBTS-R98-ExpOTD ::= SEQUENCE (SIZE (1..32)) OF SystemInfoAssistBTS-R98-ExpOTD
*/
typedef struct EXTERN rrlp_SeqOfSystemInfoAssistBTS_R98_ExpOTD {
   OSUINT32 n;
   rrlp_SystemInfoAssistBTS_R98_ExpOTD *elem;
} rrlp_SeqOfSystemInfoAssistBTS_R98_ExpOTD;

EXTERN int asn1PE_rrlp_SeqOfSystemInfoAssistBTS_R98_ExpOTD (OSCTXT* pctxt, rrlp_SeqOfSystemInfoAssistBTS_R98_ExpOTD* pvalue);

EXTERN int asn1PD_rrlp_SeqOfSystemInfoAssistBTS_R98_ExpOTD (OSCTXT* pctxt, rrlp_SeqOfSystemInfoAssistBTS_R98_ExpOTD* pvalue);

EXTERN void asn1Free_rrlp_SeqOfSystemInfoAssistBTS_R98_ExpOTD (OSCTXT *pctxt, 
   rrlp_SeqOfSystemInfoAssistBTS_R98_ExpOTD* pvalue);

/**************************************************************/
/*                                                            */
/*  SystemInfoAssistData_R98_ExpOTD                           */
/*                                                            */
/**************************************************************/
/*
 SystemInfoAssistData R98 extension

SystemInfoAssistData-R98-ExpOTD ::= SEQUENCE {
   systemInfoAssistListR98-ExpOTD [0] SeqOfSystemInfoAssistBTS-R98-ExpOTD
}
*/
typedef struct EXTERN rrlp_SystemInfoAssistData_R98_ExpOTD {
   rrlp_SeqOfSystemInfoAssistBTS_R98_ExpOTD systemInfoAssistListR98_ExpOTD;
} rrlp_SystemInfoAssistData_R98_ExpOTD;

EXTERN int asn1PE_rrlp_SystemInfoAssistData_R98_ExpOTD (OSCTXT* pctxt, rrlp_SystemInfoAssistData_R98_ExpOTD* pvalue);

EXTERN int asn1PD_rrlp_SystemInfoAssistData_R98_ExpOTD (OSCTXT* pctxt, rrlp_SystemInfoAssistData_R98_ExpOTD* pvalue);

EXTERN void asn1Free_rrlp_SystemInfoAssistData_R98_ExpOTD (OSCTXT *pctxt, 
   rrlp_SystemInfoAssistData_R98_ExpOTD* pvalue);

/**************************************************************/
/*                                                            */
/*  Rel98_Ext_ExpOTD                                          */
/*                                                            */
/**************************************************************/
/*
 Release 98 ExpOTD extension

Rel98-Ext-ExpOTD ::= SEQUENCE {
   msrAssistData-R98-ExpOTD [0] MsrAssistData-R98-ExpOTD OPTIONAL,
   systemInfoAssistData-R98-ExpOTD [1] SystemInfoAssistData-R98-ExpOTD OPTIONAL
}
*/
typedef struct EXTERN rrlp_Rel98_Ext_ExpOTD {
   struct {
      unsigned msrAssistData_R98_ExpOTDPresent : 1;
      unsigned systemInfoAssistData_R98_ExpOTDPresent : 1;
   } m;
   rrlp_MsrAssistData_R98_ExpOTD msrAssistData_R98_ExpOTD;
   rrlp_SystemInfoAssistData_R98_ExpOTD systemInfoAssistData_R98_ExpOTD;
} rrlp_Rel98_Ext_ExpOTD;

EXTERN int asn1PE_rrlp_Rel98_Ext_ExpOTD (OSCTXT* pctxt, rrlp_Rel98_Ext_ExpOTD* pvalue);

EXTERN int asn1PD_rrlp_Rel98_Ext_ExpOTD (OSCTXT* pctxt, rrlp_Rel98_Ext_ExpOTD* pvalue);

EXTERN void asn1Free_rrlp_Rel98_Ext_ExpOTD (OSCTXT *pctxt, 
   rrlp_Rel98_Ext_ExpOTD* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSReferenceTimeUncertainty                               */
/*                                                            */
/**************************************************************/
/*
 Release 98 extensions

GPSReferenceTimeUncertainty ::= INTEGER (0..127)
*/
typedef OSUINT8 rrlp_GPSReferenceTimeUncertainty;

EXTERN int asn1PE_rrlp_GPSReferenceTimeUncertainty (OSCTXT* pctxt, rrlp_GPSReferenceTimeUncertainty value);

EXTERN int asn1PD_rrlp_GPSReferenceTimeUncertainty (OSCTXT* pctxt, rrlp_GPSReferenceTimeUncertainty* pvalue);

/**************************************************************/
/*                                                            */
/*  Rel98_MsrPosition_Req_Extension                           */
/*                                                            */
/**************************************************************/
/*
 Extension Elements
 Release 98 Extensions here

Rel98-MsrPosition-Req-Extension ::= SEQUENCE {
   rel98-Ext-ExpOTD [0] Rel98-Ext-ExpOTD OPTIONAL,
   ...,
   gpsTimeAssistanceMeasurementRequest [1] NULL OPTIONAL,
   gpsReferenceTimeUncertainty [2] GPSReferenceTimeUncertainty OPTIONAL
}
*/
typedef struct EXTERN rrlp_Rel98_MsrPosition_Req_Extension {
   struct {
      unsigned rel98_Ext_ExpOTDPresent : 1;
      unsigned gpsTimeAssistanceMeasurementRequestPresent : 1;
      unsigned gpsReferenceTimeUncertaintyPresent : 1;
   } m;
   rrlp_Rel98_Ext_ExpOTD rel98_Ext_ExpOTD;
   rrlp_GPSReferenceTimeUncertainty gpsReferenceTimeUncertainty;
   OSRTDList extElem1;
} rrlp_Rel98_MsrPosition_Req_Extension;

EXTERN int asn1PE_rrlp_Rel98_MsrPosition_Req_Extension (OSCTXT* pctxt, rrlp_Rel98_MsrPosition_Req_Extension* pvalue);

EXTERN int asn1PD_rrlp_Rel98_MsrPosition_Req_Extension (OSCTXT* pctxt, rrlp_Rel98_MsrPosition_Req_Extension* pvalue);

EXTERN void asn1Free_rrlp_Rel98_MsrPosition_Req_Extension (OSCTXT *pctxt, 
   rrlp_Rel98_MsrPosition_Req_Extension* pvalue);

/**************************************************************/
/*                                                            */
/*  Extended_reference                                        */
/*                                                            */
/**************************************************************/
/*
Extended-reference ::= SEQUENCE {
   smlc-code [0] INTEGER (0..63),
   transaction-ID [1] INTEGER (0..262143)
}
*/
typedef struct EXTERN rrlp_Extended_reference {
   OSUINT8 smlc_code;
   OSUINT32 transaction_ID;
} rrlp_Extended_reference;

EXTERN int asn1PE_rrlp_Extended_reference (OSCTXT* pctxt, rrlp_Extended_reference* pvalue);

EXTERN int asn1PD_rrlp_Extended_reference (OSCTXT* pctxt, rrlp_Extended_reference* pvalue);

/**************************************************************/
/*                                                            */
/*  Rel5_MsrPosition_Req_Extension                            */
/*                                                            */
/**************************************************************/
/*
Rel5-MsrPosition-Req-Extension ::= SEQUENCE {
   extended-reference [0] Extended-reference,
   ...
}
*/
typedef struct EXTERN rrlp_Rel5_MsrPosition_Req_Extension {
   rrlp_Extended_reference extended_reference;
   OSRTDList extElem1;
} rrlp_Rel5_MsrPosition_Req_Extension;

EXTERN int asn1PE_rrlp_Rel5_MsrPosition_Req_Extension (OSCTXT* pctxt, rrlp_Rel5_MsrPosition_Req_Extension* pvalue);

EXTERN int asn1PD_rrlp_Rel5_MsrPosition_Req_Extension (OSCTXT* pctxt, rrlp_Rel5_MsrPosition_Req_Extension* pvalue);

EXTERN void asn1Free_rrlp_Rel5_MsrPosition_Req_Extension (OSCTXT *pctxt, 
   rrlp_Rel5_MsrPosition_Req_Extension* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSPositioningMethod                                    */
/*                                                            */
/**************************************************************/
/*
 additional satellite systems may be added in future versions of the protocol

GANSSPositioningMethod ::= BIT STRING  { gps(0), galileo(1), sbas(2), modernizedGPS(3), qzss(4), glonass(5) } (SIZE (2..16))
*/
/* Named bit constants */

#define rrlp_GANSSPositioningMethod_rrlp_gps                        0
#define rrlp_GANSSPositioningMethod_rrlp_galileo                    1
#define rrlp_GANSSPositioningMethod_rrlp_sbas                       2
#define rrlp_GANSSPositioningMethod_rrlp_modernizedGPS              3
#define rrlp_GANSSPositioningMethod_rrlp_qzss                       4
#define rrlp_GANSSPositioningMethod_rrlp_glonass                    5

typedef struct rrlp_GANSSPositioningMethod {
   OSUINT32 numbits;
   OSOCTET data[2];
} rrlp_GANSSPositioningMethod;

EXTERN int asn1PE_rrlp_GANSSPositioningMethod (OSCTXT* pctxt, rrlp_GANSSPositioningMethod* pvalue);

EXTERN int asn1PD_rrlp_GANSSPositioningMethod (OSCTXT* pctxt, rrlp_GANSSPositioningMethod* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSTOD                                                  */
/*                                                            */
/**************************************************************/
/*
 GANSS TOD integer seconds

GANSSTOD ::= INTEGER (0..86399)
*/
typedef OSUINT32 rrlp_GANSSTOD;

EXTERN int asn1PE_rrlp_GANSSTOD (OSCTXT* pctxt, rrlp_GANSSTOD value);

EXTERN int asn1PD_rrlp_GANSSTOD (OSCTXT* pctxt, rrlp_GANSSTOD* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSTODUncertainty                                       */
/*                                                            */
/**************************************************************/
/*
 GANSS TOD uncertainty

GANSSTODUncertainty ::= INTEGER (0..127)
*/
typedef OSUINT8 rrlp_GANSSTODUncertainty;

EXTERN int asn1PE_rrlp_GANSSTODUncertainty (OSCTXT* pctxt, rrlp_GANSSTODUncertainty value);

EXTERN int asn1PD_rrlp_GANSSTODUncertainty (OSCTXT* pctxt, rrlp_GANSSTODUncertainty* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSRefTimeInfo                                          */
/*                                                            */
/**************************************************************/
/*
 GANSS Reference Time includes GANSS TOD, GANSS Day, uncertainty

GANSSRefTimeInfo ::= SEQUENCE {
   ganssDay [0] INTEGER (0..8191) OPTIONAL,
   ganssTOD [1] GANSSTOD,
   ganssTODUncertainty [2] GANSSTODUncertainty OPTIONAL,
   ganssTimeID [3] INTEGER (0..7) OPTIONAL
}
*/
typedef struct EXTERN rrlp_GANSSRefTimeInfo {
   struct {
      unsigned ganssDayPresent : 1;
      unsigned ganssTODUncertaintyPresent : 1;
      unsigned ganssTimeIDPresent : 1;
   } m;
   OSUINT16 ganssDay;
   rrlp_GANSSTOD ganssTOD;
   rrlp_GANSSTODUncertainty ganssTODUncertainty;
   OSUINT8 ganssTimeID;
} rrlp_GANSSRefTimeInfo;

EXTERN int asn1PE_rrlp_GANSSRefTimeInfo (OSCTXT* pctxt, rrlp_GANSSRefTimeInfo* pvalue);

EXTERN int asn1PD_rrlp_GANSSRefTimeInfo (OSCTXT* pctxt, rrlp_GANSSRefTimeInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  FrameDrift                                                */
/*                                                            */
/**************************************************************/
/*
 Frame drift

FrameDrift ::= INTEGER (-64..63)
*/
typedef OSINT8 rrlp_FrameDrift;

EXTERN int asn1PE_rrlp_FrameDrift (OSCTXT* pctxt, rrlp_FrameDrift value);

EXTERN int asn1PD_rrlp_FrameDrift (OSCTXT* pctxt, rrlp_FrameDrift* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSTOD_GSMTimeAssociation                               */
/*                                                            */
/**************************************************************/
/*
 Coding according to Annex
 GANSS TOD-GSM Time association 

GANSSTOD-GSMTimeAssociation ::= SEQUENCE {
   bcchCarrier [0] BCCHCarrier,
   bsic [1] BSIC,
   frameNumber [2] FrameNumber,
   timeSlot [3] TimeSlot,
   bitNumber [4] BitNumber,
   frameDrift [5] FrameDrift OPTIONAL
}
*/
typedef struct EXTERN rrlp_GANSSTOD_GSMTimeAssociation {
   struct {
      unsigned frameDriftPresent : 1;
   } m;
   rrlp_BCCHCarrier bcchCarrier;
   rrlp_BSIC bsic;
   rrlp_FrameNumber frameNumber;
   rrlp_TimeSlot timeSlot;
   rrlp_BitNumber bitNumber;
   rrlp_FrameDrift frameDrift;
} rrlp_GANSSTOD_GSMTimeAssociation;

EXTERN int asn1PE_rrlp_GANSSTOD_GSMTimeAssociation (OSCTXT* pctxt, rrlp_GANSSTOD_GSMTimeAssociation* pvalue);

EXTERN int asn1PD_rrlp_GANSSTOD_GSMTimeAssociation (OSCTXT* pctxt, rrlp_GANSSTOD_GSMTimeAssociation* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSReferenceTime                                        */
/*                                                            */
/**************************************************************/
/*
 GANSS COMMON ASSISTANCE DATA ELEMENTS
 GANSS Reference Time IE

GANSSReferenceTime ::= SEQUENCE {
   ganssRefTimeInfo [0] GANSSRefTimeInfo,
   ganssTOD-GSMTimeAssociation [1] GANSSTOD-GSMTimeAssociation OPTIONAL
}
*/
typedef struct EXTERN rrlp_GANSSReferenceTime {
   struct {
      unsigned ganssTOD_GSMTimeAssociationPresent : 1;
   } m;
   rrlp_GANSSRefTimeInfo ganssRefTimeInfo;
   rrlp_GANSSTOD_GSMTimeAssociation ganssTOD_GSMTimeAssociation;
} rrlp_GANSSReferenceTime;

EXTERN int asn1PE_rrlp_GANSSReferenceTime (OSCTXT* pctxt, rrlp_GANSSReferenceTime* pvalue);

EXTERN int asn1PD_rrlp_GANSSReferenceTime (OSCTXT* pctxt, rrlp_GANSSReferenceTime* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSRefLocation                                          */
/*                                                            */
/**************************************************************/
/*
 GANSS Reference Location IE

GANSSRefLocation ::= SEQUENCE {
   threeDLocation [0] Ext-GeographicalInformation
}
*/
typedef struct EXTERN rrlp_GANSSRefLocation {
   rrlp_Ext_GeographicalInformation threeDLocation;
} rrlp_GANSSRefLocation;

EXTERN int asn1PE_rrlp_GANSSRefLocation (OSCTXT* pctxt, rrlp_GANSSRefLocation* pvalue);

EXTERN int asn1PD_rrlp_GANSSRefLocation (OSCTXT* pctxt, rrlp_GANSSRefLocation* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSIonosphereModel                                      */
/*                                                            */
/**************************************************************/
/*
 GANSS ionosphere model. Coding according to Annex 

GANSSIonosphereModel ::= SEQUENCE {
   ai0 [0] INTEGER (0..4095),
   ai1 [1] INTEGER (0..4095),
   ai2 [2] INTEGER (0..4095)
}
*/
typedef struct EXTERN rrlp_GANSSIonosphereModel {
   OSUINT16 ai0;
   OSUINT16 ai1;
   OSUINT16 ai2;
} rrlp_GANSSIonosphereModel;

EXTERN int asn1PE_rrlp_GANSSIonosphereModel (OSCTXT* pctxt, rrlp_GANSSIonosphereModel* pvalue);

EXTERN int asn1PD_rrlp_GANSSIonosphereModel (OSCTXT* pctxt, rrlp_GANSSIonosphereModel* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSIonoStormFlags                                       */
/*                                                            */
/**************************************************************/
/*
 GANSS ionosphere storm flags

GANSSIonoStormFlags ::= SEQUENCE {
   ionoStormFlag1 [0] INTEGER (0..1),
   ionoStormFlag2 [1] INTEGER (0..1),
   ionoStormFlag3 [2] INTEGER (0..1),
   ionoStormFlag4 [3] INTEGER (0..1),
   ionoStormFlag5 [4] INTEGER (0..1)
}
*/
typedef struct EXTERN rrlp_GANSSIonoStormFlags {
   OSUINT8 ionoStormFlag1;
   OSUINT8 ionoStormFlag2;
   OSUINT8 ionoStormFlag3;
   OSUINT8 ionoStormFlag4;
   OSUINT8 ionoStormFlag5;
} rrlp_GANSSIonoStormFlags;

EXTERN int asn1PE_rrlp_GANSSIonoStormFlags (OSCTXT* pctxt, rrlp_GANSSIonoStormFlags* pvalue);

EXTERN int asn1PD_rrlp_GANSSIonoStormFlags (OSCTXT* pctxt, rrlp_GANSSIonoStormFlags* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSIonosphericModel                                     */
/*                                                            */
/**************************************************************/
/*
 GANSS Ionospheric Model IE
 GANSS Ionospheric Model consists of NeQuick model parameters and storm flags

GANSSIonosphericModel ::= SEQUENCE {
   ganssIonoModel [0] GANSSIonosphereModel,
   ganssIonoStormFlags [1] GANSSIonoStormFlags OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_GANSSIonosphericModel {
   struct {
      unsigned ganssIonoStormFlagsPresent : 1;
   } m;
   rrlp_GANSSIonosphereModel ganssIonoModel;
   rrlp_GANSSIonoStormFlags ganssIonoStormFlags;
   OSRTDList extElem1;
} rrlp_GANSSIonosphericModel;

EXTERN int asn1PE_rrlp_GANSSIonosphericModel (OSCTXT* pctxt, rrlp_GANSSIonosphericModel* pvalue);

EXTERN int asn1PD_rrlp_GANSSIonosphericModel (OSCTXT* pctxt, rrlp_GANSSIonosphericModel* pvalue);

EXTERN void asn1Free_rrlp_GANSSIonosphericModel (OSCTXT *pctxt, 
   rrlp_GANSSIonosphericModel* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSAddIonosphericModel                                  */
/*                                                            */
/**************************************************************/
/*
 GANSS Additional Ionospheric Model IE
 GANSS Additional Ionospheric Model consists of Klobuchar model parameters

GANSSAddIonosphericModel ::= SEQUENCE {
   dataID [0] BIT STRING  (SIZE (2)),
   ionoModel [1] IonosphericModel
}
*/
typedef struct EXTERN rrlp_GANSSAddIonosphericModel {
   ASN1BitStr32 dataID;
   rrlp_IonosphericModel ionoModel;
} rrlp_GANSSAddIonosphericModel;

EXTERN int asn1PE_rrlp_GANSSAddIonosphericModel (OSCTXT* pctxt, rrlp_GANSSAddIonosphericModel* pvalue);

EXTERN int asn1PD_rrlp_GANSSAddIonosphericModel (OSCTXT* pctxt, rrlp_GANSSAddIonosphericModel* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSEarthOrientParam                                     */
/*                                                            */
/**************************************************************/
/*
 GANSS Earth Orientation Paramaters IE

GANSSEarthOrientParam ::= SEQUENCE {
   teop [0] INTEGER (0..65535),
   pmX [1] INTEGER (-1048576..1048575),
   pmXdot [2] INTEGER (-16384..16383),
   pmY [3] INTEGER (-1048576..1048575),
   pmYdot [4] INTEGER (-16384..16383),
   deltaUT1 [5] INTEGER (-1073741824..1073741823),
   deltaUT1dot [6] INTEGER (-262144..262143)
}
*/
typedef struct EXTERN rrlp_GANSSEarthOrientParam {
   OSUINT16 teop;
   OSINT32 pmX;
   OSINT16 pmXdot;
   OSINT32 pmY;
   OSINT16 pmYdot;
   OSINT32 deltaUT1;
   OSINT32 deltaUT1dot;
} rrlp_GANSSEarthOrientParam;

EXTERN int asn1PE_rrlp_GANSSEarthOrientParam (OSCTXT* pctxt, rrlp_GANSSEarthOrientParam* pvalue);

EXTERN int asn1PD_rrlp_GANSSEarthOrientParam (OSCTXT* pctxt, rrlp_GANSSEarthOrientParam* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSCommonAssistData                                     */
/*                                                            */
/**************************************************************/
/*
 GANSS Common Assistance Data Elements

GANSSCommonAssistData ::= SEQUENCE {
   ganssReferenceTime [0] GANSSReferenceTime OPTIONAL,
   ganssRefLocation [1] GANSSRefLocation OPTIONAL,
   ganssIonosphericModel [2] GANSSIonosphericModel OPTIONAL,
   ...,
   ganssAddIonosphericModel [3] GANSSAddIonosphericModel OPTIONAL,
   ganssEarthOrientParam [4] GANSSEarthOrientParam OPTIONAL
}
*/
typedef struct EXTERN rrlp_GANSSCommonAssistData {
   struct {
      unsigned ganssReferenceTimePresent : 1;
      unsigned ganssRefLocationPresent : 1;
      unsigned ganssIonosphericModelPresent : 1;
      unsigned ganssAddIonosphericModelPresent : 1;
      unsigned ganssEarthOrientParamPresent : 1;
   } m;
   rrlp_GANSSReferenceTime ganssReferenceTime;
   rrlp_GANSSRefLocation ganssRefLocation;
   rrlp_GANSSIonosphericModel ganssIonosphericModel;
   rrlp_GANSSAddIonosphericModel ganssAddIonosphericModel;
   rrlp_GANSSEarthOrientParam ganssEarthOrientParam;
   OSRTDList extElem1;
} rrlp_GANSSCommonAssistData;

EXTERN int asn1PE_rrlp_GANSSCommonAssistData (OSCTXT* pctxt, rrlp_GANSSCommonAssistData* pvalue);

EXTERN int asn1PD_rrlp_GANSSCommonAssistData (OSCTXT* pctxt, rrlp_GANSSCommonAssistData* pvalue);

EXTERN void asn1Free_rrlp_GANSSCommonAssistData (OSCTXT *pctxt, 
   rrlp_GANSSCommonAssistData* pvalue);

/**************************************************************/
/*                                                            */
/*  TA0                                                       */
/*                                                            */
/**************************************************************/
/*
 GANSS time model parameter A0

TA0 ::= INTEGER (-2147483648..2147483647)
*/
typedef OSINT32 rrlp_TA0;

EXTERN int asn1PE_rrlp_TA0 (OSCTXT* pctxt, rrlp_TA0 value);

EXTERN int asn1PD_rrlp_TA0 (OSCTXT* pctxt, rrlp_TA0* pvalue);

/**************************************************************/
/*                                                            */
/*  TA1                                                       */
/*                                                            */
/**************************************************************/
/*
 GANSS time model parameter A1

TA1 ::= INTEGER (-8388608..8388607)
*/
typedef OSINT32 rrlp_TA1;

EXTERN int asn1PE_rrlp_TA1 (OSCTXT* pctxt, rrlp_TA1 value);

EXTERN int asn1PD_rrlp_TA1 (OSCTXT* pctxt, rrlp_TA1* pvalue);

/**************************************************************/
/*                                                            */
/*  TA2                                                       */
/*                                                            */
/**************************************************************/
/*
 GANSS time model parameter A2

TA2 ::= INTEGER (-64..63)
*/
typedef OSINT8 rrlp_TA2;

EXTERN int asn1PE_rrlp_TA2 (OSCTXT* pctxt, rrlp_TA2 value);

EXTERN int asn1PD_rrlp_TA2 (OSCTXT* pctxt, rrlp_TA2* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSTimeModelElement                                     */
/*                                                            */
/**************************************************************/
/*
GANSSTimeModelElement ::= SEQUENCE {
   ganssTimeModelRefTime [0] INTEGER (0..65535),
   tA0 [1] TA0,
   tA1 [2] TA1 OPTIONAL,
   tA2 [3] TA2 OPTIONAL,
   gnssTOID [4] INTEGER (0..7),
   weekNumber [5] INTEGER (0..8191) OPTIONAL
}
*/
typedef struct EXTERN rrlp_GANSSTimeModelElement {
   struct {
      unsigned tA1Present : 1;
      unsigned tA2Present : 1;
      unsigned weekNumberPresent : 1;
   } m;
   OSUINT16 ganssTimeModelRefTime;
   rrlp_TA0 tA0;
   rrlp_TA1 tA1;
   rrlp_TA2 tA2;
   OSUINT8 gnssTOID;
   OSUINT16 weekNumber;
} rrlp_GANSSTimeModelElement;

EXTERN int asn1PE_rrlp_GANSSTimeModelElement (OSCTXT* pctxt, rrlp_GANSSTimeModelElement* pvalue);

EXTERN int asn1PD_rrlp_GANSSTimeModelElement (OSCTXT* pctxt, rrlp_GANSSTimeModelElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGANSSTimeModel                                       */
/*                                                            */
/**************************************************************/
/*
 GANSS GENERIC ASSISTANCE DATA ELEMENTS
 GANSS Time Model IE consists of time offset and first and second order parameters to relate GNSS
 specific system time to selected time reference

SeqOfGANSSTimeModel ::= SEQUENCE (SIZE (1..7)) OF GANSSTimeModelElement
*/
typedef struct EXTERN rrlp_SeqOfGANSSTimeModel {
   OSUINT32 n;
   rrlp_GANSSTimeModelElement *elem;
} rrlp_SeqOfGANSSTimeModel;

EXTERN int asn1PE_rrlp_SeqOfGANSSTimeModel (OSCTXT* pctxt, rrlp_SeqOfGANSSTimeModel* pvalue);

EXTERN int asn1PD_rrlp_SeqOfGANSSTimeModel (OSCTXT* pctxt, rrlp_SeqOfGANSSTimeModel* pvalue);

EXTERN void asn1Free_rrlp_SeqOfGANSSTimeModel (OSCTXT *pctxt, 
   rrlp_SeqOfGANSSTimeModel* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSSignalID                                             */
/*                                                            */
/**************************************************************/
/*
GANSSSignalID ::= INTEGER (0..7)
*/
typedef OSUINT8 rrlp_GANSSSignalID;

EXTERN int asn1PE_rrlp_GANSSSignalID (OSCTXT* pctxt, rrlp_GANSSSignalID value);

EXTERN int asn1PD_rrlp_GANSSSignalID (OSCTXT* pctxt, rrlp_GANSSSignalID* pvalue);

/**************************************************************/
/*                                                            */
/*  SVID                                                      */
/*                                                            */
/**************************************************************/
/*
SVID ::= INTEGER (0..63)
*/
typedef OSUINT8 rrlp_SVID;

EXTERN int asn1PE_rrlp_SVID (OSCTXT* pctxt, rrlp_SVID value);

EXTERN int asn1PD_rrlp_SVID (OSCTXT* pctxt, rrlp_SVID* pvalue);

/**************************************************************/
/*                                                            */
/*  DGANSSSgnElement                                          */
/*                                                            */
/**************************************************************/
/*
 number of correction for signals

DGANSSSgnElement ::= SEQUENCE {
   svID [0] SVID,
   iod [1] INTEGER (0..1023),
   udre [2] INTEGER (0..3),
   pseudoRangeCor [3] INTEGER (-2047..2047),
   rangeRateCor [4] INTEGER (-127..127)
}
*/
typedef struct EXTERN rrlp_DGANSSSgnElement {
   rrlp_SVID svID;
   OSUINT16 iod;
   OSUINT8 udre;
   OSINT16 pseudoRangeCor;
   OSINT8 rangeRateCor;
} rrlp_DGANSSSgnElement;

EXTERN int asn1PE_rrlp_DGANSSSgnElement (OSCTXT* pctxt, rrlp_DGANSSSgnElement* pvalue);

EXTERN int asn1PD_rrlp_DGANSSSgnElement (OSCTXT* pctxt, rrlp_DGANSSSgnElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfDGANSSSgnElement                                     */
/*                                                            */
/**************************************************************/
/*
 Coding according to Annex

SeqOfDGANSSSgnElement ::= SEQUENCE (SIZE (1..16)) OF DGANSSSgnElement
*/
typedef struct EXTERN rrlp_SeqOfDGANSSSgnElement {
   OSUINT32 n;
   rrlp_DGANSSSgnElement *elem;
} rrlp_SeqOfDGANSSSgnElement;

EXTERN int asn1PE_rrlp_SeqOfDGANSSSgnElement (OSCTXT* pctxt, rrlp_SeqOfDGANSSSgnElement* pvalue);

EXTERN int asn1PD_rrlp_SeqOfDGANSSSgnElement (OSCTXT* pctxt, rrlp_SeqOfDGANSSSgnElement* pvalue);

EXTERN void asn1Free_rrlp_SeqOfDGANSSSgnElement (OSCTXT *pctxt, 
   rrlp_SeqOfDGANSSSgnElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SgnTypeElement                                            */
/*                                                            */
/**************************************************************/
/*
 max three signals per GNSS
 DGANSS signal type element, once per GNSS signal type included in DGANSS

SgnTypeElement ::= SEQUENCE {
   ganssSignalID [0] GANSSSignalID,
   ganssStatusHealth [1] INTEGER (0..7),
   dganssSgnList [2] SeqOfDGANSSSgnElement
}
*/
typedef struct EXTERN rrlp_SgnTypeElement {
   rrlp_GANSSSignalID ganssSignalID;
   OSUINT8 ganssStatusHealth;
   rrlp_SeqOfDGANSSSgnElement dganssSgnList;
} rrlp_SgnTypeElement;

EXTERN int asn1PE_rrlp_SgnTypeElement (OSCTXT* pctxt, rrlp_SgnTypeElement* pvalue);

EXTERN int asn1PD_rrlp_SgnTypeElement (OSCTXT* pctxt, rrlp_SgnTypeElement* pvalue);

EXTERN void asn1Free_rrlp_SgnTypeElement (OSCTXT *pctxt, rrlp_SgnTypeElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfSgnTypeElement                                       */
/*                                                            */
/**************************************************************/
/*
SeqOfSgnTypeElement ::= SEQUENCE (SIZE (1..3)) OF SgnTypeElement
*/
typedef struct EXTERN rrlp_SeqOfSgnTypeElement {
   OSUINT32 n;
   rrlp_SgnTypeElement *elem;
} rrlp_SeqOfSgnTypeElement;

EXTERN int asn1PE_rrlp_SeqOfSgnTypeElement (OSCTXT* pctxt, rrlp_SeqOfSgnTypeElement* pvalue);

EXTERN int asn1PD_rrlp_SeqOfSgnTypeElement (OSCTXT* pctxt, rrlp_SeqOfSgnTypeElement* pvalue);

EXTERN void asn1Free_rrlp_SeqOfSgnTypeElement (OSCTXT *pctxt, 
   rrlp_SeqOfSgnTypeElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSDiffCorrections                                      */
/*                                                            */
/**************************************************************/
/*
 DGANSS Corrections IE

GANSSDiffCorrections ::= SEQUENCE {
   dganssRefTime [0] INTEGER (0..119),
   sgnTypeList [1] SeqOfSgnTypeElement
}
*/
typedef struct EXTERN rrlp_GANSSDiffCorrections {
   OSUINT8 dganssRefTime;
   rrlp_SeqOfSgnTypeElement sgnTypeList;
} rrlp_GANSSDiffCorrections;

EXTERN int asn1PE_rrlp_GANSSDiffCorrections (OSCTXT* pctxt, rrlp_GANSSDiffCorrections* pvalue);

EXTERN int asn1PD_rrlp_GANSSDiffCorrections (OSCTXT* pctxt, rrlp_GANSSDiffCorrections* pvalue);

EXTERN void asn1Free_rrlp_GANSSDiffCorrections (OSCTXT *pctxt, 
   rrlp_GANSSDiffCorrections* pvalue);

/**************************************************************/
/*                                                            */
/*  StandardClockModelElement                                 */
/*                                                            */
/**************************************************************/
/*
StandardClockModelElement ::= SEQUENCE {
   stanClockToc [0] INTEGER (0..16383),
   stanClockAF2 [1] INTEGER (-2048..2047),
   stanClockAF1 [2] INTEGER (-131072..131071),
   stanClockAF0 [3] INTEGER (-134217728..134217727),
   stanClockTgd [4] INTEGER (-512..511) OPTIONAL,
   stanModelID [5] INTEGER (0..1) OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_StandardClockModelElement {
   struct {
      unsigned stanClockTgdPresent : 1;
      unsigned stanModelIDPresent : 1;
   } m;
   OSUINT16 stanClockToc;
   OSINT16 stanClockAF2;
   OSINT32 stanClockAF1;
   OSINT32 stanClockAF0;
   OSINT16 stanClockTgd;
   OSUINT8 stanModelID;
   OSRTDList extElem1;
} rrlp_StandardClockModelElement;

EXTERN int asn1PE_rrlp_StandardClockModelElement (OSCTXT* pctxt, rrlp_StandardClockModelElement* pvalue);

EXTERN int asn1PD_rrlp_StandardClockModelElement (OSCTXT* pctxt, rrlp_StandardClockModelElement* pvalue);

EXTERN void asn1Free_rrlp_StandardClockModelElement (OSCTXT *pctxt, 
   rrlp_StandardClockModelElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfStandardClockModelElement                            */
/*                                                            */
/**************************************************************/
/*
SeqOfStandardClockModelElement ::= SEQUENCE (SIZE (1..2)) OF StandardClockModelElement
*/
typedef struct EXTERN rrlp_SeqOfStandardClockModelElement {
   OSUINT32 n;
   rrlp_StandardClockModelElement *elem;
} rrlp_SeqOfStandardClockModelElement;

EXTERN int asn1PE_rrlp_SeqOfStandardClockModelElement (OSCTXT* pctxt, rrlp_SeqOfStandardClockModelElement* pvalue);

EXTERN int asn1PD_rrlp_SeqOfStandardClockModelElement (OSCTXT* pctxt, rrlp_SeqOfStandardClockModelElement* pvalue);

EXTERN void asn1Free_rrlp_SeqOfStandardClockModelElement (OSCTXT *pctxt, 
   rrlp_SeqOfStandardClockModelElement* pvalue);

/**************************************************************/
/*                                                            */
/*  NAVclockModel                                             */
/*                                                            */
/**************************************************************/
/*
NAVclockModel ::= SEQUENCE {
   navToc [0] INTEGER (0..37799),
   navaf2 [1] INTEGER (-128..127),
   navaf1 [2] INTEGER (-32768..32767),
   navaf0 [3] INTEGER (-2097152..2097151),
   navTgd [4] INTEGER (-128..127)
}
*/
typedef struct EXTERN rrlp_NAVclockModel {
   OSUINT16 navToc;
   OSINT8 navaf2;
   OSINT16 navaf1;
   OSINT32 navaf0;
   OSINT8 navTgd;
} rrlp_NAVclockModel;

EXTERN int asn1PE_rrlp_NAVclockModel (OSCTXT* pctxt, rrlp_NAVclockModel* pvalue);

EXTERN int asn1PD_rrlp_NAVclockModel (OSCTXT* pctxt, rrlp_NAVclockModel* pvalue);

/**************************************************************/
/*                                                            */
/*  CNAVclockModel                                            */
/*                                                            */
/**************************************************************/
/*
CNAVclockModel ::= SEQUENCE {
   cnavToc [0] INTEGER (0..2015),
   cnavTop [1] INTEGER (0..2015),
   cnavURA0 [2] INTEGER (-16..15),
   cnavURA1 [3] INTEGER (0..7),
   cnavURA2 [4] INTEGER (0..7),
   cnavAf2 [5] INTEGER (-512..511),
   cnavAf1 [6] INTEGER (-524288..524287),
   cnavAf0 [7] INTEGER (-33554432..33554431),
   cnavTgd [8] INTEGER (-4096..4095),
   cnavISCl1cp [9] INTEGER (-4096..4095) OPTIONAL,
   cnavISCl1cd [10] INTEGER (-4096..4095) OPTIONAL,
   cnavISCl1ca [11] INTEGER (-4096..4095) OPTIONAL,
   cnavISCl2c [12] INTEGER (-4096..4095) OPTIONAL,
   cnavISCl5i5 [13] INTEGER (-4096..4095) OPTIONAL,
   cnavISCl5q5 [14] INTEGER (-4096..4095) OPTIONAL
}
*/
typedef struct EXTERN rrlp_CNAVclockModel {
   struct {
      unsigned cnavISCl1cpPresent : 1;
      unsigned cnavISCl1cdPresent : 1;
      unsigned cnavISCl1caPresent : 1;
      unsigned cnavISCl2cPresent : 1;
      unsigned cnavISCl5i5Present : 1;
      unsigned cnavISCl5q5Present : 1;
   } m;
   OSUINT16 cnavToc;
   OSUINT16 cnavTop;
   OSINT8 cnavURA0;
   OSUINT8 cnavURA1;
   OSUINT8 cnavURA2;
   OSINT16 cnavAf2;
   OSINT32 cnavAf1;
   OSINT32 cnavAf0;
   OSINT16 cnavTgd;
   OSINT16 cnavISCl1cp;
   OSINT16 cnavISCl1cd;
   OSINT16 cnavISCl1ca;
   OSINT16 cnavISCl2c;
   OSINT16 cnavISCl5i5;
   OSINT16 cnavISCl5q5;
} rrlp_CNAVclockModel;

EXTERN int asn1PE_rrlp_CNAVclockModel (OSCTXT* pctxt, rrlp_CNAVclockModel* pvalue);

EXTERN int asn1PD_rrlp_CNAVclockModel (OSCTXT* pctxt, rrlp_CNAVclockModel* pvalue);

/**************************************************************/
/*                                                            */
/*  GLONASSclockModel                                         */
/*                                                            */
/**************************************************************/
/*
GLONASSclockModel ::= SEQUENCE {
   gloTau [0] INTEGER (-2097152..2097151),
   gloGamma [1] INTEGER (-1024..1023),
   gloDeltaTau [2] INTEGER (-16..15) OPTIONAL
}
*/
typedef struct EXTERN rrlp_GLONASSclockModel {
   struct {
      unsigned gloDeltaTauPresent : 1;
   } m;
   OSINT32 gloTau;
   OSINT16 gloGamma;
   OSINT8 gloDeltaTau;
} rrlp_GLONASSclockModel;

EXTERN int asn1PE_rrlp_GLONASSclockModel (OSCTXT* pctxt, rrlp_GLONASSclockModel* pvalue);

EXTERN int asn1PD_rrlp_GLONASSclockModel (OSCTXT* pctxt, rrlp_GLONASSclockModel* pvalue);

/**************************************************************/
/*                                                            */
/*  SBASclockModel                                            */
/*                                                            */
/**************************************************************/
/*
SBASclockModel ::= SEQUENCE {
   sbasTo [0] INTEGER (0..5399),
   sbasAgfo [1] INTEGER (-2048..2047),
   sbasAgf1 [2] INTEGER (-128..127)
}
*/
typedef struct EXTERN rrlp_SBASclockModel {
   OSUINT16 sbasTo;
   OSINT16 sbasAgfo;
   OSINT8 sbasAgf1;
} rrlp_SBASclockModel;

EXTERN int asn1PE_rrlp_SBASclockModel (OSCTXT* pctxt, rrlp_SBASclockModel* pvalue);

EXTERN int asn1PD_rrlp_SBASclockModel (OSCTXT* pctxt, rrlp_SBASclockModel* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSClockModel                                           */
/*                                                            */
/**************************************************************/
/*
 GANSS clock model for the GNSS satellite according to the choice

GANSSClockModel ::= CHOICE {
   standardClockModelList [0] SeqOfStandardClockModelElement,
   ...,
   navClockModel [1] NAVclockModel,
   cnavClockModel [2] CNAVclockModel,
   glonassClockModel [3] GLONASSclockModel,
   sbasClockModel [4] SBASclockModel
}
*/
/* Choice tag constants */

#define T_rrlp_GANSSClockModel_standardClockModelList 1
#define T_rrlp_GANSSClockModel_navClockModel 2
#define T_rrlp_GANSSClockModel_cnavClockModel 3
#define T_rrlp_GANSSClockModel_glonassClockModel 4
#define T_rrlp_GANSSClockModel_sbasClockModel 5
#define T_rrlp_GANSSClockModel_extElem1 6

typedef struct EXTERN rrlp_GANSSClockModel {
   OSUINT32 t;
   union {
      /* t = 1 */
      rrlp_SeqOfStandardClockModelElement *standardClockModelList;
      /* t = 2 */
      rrlp_NAVclockModel *navClockModel;
      /* t = 3 */
      rrlp_CNAVclockModel *cnavClockModel;
      /* t = 4 */
      rrlp_GLONASSclockModel *glonassClockModel;
      /* t = 5 */
      rrlp_SBASclockModel *sbasClockModel;
      /* t = 6 */
      ASN1OpenType *extElem1;
   } u;
} rrlp_GANSSClockModel;

EXTERN int asn1PE_rrlp_GANSSClockModel (OSCTXT* pctxt, rrlp_GANSSClockModel* pvalue);

EXTERN int asn1PD_rrlp_GANSSClockModel (OSCTXT* pctxt, rrlp_GANSSClockModel* pvalue);

EXTERN void asn1Free_rrlp_GANSSClockModel (OSCTXT *pctxt, 
   rrlp_GANSSClockModel* pvalue);

/**************************************************************/
/*                                                            */
/*  NavModel_KeplerianSet                                     */
/*                                                            */
/**************************************************************/
/*
 Navigation model in Keplerian parameters

NavModel-KeplerianSet ::= SEQUENCE {
   keplerToe [0] INTEGER (0..16383),
   keplerW [1] INTEGER (-2147483648..2147483647),
   keplerDeltaN [2] INTEGER (-32768..32767),
   keplerM0 [3] INTEGER (-2147483648..2147483647),
   keplerOmegaDot [4] INTEGER (-8388608..8388607),
   keplerE [5] INTEGER (0..4294967295),
   keplerIDot [6] INTEGER (-8192..8191),
   keplerAPowerHalf [7] INTEGER (0..4294967295),
   keplerI0 [8] INTEGER (-2147483648..2147483647),
   keplerOmega0 [9] INTEGER (-2147483648..2147483647),
   keplerCrs [10] INTEGER (-32768..32767),
   keplerCis [11] INTEGER (-32768..32767),
   keplerCus [12] INTEGER (-32768..32767),
   keplerCrc [13] INTEGER (-32768..32767),
   keplerCic [14] INTEGER (-32768..32767),
   keplerCuc [15] INTEGER (-32768..32767)
}
*/
typedef struct EXTERN rrlp_NavModel_KeplerianSet {
   OSUINT16 keplerToe;
   OSINT32 keplerW;
   OSINT16 keplerDeltaN;
   OSINT32 keplerM0;
   OSINT32 keplerOmegaDot;
   OSUINT32 keplerE;
   OSINT16 keplerIDot;
   OSUINT32 keplerAPowerHalf;
   OSINT32 keplerI0;
   OSINT32 keplerOmega0;
   OSINT16 keplerCrs;
   OSINT16 keplerCis;
   OSINT16 keplerCus;
   OSINT16 keplerCrc;
   OSINT16 keplerCic;
   OSINT16 keplerCuc;
} rrlp_NavModel_KeplerianSet;

EXTERN int asn1PE_rrlp_NavModel_KeplerianSet (OSCTXT* pctxt, rrlp_NavModel_KeplerianSet* pvalue);

EXTERN int asn1PD_rrlp_NavModel_KeplerianSet (OSCTXT* pctxt, rrlp_NavModel_KeplerianSet* pvalue);

/**************************************************************/
/*                                                            */
/*  NavModel_NAVKeplerianSet                                  */
/*                                                            */
/**************************************************************/
/*
NavModel-NAVKeplerianSet ::= SEQUENCE {
   navURA [0] INTEGER (0..15),
   navFitFlag [1] INTEGER (0..1),
   navToe [2] INTEGER (0..37799),
   navOmega [3] INTEGER (-2147483648..2147483647),
   navDeltaN [4] INTEGER (-32768..32767),
   navM0 [5] INTEGER (-2147483648..2147483647),
   navOmegaADot [6] INTEGER (-8388608..8388607),
   navE [7] INTEGER (0..4294967295),
   navIDot [8] INTEGER (-8192..8191),
   navAPowerHalf [9] INTEGER (0..4294967295),
   navI0 [10] INTEGER (-2147483648..2147483647),
   navOmegaA0 [11] INTEGER (-2147483648..2147483647),
   navCrs [12] INTEGER (-32768..32767),
   navCis [13] INTEGER (-32768..32767),
   navCus [14] INTEGER (-32768..32767),
   navCrc [15] INTEGER (-32768..32767),
   navCic [16] INTEGER (-32768..32767),
   navCuc [17] INTEGER (-32768..32767)
}
*/
typedef struct EXTERN rrlp_NavModel_NAVKeplerianSet {
   OSUINT8 navURA;
   OSUINT8 navFitFlag;
   OSUINT16 navToe;
   OSINT32 navOmega;
   OSINT16 navDeltaN;
   OSINT32 navM0;
   OSINT32 navOmegaADot;
   OSUINT32 navE;
   OSINT16 navIDot;
   OSUINT32 navAPowerHalf;
   OSINT32 navI0;
   OSINT32 navOmegaA0;
   OSINT16 navCrs;
   OSINT16 navCis;
   OSINT16 navCus;
   OSINT16 navCrc;
   OSINT16 navCic;
   OSINT16 navCuc;
} rrlp_NavModel_NAVKeplerianSet;

EXTERN int asn1PE_rrlp_NavModel_NAVKeplerianSet (OSCTXT* pctxt, rrlp_NavModel_NAVKeplerianSet* pvalue);

EXTERN int asn1PD_rrlp_NavModel_NAVKeplerianSet (OSCTXT* pctxt, rrlp_NavModel_NAVKeplerianSet* pvalue);

/**************************************************************/
/*                                                            */
/*  NavModel_CNAVKeplerianSet                                 */
/*                                                            */
/**************************************************************/
/*
NavModel-CNAVKeplerianSet ::= SEQUENCE {
   cnavTop [0] INTEGER (0..2015),
   cnavURAindex [1] INTEGER (-16..15),
   cnavDeltaA [2] INTEGER (-33554432..33554431),
   cnavAdot [3] INTEGER (-16777216..16777215),
   cnavDeltaNo [4] INTEGER (-65536..65535),
   cnavDeltaNoDot [5] INTEGER (-4194304..4194303),
   cnavMo [6] INTEGER (-4294967296..4294967295),
   cnavE [7] INTEGER (0..8589934591),
   cnavOmega [8] INTEGER (-4294967296..4294967295),
   cnavOMEGA0 [9] INTEGER (-4294967296..4294967295),
   cnavDeltaOmegaDot [10] INTEGER (-65536..65535),
   cnavIo [11] INTEGER (-4294967296..4294967295),
   cnavIoDot [12] INTEGER (-16384..16383),
   cnavCis [13] INTEGER (-32768..32767),
   cnavCic [14] INTEGER (-32768..32767),
   cnavCrs [15] INTEGER (-8388608..8388607),
   cnavCrc [16] INTEGER (-8388608..8388607),
   cnavCus [17] INTEGER (-1048576..1048575),
   cnavCuc [18] INTEGER (-1048576..1048575)
}
*/
typedef struct EXTERN rrlp_NavModel_CNAVKeplerianSet {
   OSUINT16 cnavTop;
   OSINT8 cnavURAindex;
   OSINT32 cnavDeltaA;
   OSINT32 cnavAdot;
   OSINT32 cnavDeltaNo;
   OSINT32 cnavDeltaNoDot;
   OSINT64 cnavMo;
   OSUINT64 cnavE;
   OSINT64 cnavOmega;
   OSINT64 cnavOMEGA0;
   OSINT32 cnavDeltaOmegaDot;
   OSINT64 cnavIo;
   OSINT16 cnavIoDot;
   OSINT16 cnavCis;
   OSINT16 cnavCic;
   OSINT32 cnavCrs;
   OSINT32 cnavCrc;
   OSINT32 cnavCus;
   OSINT32 cnavCuc;
} rrlp_NavModel_CNAVKeplerianSet;

EXTERN int asn1PE_rrlp_NavModel_CNAVKeplerianSet (OSCTXT* pctxt, rrlp_NavModel_CNAVKeplerianSet* pvalue);

EXTERN int asn1PD_rrlp_NavModel_CNAVKeplerianSet (OSCTXT* pctxt, rrlp_NavModel_CNAVKeplerianSet* pvalue);

/**************************************************************/
/*                                                            */
/*  NavModel_GLONASSecef                                      */
/*                                                            */
/**************************************************************/
/*
NavModel-GLONASSecef ::= SEQUENCE {
   gloEn [0] INTEGER (0..31),
   gloP1 [1] BIT STRING  (SIZE (2)),
   gloP2 [2] BOOLEAN,
   gloM [3] INTEGER (0..3),
   gloX [4] INTEGER (-67108864..67108863),
   gloXdot [5] INTEGER (-8388608..8388607),
   gloXdotdot [6] INTEGER (-16..15),
   gloY [7] INTEGER (-67108864..67108863),
   gloYdot [8] INTEGER (-8388608..8388607),
   gloYdotdot [9] INTEGER (-16..15),
   gloZ [10] INTEGER (-67108864..67108863),
   gloZdot [11] INTEGER (-8388608..8388607),
   gloZdotdot [12] INTEGER (-16..15)
}
*/
typedef struct EXTERN rrlp_NavModel_GLONASSecef {
   OSUINT8 gloEn;
   ASN1BitStr32 gloP1;
   OSBOOL gloP2;
   OSUINT8 gloM;
   OSINT32 gloX;
   OSINT32 gloXdot;
   OSINT8 gloXdotdot;
   OSINT32 gloY;
   OSINT32 gloYdot;
   OSINT8 gloYdotdot;
   OSINT32 gloZ;
   OSINT32 gloZdot;
   OSINT8 gloZdotdot;
} rrlp_NavModel_GLONASSecef;

EXTERN int asn1PE_rrlp_NavModel_GLONASSecef (OSCTXT* pctxt, rrlp_NavModel_GLONASSecef* pvalue);

EXTERN int asn1PD_rrlp_NavModel_GLONASSecef (OSCTXT* pctxt, rrlp_NavModel_GLONASSecef* pvalue);

/**************************************************************/
/*                                                            */
/*  NavModel_SBASecef                                         */
/*                                                            */
/**************************************************************/
/*
NavModel-SBASecef ::= SEQUENCE {
   sbasTo [0] INTEGER (0..5399) OPTIONAL,
   sbasAccuracy [1] BIT STRING  (SIZE (4)),
   sbasXg [2] INTEGER (-536870912..536870911),
   sbasYg [3] INTEGER (-536870912..536870911),
   sbasZg [4] INTEGER (-16777216..16777215),
   sbasXgDot [5] INTEGER (-65536..65535),
   sbasYgDot [6] INTEGER (-65536..65535),
   sbasZgDot [7] INTEGER (-131072..131071),
   sbasXgDotDot [8] INTEGER (-512..511),
   sbagYgDotDot [9] INTEGER (-512..511),
   sbasZgDotDot [10] INTEGER (-512..511)
}
*/
typedef struct EXTERN rrlp_NavModel_SBASecef {
   struct {
      unsigned sbasToPresent : 1;
   } m;
   OSUINT16 sbasTo;
   ASN1BitStr32 sbasAccuracy;
   OSINT32 sbasXg;
   OSINT32 sbasYg;
   OSINT32 sbasZg;
   OSINT32 sbasXgDot;
   OSINT32 sbasYgDot;
   OSINT32 sbasZgDot;
   OSINT16 sbasXgDotDot;
   OSINT16 sbagYgDotDot;
   OSINT16 sbasZgDotDot;
} rrlp_NavModel_SBASecef;

EXTERN int asn1PE_rrlp_NavModel_SBASecef (OSCTXT* pctxt, rrlp_NavModel_SBASecef* pvalue);

EXTERN int asn1PD_rrlp_NavModel_SBASecef (OSCTXT* pctxt, rrlp_NavModel_SBASecef* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSOrbitModel                                           */
/*                                                            */
/**************************************************************/
/*
 GANSS orbit model for the GNSS satellite according to the choice

GANSSOrbitModel ::= CHOICE {
   keplerianSet [0] NavModel-KeplerianSet,
   ...,
   navKeplerianSet [1] NavModel-NAVKeplerianSet,
   cnavKeplerianSet [2] NavModel-CNAVKeplerianSet,
   glonassECEF [3] NavModel-GLONASSecef,
   sbasECEF [4] NavModel-SBASecef
}
*/
/* Choice tag constants */

#define T_rrlp_GANSSOrbitModel_keplerianSet 1
#define T_rrlp_GANSSOrbitModel_navKeplerianSet 2
#define T_rrlp_GANSSOrbitModel_cnavKeplerianSet 3
#define T_rrlp_GANSSOrbitModel_glonassECEF 4
#define T_rrlp_GANSSOrbitModel_sbasECEF 5
#define T_rrlp_GANSSOrbitModel_extElem1 6

typedef struct EXTERN rrlp_GANSSOrbitModel {
   OSUINT32 t;
   union {
      /* t = 1 */
      rrlp_NavModel_KeplerianSet *keplerianSet;
      /* t = 2 */
      rrlp_NavModel_NAVKeplerianSet *navKeplerianSet;
      /* t = 3 */
      rrlp_NavModel_CNAVKeplerianSet *cnavKeplerianSet;
      /* t = 4 */
      rrlp_NavModel_GLONASSecef *glonassECEF;
      /* t = 5 */
      rrlp_NavModel_SBASecef *sbasECEF;
      /* t = 6 */
      ASN1OpenType *extElem1;
   } u;
} rrlp_GANSSOrbitModel;

EXTERN int asn1PE_rrlp_GANSSOrbitModel (OSCTXT* pctxt, rrlp_GANSSOrbitModel* pvalue);

EXTERN int asn1PD_rrlp_GANSSOrbitModel (OSCTXT* pctxt, rrlp_GANSSOrbitModel* pvalue);

EXTERN void asn1Free_rrlp_GANSSOrbitModel (OSCTXT *pctxt, 
   rrlp_GANSSOrbitModel* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSSatelliteElement                                     */
/*                                                            */
/**************************************************************/
/*
GANSSSatelliteElement ::= SEQUENCE {
   svID [0] SVID,
   svHealth [1] BIT STRING  (SIZE (5)),
   iod [2] INTEGER (0..1023),
   ganssClockModel [3] GANSSClockModel,
   ganssOrbitModel [4] GANSSOrbitModel,
   ...,
   svHealthMSB [5] BIT STRING  (SIZE (1)) OPTIONAL,
   iodMSB [6] INTEGER (0..1) OPTIONAL
}
*/
typedef struct EXTERN rrlp_GANSSSatelliteElement {
   struct {
      unsigned svHealthMSBPresent : 1;
      unsigned iodMSBPresent : 1;
   } m;
   rrlp_SVID svID;
   ASN1BitStr32 svHealth;
   OSUINT16 iod;
   rrlp_GANSSClockModel ganssClockModel;
   rrlp_GANSSOrbitModel ganssOrbitModel;
   ASN1BitStr32 svHealthMSB;
   OSUINT8 iodMSB;
   OSRTDList extElem1;
} rrlp_GANSSSatelliteElement;

EXTERN int asn1PE_rrlp_GANSSSatelliteElement (OSCTXT* pctxt, rrlp_GANSSSatelliteElement* pvalue);

EXTERN int asn1PD_rrlp_GANSSSatelliteElement (OSCTXT* pctxt, rrlp_GANSSSatelliteElement* pvalue);

EXTERN void asn1Free_rrlp_GANSSSatelliteElement (OSCTXT *pctxt, 
   rrlp_GANSSSatelliteElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGANSSSatelliteElement                                */
/*                                                            */
/**************************************************************/
/*
SeqOfGANSSSatelliteElement ::= SEQUENCE (SIZE (1..32)) OF GANSSSatelliteElement
*/
typedef struct EXTERN rrlp_SeqOfGANSSSatelliteElement {
   OSUINT32 n;
   rrlp_GANSSSatelliteElement *elem;
} rrlp_SeqOfGANSSSatelliteElement;

EXTERN int asn1PE_rrlp_SeqOfGANSSSatelliteElement (OSCTXT* pctxt, rrlp_SeqOfGANSSSatelliteElement* pvalue);

EXTERN int asn1PD_rrlp_SeqOfGANSSSatelliteElement (OSCTXT* pctxt, rrlp_SeqOfGANSSSatelliteElement* pvalue);

EXTERN void asn1Free_rrlp_SeqOfGANSSSatelliteElement (OSCTXT *pctxt, 
   rrlp_SeqOfGANSSSatelliteElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSNavModel                                             */
/*                                                            */
/**************************************************************/
/*
 Coding according to Annex
 GANSS Navigation Model IE

GANSSNavModel ::= SEQUENCE {
   nonBroadcastIndFlag [0] INTEGER (0..1),
   ganssSatelliteList [1] SeqOfGANSSSatelliteElement
}
*/
typedef struct EXTERN rrlp_GANSSNavModel {
   OSUINT8 nonBroadcastIndFlag;
   rrlp_SeqOfGANSSSatelliteElement ganssSatelliteList;
} rrlp_GANSSNavModel;

EXTERN int asn1PE_rrlp_GANSSNavModel (OSCTXT* pctxt, rrlp_GANSSNavModel* pvalue);

EXTERN int asn1PD_rrlp_GANSSNavModel (OSCTXT* pctxt, rrlp_GANSSNavModel* pvalue);

EXTERN void asn1Free_rrlp_GANSSNavModel (OSCTXT *pctxt, rrlp_GANSSNavModel* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSSignals                                              */
/*                                                            */
/**************************************************************/
/*
 indicates MS support for particular GANSS signals and frequencies

GANSSSignals ::= BIT STRING  { signal1(0), signal2(1), signal3(2), signal4(3), signal5(4), signal6(5), signal7(6), signal8(7) } (SIZE (1..8))
*/
/* Named bit constants */

#define rrlp_GANSSSignals_rrlp_signal1                    0
#define rrlp_GANSSSignals_rrlp_signal2                    1
#define rrlp_GANSSSignals_rrlp_signal3                    2
#define rrlp_GANSSSignals_rrlp_signal4                    3
#define rrlp_GANSSSignals_rrlp_signal5                    4
#define rrlp_GANSSSignals_rrlp_signal6                    5
#define rrlp_GANSSSignals_rrlp_signal7                    6
#define rrlp_GANSSSignals_rrlp_signal8                    7

typedef struct rrlp_GANSSSignals {
   OSUINT32 numbits;
   OSOCTET data[1];
} rrlp_GANSSSignals;

EXTERN int asn1PE_rrlp_GANSSSignals (OSCTXT* pctxt, rrlp_GANSSSignals* pvalue);

EXTERN int asn1PD_rrlp_GANSSSignals (OSCTXT* pctxt, rrlp_GANSSSignals* pvalue);

/**************************************************************/
/*                                                            */
/*  BadSignalElement                                          */
/*                                                            */
/**************************************************************/
/*
BadSignalElement ::= SEQUENCE {
   badSVID [0] SVID,
   badSignalID [1] GANSSSignals OPTIONAL
}
*/
typedef struct EXTERN rrlp_BadSignalElement {
   struct {
      unsigned badSignalIDPresent : 1;
   } m;
   rrlp_SVID badSVID;
   rrlp_GANSSSignals badSignalID;
} rrlp_BadSignalElement;

EXTERN int asn1PE_rrlp_BadSignalElement (OSCTXT* pctxt, rrlp_BadSignalElement* pvalue);

EXTERN int asn1PD_rrlp_BadSignalElement (OSCTXT* pctxt, rrlp_BadSignalElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfBadSignalElement                                     */
/*                                                            */
/**************************************************************/
/*
SeqOfBadSignalElement ::= SEQUENCE (SIZE (1..16)) OF BadSignalElement
*/
typedef struct EXTERN rrlp_SeqOfBadSignalElement {
   OSUINT32 n;
   rrlp_BadSignalElement *elem;
} rrlp_SeqOfBadSignalElement;

EXTERN int asn1PE_rrlp_SeqOfBadSignalElement (OSCTXT* pctxt, rrlp_SeqOfBadSignalElement* pvalue);

EXTERN int asn1PD_rrlp_SeqOfBadSignalElement (OSCTXT* pctxt, rrlp_SeqOfBadSignalElement* pvalue);

EXTERN void asn1Free_rrlp_SeqOfBadSignalElement (OSCTXT *pctxt, 
   rrlp_SeqOfBadSignalElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSRealTimeIntegrity                                    */
/*                                                            */
/**************************************************************/
/*
 GANSS Real-Time Integrity IE

GANSSRealTimeIntegrity ::= SEQUENCE {
   ganssBadSignalList [0] SeqOfBadSignalElement
}
*/
typedef struct EXTERN rrlp_GANSSRealTimeIntegrity {
   rrlp_SeqOfBadSignalElement ganssBadSignalList;
} rrlp_GANSSRealTimeIntegrity;

EXTERN int asn1PE_rrlp_GANSSRealTimeIntegrity (OSCTXT* pctxt, rrlp_GANSSRealTimeIntegrity* pvalue);

EXTERN int asn1PD_rrlp_GANSSRealTimeIntegrity (OSCTXT* pctxt, rrlp_GANSSRealTimeIntegrity* pvalue);

EXTERN void asn1Free_rrlp_GANSSRealTimeIntegrity (OSCTXT *pctxt, 
   rrlp_GANSSRealTimeIntegrity* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSDataBit                                              */
/*                                                            */
/**************************************************************/
/*
GANSSDataBit ::= INTEGER (0..1)
*/
typedef OSUINT8 rrlp_GANSSDataBit;

EXTERN int asn1PE_rrlp_GANSSDataBit (OSCTXT* pctxt, rrlp_GANSSDataBit value);

EXTERN int asn1PD_rrlp_GANSSDataBit (OSCTXT* pctxt, rrlp_GANSSDataBit* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOf_GANSSDataBits                                       */
/*                                                            */
/**************************************************************/
/*
SeqOf-GANSSDataBits ::= SEQUENCE (SIZE (1..1024)) OF GANSSDataBit
*/
typedef struct EXTERN rrlp_SeqOf_GANSSDataBits {
   OSUINT32 n;
   rrlp_GANSSDataBit *elem;
} rrlp_SeqOf_GANSSDataBits;

EXTERN int asn1PE_rrlp_SeqOf_GANSSDataBits (OSCTXT* pctxt, rrlp_SeqOf_GANSSDataBits* pvalue);

EXTERN int asn1PD_rrlp_SeqOf_GANSSDataBits (OSCTXT* pctxt, rrlp_SeqOf_GANSSDataBits* pvalue);

EXTERN void asn1Free_rrlp_SeqOf_GANSSDataBits (OSCTXT *pctxt, 
   rrlp_SeqOf_GANSSDataBits* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSDataBitsSgnElement                                   */
/*                                                            */
/**************************************************************/
/*
GANSSDataBitsSgnElement ::= SEQUENCE {
   ganssSignalType [0] GANSSSignalID,
   ganssDataBits [1] SeqOf-GANSSDataBits,
   ...
}
*/
typedef struct EXTERN rrlp_GANSSDataBitsSgnElement {
   rrlp_GANSSSignalID ganssSignalType;
   rrlp_SeqOf_GANSSDataBits ganssDataBits;
   OSRTDList extElem1;
} rrlp_GANSSDataBitsSgnElement;

EXTERN int asn1PE_rrlp_GANSSDataBitsSgnElement (OSCTXT* pctxt, rrlp_GANSSDataBitsSgnElement* pvalue);

EXTERN int asn1PD_rrlp_GANSSDataBitsSgnElement (OSCTXT* pctxt, rrlp_GANSSDataBitsSgnElement* pvalue);

EXTERN void asn1Free_rrlp_GANSSDataBitsSgnElement (OSCTXT *pctxt, 
   rrlp_GANSSDataBitsSgnElement* pvalue);

/**************************************************************/
/*                                                            */
/*  Seq_OfGANSSDataBitsSgn                                    */
/*                                                            */
/**************************************************************/
/*
Seq-OfGANSSDataBitsSgn ::= SEQUENCE (SIZE (1..8)) OF GANSSDataBitsSgnElement
*/
typedef struct EXTERN rrlp_Seq_OfGANSSDataBitsSgn {
   OSUINT32 n;
   rrlp_GANSSDataBitsSgnElement *elem;
} rrlp_Seq_OfGANSSDataBitsSgn;

EXTERN int asn1PE_rrlp_Seq_OfGANSSDataBitsSgn (OSCTXT* pctxt, rrlp_Seq_OfGANSSDataBitsSgn* pvalue);

EXTERN int asn1PD_rrlp_Seq_OfGANSSDataBitsSgn (OSCTXT* pctxt, rrlp_Seq_OfGANSSDataBitsSgn* pvalue);

EXTERN void asn1Free_rrlp_Seq_OfGANSSDataBitsSgn (OSCTXT *pctxt, 
   rrlp_Seq_OfGANSSDataBitsSgn* pvalue);

/**************************************************************/
/*                                                            */
/*  GanssDataBitsElement                                      */
/*                                                            */
/**************************************************************/
/*
GanssDataBitsElement ::= SEQUENCE {
   svID [0] SVID,
   ganssDataBitsSgnList [1] Seq-OfGANSSDataBitsSgn,
   ...
}
*/
typedef struct EXTERN rrlp_GanssDataBitsElement {
   rrlp_SVID svID;
   rrlp_Seq_OfGANSSDataBitsSgn ganssDataBitsSgnList;
   OSRTDList extElem1;
} rrlp_GanssDataBitsElement;

EXTERN int asn1PE_rrlp_GanssDataBitsElement (OSCTXT* pctxt, rrlp_GanssDataBitsElement* pvalue);

EXTERN int asn1PD_rrlp_GanssDataBitsElement (OSCTXT* pctxt, rrlp_GanssDataBitsElement* pvalue);

EXTERN void asn1Free_rrlp_GanssDataBitsElement (OSCTXT *pctxt, 
   rrlp_GanssDataBitsElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGanssDataBitsElement                                 */
/*                                                            */
/**************************************************************/
/*
SeqOfGanssDataBitsElement ::= SEQUENCE (SIZE (1..32)) OF GanssDataBitsElement
*/
typedef struct EXTERN rrlp_SeqOfGanssDataBitsElement {
   OSUINT32 n;
   rrlp_GanssDataBitsElement *elem;
} rrlp_SeqOfGanssDataBitsElement;

EXTERN int asn1PE_rrlp_SeqOfGanssDataBitsElement (OSCTXT* pctxt, rrlp_SeqOfGanssDataBitsElement* pvalue);

EXTERN int asn1PD_rrlp_SeqOfGanssDataBitsElement (OSCTXT* pctxt, rrlp_SeqOfGanssDataBitsElement* pvalue);

EXTERN void asn1Free_rrlp_SeqOfGanssDataBitsElement (OSCTXT *pctxt, 
   rrlp_SeqOfGanssDataBitsElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSDataBitAssist                                        */
/*                                                            */
/**************************************************************/
/*
 GANSS Data Bit Assistance IE

GANSSDataBitAssist ::= SEQUENCE {
   ganssTOD [0] INTEGER (0..59),
   ganssDataBitsSatList [1] SeqOfGanssDataBitsElement,
   ...
}
*/
typedef struct EXTERN rrlp_GANSSDataBitAssist {
   OSUINT8 ganssTOD;
   rrlp_SeqOfGanssDataBitsElement ganssDataBitsSatList;
   OSRTDList extElem1;
} rrlp_GANSSDataBitAssist;

EXTERN int asn1PE_rrlp_GANSSDataBitAssist (OSCTXT* pctxt, rrlp_GANSSDataBitAssist* pvalue);

EXTERN int asn1PD_rrlp_GANSSDataBitAssist (OSCTXT* pctxt, rrlp_GANSSDataBitAssist* pvalue);

EXTERN void asn1Free_rrlp_GANSSDataBitAssist (OSCTXT *pctxt, 
   rrlp_GANSSDataBitAssist* pvalue);

/**************************************************************/
/*                                                            */
/*  AdditionalDopplerFields                                   */
/*                                                            */
/**************************************************************/
/*
AdditionalDopplerFields ::= SEQUENCE {
   doppler1 [0] INTEGER (0..63),
   dopplerUncertainty [1] INTEGER (0..4)
}
*/
typedef struct EXTERN rrlp_AdditionalDopplerFields {
   OSUINT8 doppler1;
   OSUINT8 dopplerUncertainty;
} rrlp_AdditionalDopplerFields;

EXTERN int asn1PE_rrlp_AdditionalDopplerFields (OSCTXT* pctxt, rrlp_AdditionalDopplerFields* pvalue);

EXTERN int asn1PD_rrlp_AdditionalDopplerFields (OSCTXT* pctxt, rrlp_AdditionalDopplerFields* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSRefMeasurementElement                                */
/*                                                            */
/**************************************************************/
/*
GANSSRefMeasurementElement ::= SEQUENCE {
   svID [0] SVID,
   doppler0 [1] INTEGER (-2048..2047),
   additionalDoppler [2] AdditionalDopplerFields OPTIONAL,
   codePhase [3] INTEGER (0..1022),
   intCodePhase [4] INTEGER (0..127),
   codePhaseSearchWindow [5] INTEGER (0..31),
   additionalAngle [6] AddionalAngleFields OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_GANSSRefMeasurementElement {
   struct {
      unsigned additionalDopplerPresent : 1;
      unsigned additionalAnglePresent : 1;
   } m;
   rrlp_SVID svID;
   OSINT16 doppler0;
   rrlp_AdditionalDopplerFields additionalDoppler;
   OSUINT16 codePhase;
   OSUINT8 intCodePhase;
   OSUINT8 codePhaseSearchWindow;
   rrlp_AddionalAngleFields additionalAngle;
   OSRTDList extElem1;
} rrlp_GANSSRefMeasurementElement;

EXTERN int asn1PE_rrlp_GANSSRefMeasurementElement (OSCTXT* pctxt, rrlp_GANSSRefMeasurementElement* pvalue);

EXTERN int asn1PD_rrlp_GANSSRefMeasurementElement (OSCTXT* pctxt, rrlp_GANSSRefMeasurementElement* pvalue);

EXTERN void asn1Free_rrlp_GANSSRefMeasurementElement (OSCTXT *pctxt, 
   rrlp_GANSSRefMeasurementElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGANSSRefMeasurementElement                           */
/*                                                            */
/**************************************************************/
/*
SeqOfGANSSRefMeasurementElement ::= SEQUENCE (SIZE (1..16)) OF GANSSRefMeasurementElement
*/
typedef struct EXTERN rrlp_SeqOfGANSSRefMeasurementElement {
   OSUINT32 n;
   rrlp_GANSSRefMeasurementElement *elem;
} rrlp_SeqOfGANSSRefMeasurementElement;

EXTERN int asn1PE_rrlp_SeqOfGANSSRefMeasurementElement (OSCTXT* pctxt, rrlp_SeqOfGANSSRefMeasurementElement* pvalue);

EXTERN int asn1PD_rrlp_SeqOfGANSSRefMeasurementElement (OSCTXT* pctxt, rrlp_SeqOfGANSSRefMeasurementElement* pvalue);

EXTERN void asn1Free_rrlp_SeqOfGANSSRefMeasurementElement (OSCTXT *pctxt, 
   rrlp_SeqOfGANSSRefMeasurementElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSRefMeasurementAssist                                 */
/*                                                            */
/**************************************************************/
/*
 GANSS Reference Measurement Assistance IE
 Code and Doppler assistance from the network. 

GANSSRefMeasurementAssist ::= SEQUENCE {
   ganssSignalID [0] GANSSSignalID,
   ganssRefMeasAssistList [1] SeqOfGANSSRefMeasurementElement
}
*/
typedef struct EXTERN rrlp_GANSSRefMeasurementAssist {
   rrlp_GANSSSignalID ganssSignalID;
   rrlp_SeqOfGANSSRefMeasurementElement ganssRefMeasAssistList;
} rrlp_GANSSRefMeasurementAssist;

EXTERN int asn1PE_rrlp_GANSSRefMeasurementAssist (OSCTXT* pctxt, rrlp_GANSSRefMeasurementAssist* pvalue);

EXTERN int asn1PD_rrlp_GANSSRefMeasurementAssist (OSCTXT* pctxt, rrlp_GANSSRefMeasurementAssist* pvalue);

EXTERN void asn1Free_rrlp_GANSSRefMeasurementAssist (OSCTXT *pctxt, 
   rrlp_GANSSRefMeasurementAssist* pvalue);

/**************************************************************/
/*                                                            */
/*  Almanac_KeplerianSet                                      */
/*                                                            */
/**************************************************************/
/*
 Almanac parameters according to Keplerian parameters

Almanac-KeplerianSet ::= SEQUENCE {
   svID [0] SVID,
   kepAlmanacE [1] INTEGER (0..2047),
   kepAlmanacDeltaI [2] INTEGER (-1024..1023),
   kepAlmanacOmegaDot [3] INTEGER (-1024..1023),
   kepSVHealth [4] INTEGER (0..15),
   kepAlmanacAPowerHalf [5] INTEGER (-65536..65535),
   kepAlmanacOmega0 [6] INTEGER (-32768..32767),
   kepAlmanacW [7] INTEGER (-32768..32767),
   kepAlmanacM0 [8] INTEGER (-32768..32767),
   kepAlmanacAF0 [9] INTEGER (-8192..8191),
   kepAlmanacAF1 [10] INTEGER (-1024..1023)
}
*/
typedef struct EXTERN rrlp_Almanac_KeplerianSet {
   rrlp_SVID svID;
   OSUINT16 kepAlmanacE;
   OSINT16 kepAlmanacDeltaI;
   OSINT16 kepAlmanacOmegaDot;
   OSUINT8 kepSVHealth;
   OSINT32 kepAlmanacAPowerHalf;
   OSINT16 kepAlmanacOmega0;
   OSINT16 kepAlmanacW;
   OSINT16 kepAlmanacM0;
   OSINT16 kepAlmanacAF0;
   OSINT16 kepAlmanacAF1;
} rrlp_Almanac_KeplerianSet;

EXTERN int asn1PE_rrlp_Almanac_KeplerianSet (OSCTXT* pctxt, rrlp_Almanac_KeplerianSet* pvalue);

EXTERN int asn1PD_rrlp_Almanac_KeplerianSet (OSCTXT* pctxt, rrlp_Almanac_KeplerianSet* pvalue);

/**************************************************************/
/*                                                            */
/*  Almanac_NAVKeplerianSet                                   */
/*                                                            */
/**************************************************************/
/*
Almanac-NAVKeplerianSet ::= SEQUENCE {
   svID [0] SVID,
   navAlmE [1] INTEGER (0..65535),
   navAlmDeltaI [2] INTEGER (-32768..32767),
   navAlmOMEGADOT [3] INTEGER (-32768..32767),
   navAlmSVHealth [4] INTEGER (0..255),
   navAlmSqrtA [5] INTEGER (0..16777215),
   navAlmOMEGAo [6] INTEGER (-8388608..8388607),
   navAlmOmega [7] INTEGER (-8388608..8388607),
   navAlmMo [8] INTEGER (-8388608..8388607),
   navAlmaf0 [9] INTEGER (-1024..1023),
   navAlmaf1 [10] INTEGER (-1024..1023)
}
*/
typedef struct EXTERN rrlp_Almanac_NAVKeplerianSet {
   rrlp_SVID svID;
   OSUINT16 navAlmE;
   OSINT16 navAlmDeltaI;
   OSINT16 navAlmOMEGADOT;
   OSUINT8 navAlmSVHealth;
   OSUINT32 navAlmSqrtA;
   OSINT32 navAlmOMEGAo;
   OSINT32 navAlmOmega;
   OSINT32 navAlmMo;
   OSINT16 navAlmaf0;
   OSINT16 navAlmaf1;
} rrlp_Almanac_NAVKeplerianSet;

EXTERN int asn1PE_rrlp_Almanac_NAVKeplerianSet (OSCTXT* pctxt, rrlp_Almanac_NAVKeplerianSet* pvalue);

EXTERN int asn1PD_rrlp_Almanac_NAVKeplerianSet (OSCTXT* pctxt, rrlp_Almanac_NAVKeplerianSet* pvalue);

/**************************************************************/
/*                                                            */
/*  Almanac_ReducedKeplerianSet                               */
/*                                                            */
/**************************************************************/
/*
Almanac-ReducedKeplerianSet ::= SEQUENCE {
   svID [0] SVID,
   redAlmDeltaA [1] INTEGER (-128..127),
   redAlmOmega0 [2] INTEGER (-64..63),
   redAlmPhi0 [3] INTEGER (-64..63),
   redAlmL1Health [4] BOOLEAN,
   redAlmL2Health [5] BOOLEAN,
   redAlmL5Health [6] BOOLEAN
}
*/
typedef struct EXTERN rrlp_Almanac_ReducedKeplerianSet {
   rrlp_SVID svID;
   OSINT8 redAlmDeltaA;
   OSINT8 redAlmOmega0;
   OSINT8 redAlmPhi0;
   OSBOOL redAlmL1Health;
   OSBOOL redAlmL2Health;
   OSBOOL redAlmL5Health;
} rrlp_Almanac_ReducedKeplerianSet;

EXTERN int asn1PE_rrlp_Almanac_ReducedKeplerianSet (OSCTXT* pctxt, rrlp_Almanac_ReducedKeplerianSet* pvalue);

EXTERN int asn1PD_rrlp_Almanac_ReducedKeplerianSet (OSCTXT* pctxt, rrlp_Almanac_ReducedKeplerianSet* pvalue);

/**************************************************************/
/*                                                            */
/*  Almanac_MidiAlmanacSet                                    */
/*                                                            */
/**************************************************************/
/*
Almanac-MidiAlmanacSet ::= SEQUENCE {
   svID [0] SVID,
   midiAlmE [1] INTEGER (0..2047),
   midiAlmDeltaI [2] INTEGER (-1024..1023),
   midiAlmOmegaDot [3] INTEGER (-1024..1023),
   midiAlmSqrtA [4] INTEGER (0..131071),
   midiAlmOmega0 [5] INTEGER (-32768..32767),
   midiAlmOmega [6] INTEGER (-32768..32767),
   midiAlmMo [7] INTEGER (-32768..32767),
   midiAlmaf0 [8] INTEGER (-1024..1023),
   midiAlmaf1 [9] INTEGER (-512..511),
   midiAlmL1Health [10] BOOLEAN,
   midiAlmL2Health [11] BOOLEAN,
   midiAlmL5Health [12] BOOLEAN
}
*/
typedef struct EXTERN rrlp_Almanac_MidiAlmanacSet {
   rrlp_SVID svID;
   OSUINT16 midiAlmE;
   OSINT16 midiAlmDeltaI;
   OSINT16 midiAlmOmegaDot;
   OSUINT32 midiAlmSqrtA;
   OSINT16 midiAlmOmega0;
   OSINT16 midiAlmOmega;
   OSINT16 midiAlmMo;
   OSINT16 midiAlmaf0;
   OSINT16 midiAlmaf1;
   OSBOOL midiAlmL1Health;
   OSBOOL midiAlmL2Health;
   OSBOOL midiAlmL5Health;
} rrlp_Almanac_MidiAlmanacSet;

EXTERN int asn1PE_rrlp_Almanac_MidiAlmanacSet (OSCTXT* pctxt, rrlp_Almanac_MidiAlmanacSet* pvalue);

EXTERN int asn1PD_rrlp_Almanac_MidiAlmanacSet (OSCTXT* pctxt, rrlp_Almanac_MidiAlmanacSet* pvalue);

/**************************************************************/
/*                                                            */
/*  Almanac_GlonassAlmanacSet                                 */
/*                                                            */
/**************************************************************/
/*
Almanac-GlonassAlmanacSet ::= SEQUENCE {
   gloAlmNA [0] INTEGER (1..1461),
   gloAlmnA [1] INTEGER (1..24),
   gloAlmHA [2] INTEGER (0..31),
   gloAlmLambdaA [3] INTEGER (-1048576..1048575),
   gloAlmtlambdaA [4] INTEGER (0..2097151),
   gloAlmDeltaIa [5] INTEGER (-131072..131071),
   gloAkmDeltaTA [6] INTEGER (-2097152..2097151),
   gloAlmDeltaTdotA [7] INTEGER (-64..63),
   gloAlmEpsilonA [8] INTEGER (0..32767),
   gloAlmOmegaA [9] INTEGER (-32768..32767),
   gloAlmTauA [10] INTEGER (-512..511),
   gloAlmCA [11] INTEGER (0..1),
   gloAlmMA [12] BIT STRING  (SIZE (2)) OPTIONAL
}
*/
typedef struct EXTERN rrlp_Almanac_GlonassAlmanacSet {
   struct {
      unsigned gloAlmMAPresent : 1;
   } m;
   OSUINT16 gloAlmNA;
   OSUINT8 gloAlmnA;
   OSUINT8 gloAlmHA;
   OSINT32 gloAlmLambdaA;
   OSUINT32 gloAlmtlambdaA;
   OSINT32 gloAlmDeltaIa;
   OSINT32 gloAkmDeltaTA;
   OSINT8 gloAlmDeltaTdotA;
   OSUINT16 gloAlmEpsilonA;
   OSINT16 gloAlmOmegaA;
   OSINT16 gloAlmTauA;
   OSUINT8 gloAlmCA;
   ASN1BitStr32 gloAlmMA;
} rrlp_Almanac_GlonassAlmanacSet;

EXTERN int asn1PE_rrlp_Almanac_GlonassAlmanacSet (OSCTXT* pctxt, rrlp_Almanac_GlonassAlmanacSet* pvalue);

EXTERN int asn1PD_rrlp_Almanac_GlonassAlmanacSet (OSCTXT* pctxt, rrlp_Almanac_GlonassAlmanacSet* pvalue);

/**************************************************************/
/*                                                            */
/*  Almanac_ECEFsbasAlmanacSet                                */
/*                                                            */
/**************************************************************/
/*
Almanac-ECEFsbasAlmanacSet ::= SEQUENCE {
   sbasAlmDataID [0] INTEGER (0..3),
   svID [1] SVID,
   sbasAlmHealth [2] BIT STRING  (SIZE (8)),
   sbasAlmXg [3] INTEGER (-16384..16383),
   sbasAlmYg [4] INTEGER (-16384..16383),
   sbasAlmZg [5] INTEGER (-256..255),
   sbasAlmXgdot [6] INTEGER (-4..3),
   sbasAlmYgDot [7] INTEGER (-4..3),
   sbasAlmZgDot [8] INTEGER (-8..7),
   sbasAlmTo [9] INTEGER (0..2047)
}
*/
typedef struct EXTERN rrlp_Almanac_ECEFsbasAlmanacSet {
   OSUINT8 sbasAlmDataID;
   rrlp_SVID svID;
   ASN1BitStr32 sbasAlmHealth;
   OSINT16 sbasAlmXg;
   OSINT16 sbasAlmYg;
   OSINT16 sbasAlmZg;
   OSINT8 sbasAlmXgdot;
   OSINT8 sbasAlmYgDot;
   OSINT8 sbasAlmZgDot;
   OSUINT16 sbasAlmTo;
} rrlp_Almanac_ECEFsbasAlmanacSet;

EXTERN int asn1PE_rrlp_Almanac_ECEFsbasAlmanacSet (OSCTXT* pctxt, rrlp_Almanac_ECEFsbasAlmanacSet* pvalue);

EXTERN int asn1PD_rrlp_Almanac_ECEFsbasAlmanacSet (OSCTXT* pctxt, rrlp_Almanac_ECEFsbasAlmanacSet* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSAlmanacElement                                       */
/*                                                            */
/**************************************************************/
/*
 GANSS Almanac Model 

GANSSAlmanacElement ::= CHOICE {
   keplerianAlmanacSet [0] Almanac-KeplerianSet,
   ...,
   keplerianNAVAlmanac [1] Almanac-NAVKeplerianSet,
   keplerianReducedAlmanac [2] Almanac-ReducedKeplerianSet,
   keplerianMidiAlmanac [3] Almanac-MidiAlmanacSet,
   keplerianGLONASS [4] Almanac-GlonassAlmanacSet,
   ecefSBASAlmanac [5] Almanac-ECEFsbasAlmanacSet
}
*/
/* Choice tag constants */

#define T_rrlp_GANSSAlmanacElement_keplerianAlmanacSet 1
#define T_rrlp_GANSSAlmanacElement_keplerianNAVAlmanac 2
#define T_rrlp_GANSSAlmanacElement_keplerianReducedAlmanac 3
#define T_rrlp_GANSSAlmanacElement_keplerianMidiAlmanac 4
#define T_rrlp_GANSSAlmanacElement_keplerianGLONASS 5
#define T_rrlp_GANSSAlmanacElement_ecefSBASAlmanac 6
#define T_rrlp_GANSSAlmanacElement_extElem1 7

typedef struct EXTERN rrlp_GANSSAlmanacElement {
   OSUINT32 t;
   union {
      /* t = 1 */
      rrlp_Almanac_KeplerianSet *keplerianAlmanacSet;
      /* t = 2 */
      rrlp_Almanac_NAVKeplerianSet *keplerianNAVAlmanac;
      /* t = 3 */
      rrlp_Almanac_ReducedKeplerianSet *keplerianReducedAlmanac;
      /* t = 4 */
      rrlp_Almanac_MidiAlmanacSet *keplerianMidiAlmanac;
      /* t = 5 */
      rrlp_Almanac_GlonassAlmanacSet *keplerianGLONASS;
      /* t = 6 */
      rrlp_Almanac_ECEFsbasAlmanacSet *ecefSBASAlmanac;
      /* t = 7 */
      ASN1OpenType *extElem1;
   } u;
} rrlp_GANSSAlmanacElement;

EXTERN int asn1PE_rrlp_GANSSAlmanacElement (OSCTXT* pctxt, rrlp_GANSSAlmanacElement* pvalue);

EXTERN int asn1PD_rrlp_GANSSAlmanacElement (OSCTXT* pctxt, rrlp_GANSSAlmanacElement* pvalue);

EXTERN void asn1Free_rrlp_GANSSAlmanacElement (OSCTXT *pctxt, 
   rrlp_GANSSAlmanacElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGANSSAlmanacElement                                  */
/*                                                            */
/**************************************************************/
/*
SeqOfGANSSAlmanacElement ::= SEQUENCE (SIZE (1..36)) OF GANSSAlmanacElement
*/
typedef struct EXTERN rrlp_SeqOfGANSSAlmanacElement {
   OSUINT32 n;
   rrlp_GANSSAlmanacElement *elem;
} rrlp_SeqOfGANSSAlmanacElement;

EXTERN int asn1PE_rrlp_SeqOfGANSSAlmanacElement (OSCTXT* pctxt, rrlp_SeqOfGANSSAlmanacElement* pvalue);

EXTERN int asn1PD_rrlp_SeqOfGANSSAlmanacElement (OSCTXT* pctxt, rrlp_SeqOfGANSSAlmanacElement* pvalue);

EXTERN void asn1Free_rrlp_SeqOfGANSSAlmanacElement (OSCTXT *pctxt, 
   rrlp_SeqOfGANSSAlmanacElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSAlmanacModel                                         */
/*                                                            */
/**************************************************************/
/*
 GANSS Almanac Model IE

GANSSAlmanacModel ::= SEQUENCE {
   weekNumber [0] INTEGER (0..255),
   toa [1] INTEGER (0..255) OPTIONAL,
   ioda [2] INTEGER (0..3) OPTIONAL,
   ganssAlmanacList [3] SeqOfGANSSAlmanacElement
}
*/
typedef struct EXTERN rrlp_GANSSAlmanacModel {
   struct {
      unsigned toaPresent : 1;
      unsigned iodaPresent : 1;
   } m;
   OSUINT8 weekNumber;
   OSUINT8 toa;
   OSUINT8 ioda;
   rrlp_SeqOfGANSSAlmanacElement ganssAlmanacList;
} rrlp_GANSSAlmanacModel;

EXTERN int asn1PE_rrlp_GANSSAlmanacModel (OSCTXT* pctxt, rrlp_GANSSAlmanacModel* pvalue);

EXTERN int asn1PD_rrlp_GANSSAlmanacModel (OSCTXT* pctxt, rrlp_GANSSAlmanacModel* pvalue);

EXTERN void asn1Free_rrlp_GANSSAlmanacModel (OSCTXT *pctxt, 
   rrlp_GANSSAlmanacModel* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSUTCModel                                             */
/*                                                            */
/**************************************************************/
/*
 GANSS Universal Time Coordinate Model (Model-1)

GANSSUTCModel ::= SEQUENCE {
   ganssUtcA1 [0] INTEGER (-8388608..8388607),
   ganssUtcA0 [1] INTEGER (-2147483648..2147483647),
   ganssUtcTot [2] INTEGER (0..255),
   ganssUtcWNt [3] INTEGER (0..255),
   ganssUtcDeltaTls [4] INTEGER (-128..127),
   ganssUtcWNlsf [5] INTEGER (0..255),
   ganssUtcDN [6] INTEGER (-128..127),
   ganssUtcDeltaTlsf [7] INTEGER (-128..127)
}
*/
typedef struct EXTERN rrlp_GANSSUTCModel {
   OSINT32 ganssUtcA1;
   OSINT32 ganssUtcA0;
   OSUINT8 ganssUtcTot;
   OSUINT8 ganssUtcWNt;
   OSINT8 ganssUtcDeltaTls;
   OSUINT8 ganssUtcWNlsf;
   OSINT8 ganssUtcDN;
   OSINT8 ganssUtcDeltaTlsf;
} rrlp_GANSSUTCModel;

EXTERN int asn1PE_rrlp_GANSSUTCModel (OSCTXT* pctxt, rrlp_GANSSUTCModel* pvalue);

EXTERN int asn1PD_rrlp_GANSSUTCModel (OSCTXT* pctxt, rrlp_GANSSUTCModel* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSEphemerisExtensionTime                               */
/*                                                            */
/**************************************************************/
/*
GANSSEphemerisExtensionTime ::= SEQUENCE {
   ganssEphExtDay [0] INTEGER (0..8191),
   ganssEphExtTOD [1] GANSSTOD,
   ...
}
*/
typedef struct EXTERN rrlp_GANSSEphemerisExtensionTime {
   OSUINT16 ganssEphExtDay;
   rrlp_GANSSTOD ganssEphExtTOD;
   OSRTDList extElem1;
} rrlp_GANSSEphemerisExtensionTime;

EXTERN int asn1PE_rrlp_GANSSEphemerisExtensionTime (OSCTXT* pctxt, rrlp_GANSSEphemerisExtensionTime* pvalue);

EXTERN int asn1PD_rrlp_GANSSEphemerisExtensionTime (OSCTXT* pctxt, rrlp_GANSSEphemerisExtensionTime* pvalue);

EXTERN void asn1Free_rrlp_GANSSEphemerisExtensionTime (OSCTXT *pctxt, 
   rrlp_GANSSEphemerisExtensionTime* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSEphemerisExtensionHeader                             */
/*                                                            */
/**************************************************************/
/*
 The ganssEphemerisHeader and the ganssReferenceSet are mandatory only once in the delivery of the
 GANSS Ephemeris Extension.  The ganssReferenceSet shall include all healthy satellite vehicles 
 at the time of message construction.

GANSSEphemerisExtensionHeader ::= SEQUENCE {
   timeAtEstimation [0] GANSSEphemerisExtensionTime,
   validityPeriod [1] INTEGER (1..8),
   ephemerisExtensionDuration [2] INTEGER (1..512),
   ...
}
*/
typedef struct EXTERN rrlp_GANSSEphemerisExtensionHeader {
   rrlp_GANSSEphemerisExtensionTime timeAtEstimation;
   OSUINT8 validityPeriod;
   OSUINT16 ephemerisExtensionDuration;
   OSRTDList extElem1;
} rrlp_GANSSEphemerisExtensionHeader;

EXTERN int asn1PE_rrlp_GANSSEphemerisExtensionHeader (OSCTXT* pctxt, rrlp_GANSSEphemerisExtensionHeader* pvalue);

EXTERN int asn1PD_rrlp_GANSSEphemerisExtensionHeader (OSCTXT* pctxt, rrlp_GANSSEphemerisExtensionHeader* pvalue);

EXTERN void asn1Free_rrlp_GANSSEphemerisExtensionHeader (OSCTXT *pctxt, 
   rrlp_GANSSEphemerisExtensionHeader* pvalue);

/**************************************************************/
/*                                                            */
/*  ReferenceNavModel                                         */
/*                                                            */
/**************************************************************/
/*
 Reference Nav Model for Ephepmeris Extension

ReferenceNavModel ::= SEQUENCE {
   keplerToe [0] INTEGER (0..37799),
   keplerW [1] INTEGER (-2147483648..2147483647),
   keplerDeltaN [2] INTEGER (-32768..32767),
   keplerM0 [3] INTEGER (-2147483648..2147483647),
   keplerOmegaDot [4] INTEGER (-8388608..8388607),
   keplerE [5] INTEGER (0..4294967295),
   keplerIDot [6] INTEGER (-8192..8191),
   keplerAPowerHalf [7] INTEGER (0..4294967295),
   keplerI0 [8] INTEGER (-2147483648..2147483647),
   keplerOmega0 [9] INTEGER (-2147483648..2147483647),
   keplerCrs [10] INTEGER (-32768..32767),
   keplerCis [11] INTEGER (-32768..32767),
   keplerCus [12] INTEGER (-32768..32767),
   keplerCrc [13] INTEGER (-32768..32767),
   keplerCic [14] INTEGER (-32768..32767),
   keplerCuc [15] INTEGER (-32768..32767)
}
*/
typedef struct EXTERN rrlp_ReferenceNavModel {
   OSUINT16 keplerToe;
   OSINT32 keplerW;
   OSINT16 keplerDeltaN;
   OSINT32 keplerM0;
   OSINT32 keplerOmegaDot;
   OSUINT32 keplerE;
   OSINT16 keplerIDot;
   OSUINT32 keplerAPowerHalf;
   OSINT32 keplerI0;
   OSINT32 keplerOmega0;
   OSINT16 keplerCrs;
   OSINT16 keplerCis;
   OSINT16 keplerCus;
   OSINT16 keplerCrc;
   OSINT16 keplerCic;
   OSINT16 keplerCuc;
} rrlp_ReferenceNavModel;

EXTERN int asn1PE_rrlp_ReferenceNavModel (OSCTXT* pctxt, rrlp_ReferenceNavModel* pvalue);

EXTERN int asn1PD_rrlp_ReferenceNavModel (OSCTXT* pctxt, rrlp_ReferenceNavModel* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSReferenceOrbit                                       */
/*                                                            */
/**************************************************************/
/*
The number of reference orbits can be read from number of elements in this sequence

GANSSReferenceOrbit ::= SEQUENCE {
   svID [0] SVID,
   ganssOrbitModel [1] ReferenceNavModel,
   ganssClockModel [2] GANSSClockModel,
   ...
}
*/
typedef struct EXTERN rrlp_GANSSReferenceOrbit {
   rrlp_SVID svID;
   rrlp_ReferenceNavModel ganssOrbitModel;
   rrlp_GANSSClockModel ganssClockModel;
   OSRTDList extElem1;
} rrlp_GANSSReferenceOrbit;

EXTERN int asn1PE_rrlp_GANSSReferenceOrbit (OSCTXT* pctxt, rrlp_GANSSReferenceOrbit* pvalue);

EXTERN int asn1PD_rrlp_GANSSReferenceOrbit (OSCTXT* pctxt, rrlp_GANSSReferenceOrbit* pvalue);

EXTERN void asn1Free_rrlp_GANSSReferenceOrbit (OSCTXT *pctxt, 
   rrlp_GANSSReferenceOrbit* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGANSSRefOrbit                                        */
/*                                                            */
/**************************************************************/
/*
SeqOfGANSSRefOrbit ::= SEQUENCE (SIZE (1..32)) OF GANSSReferenceOrbit
*/
typedef struct EXTERN rrlp_SeqOfGANSSRefOrbit {
   OSUINT32 n;
   rrlp_GANSSReferenceOrbit *elem;
} rrlp_SeqOfGANSSRefOrbit;

EXTERN int asn1PE_rrlp_SeqOfGANSSRefOrbit (OSCTXT* pctxt, rrlp_SeqOfGANSSRefOrbit* pvalue);

EXTERN int asn1PD_rrlp_SeqOfGANSSRefOrbit (OSCTXT* pctxt, rrlp_SeqOfGANSSRefOrbit* pvalue);

EXTERN void asn1Free_rrlp_SeqOfGANSSRefOrbit (OSCTXT *pctxt, 
   rrlp_SeqOfGANSSRefOrbit* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSEphemerisDeltaBitSizes                               */
/*                                                            */
/**************************************************************/
/*
 Each octet string element in GANSSDeltaElementList corresponds to one PRN within one epoch
 Table 55.11 of the annex shows the organization of the delta ephemeris octet string.
 Decoding of each of the octet strings is accomplished by consulting the ephemerisDeltaSizes
 table to learn the length and order of each of the parameters in the ephemerisDelta payload.
 Post decode scaling is accomplished by consulting the ephemerisDeltaScales table to learn the
 scale factors to apply to the terms in the delta ephemeris.
 Ephemeris Delta Bit Sizes.

GANSSEphemerisDeltaBitSizes ::= SEQUENCE {
   bitsize-delta-omega [0] INTEGER (1..32),
   bitsize-delta-deltaN [1] INTEGER (1..16),
   bitsize-delta-m0 [2] INTEGER (1..32),
   bitsize-delta-omegadot [3] INTEGER (1..24),
   bitsize-delta-e [4] INTEGER (1..32),
   bitsize-delta-idot [5] INTEGER (1..14),
   bitsize-delta-sqrtA [6] INTEGER (1..32),
   bitsize-delta-i0 [7] INTEGER (1..32),
   bitsize-delta-omega0 [8] INTEGER (1..32),
   bitsize-delta-crs [9] INTEGER (1..16),
   bitsize-delta-cis [10] INTEGER (1..16),
   bitsize-delta-cus [11] INTEGER (1..16),
   bitsize-delta-crc [12] INTEGER (1..16),
   bitsize-delta-cic [13] INTEGER (1..16),
   bitsize-delta-cuc [14] INTEGER (1..16),
   bitsize-delta-tgd1 [15] INTEGER (1..10),
   bitsize-delta-tgd2 [16] INTEGER (1..10),
   ...
}
*/
typedef struct EXTERN rrlp_GANSSEphemerisDeltaBitSizes {
   OSUINT8 bitsize_delta_omega;
   OSUINT8 bitsize_delta_deltaN;
   OSUINT8 bitsize_delta_m0;
   OSUINT8 bitsize_delta_omegadot;
   OSUINT8 bitsize_delta_e;
   OSUINT8 bitsize_delta_idot;
   OSUINT8 bitsize_delta_sqrtA;
   OSUINT8 bitsize_delta_i0;
   OSUINT8 bitsize_delta_omega0;
   OSUINT8 bitsize_delta_crs;
   OSUINT8 bitsize_delta_cis;
   OSUINT8 bitsize_delta_cus;
   OSUINT8 bitsize_delta_crc;
   OSUINT8 bitsize_delta_cic;
   OSUINT8 bitsize_delta_cuc;
   OSUINT8 bitsize_delta_tgd1;
   OSUINT8 bitsize_delta_tgd2;
   OSRTDList extElem1;
} rrlp_GANSSEphemerisDeltaBitSizes;

EXTERN int asn1PE_rrlp_GANSSEphemerisDeltaBitSizes (OSCTXT* pctxt, rrlp_GANSSEphemerisDeltaBitSizes* pvalue);

EXTERN int asn1PD_rrlp_GANSSEphemerisDeltaBitSizes (OSCTXT* pctxt, rrlp_GANSSEphemerisDeltaBitSizes* pvalue);

EXTERN void asn1Free_rrlp_GANSSEphemerisDeltaBitSizes (OSCTXT *pctxt, 
   rrlp_GANSSEphemerisDeltaBitSizes* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSEphemerisDeltaScales                                 */
/*                                                            */
/**************************************************************/
/*
GANSSEphemerisDeltaScales ::= SEQUENCE {
   scale-delta-omega [0] INTEGER (-16..15),
   scale-delta-deltaN [1] INTEGER (-16..15),
   scale-delta-m0 [2] INTEGER (-16..15),
   scale-delta-omegadot [3] INTEGER (-16..15),
   scale-delta-e [4] INTEGER (-16..15),
   scale-delta-idot [5] INTEGER (-16..15),
   scale-delta-sqrtA [6] INTEGER (-16..15),
   scale-delta-i0 [7] INTEGER (-16..15),
   scale-delta-omega0 [8] INTEGER (-16..15),
   scale-delta-crs [9] INTEGER (-16..15),
   scale-delta-cis [10] INTEGER (-16..15),
   scale-delta-cus [11] INTEGER (-16..15),
   scale-delta-crc [12] INTEGER (-16..15),
   scale-delta-cic [13] INTEGER (-16..15),
   scale-delta-cuc [14] INTEGER (-16..15),
   scale-delta-tgd1 [15] INTEGER (-16..15),
   scale-delta-tgd2 [16] INTEGER (-16..15),
   ...
}
*/
typedef struct EXTERN rrlp_GANSSEphemerisDeltaScales {
   OSINT8 scale_delta_omega;
   OSINT8 scale_delta_deltaN;
   OSINT8 scale_delta_m0;
   OSINT8 scale_delta_omegadot;
   OSINT8 scale_delta_e;
   OSINT8 scale_delta_idot;
   OSINT8 scale_delta_sqrtA;
   OSINT8 scale_delta_i0;
   OSINT8 scale_delta_omega0;
   OSINT8 scale_delta_crs;
   OSINT8 scale_delta_cis;
   OSINT8 scale_delta_cus;
   OSINT8 scale_delta_crc;
   OSINT8 scale_delta_cic;
   OSINT8 scale_delta_cuc;
   OSINT8 scale_delta_tgd1;
   OSINT8 scale_delta_tgd2;
   OSRTDList extElem1;
} rrlp_GANSSEphemerisDeltaScales;

EXTERN int asn1PE_rrlp_GANSSEphemerisDeltaScales (OSCTXT* pctxt, rrlp_GANSSEphemerisDeltaScales* pvalue);

EXTERN int asn1PD_rrlp_GANSSEphemerisDeltaScales (OSCTXT* pctxt, rrlp_GANSSEphemerisDeltaScales* pvalue);

EXTERN void asn1Free_rrlp_GANSSEphemerisDeltaScales (OSCTXT *pctxt, 
   rrlp_GANSSEphemerisDeltaScales* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSDeltaEpochHeader                                     */
/*                                                            */
/**************************************************************/
/*
 Each GANSSDeltaEpoch element contains a header and the delta values for a particular time window
 for all PRN's.

GANSSDeltaEpochHeader ::= SEQUENCE {
   validityPeriod [0] INTEGER (1..8) OPTIONAL,
   ephemerisDeltaSizes [1] GANSSEphemerisDeltaBitSizes OPTIONAL,
   ephemerisDeltaScales [2] GANSSEphemerisDeltaScales OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_GANSSDeltaEpochHeader {
   struct {
      unsigned validityPeriodPresent : 1;
      unsigned ephemerisDeltaSizesPresent : 1;
      unsigned ephemerisDeltaScalesPresent : 1;
   } m;
   OSUINT8 validityPeriod;
   rrlp_GANSSEphemerisDeltaBitSizes ephemerisDeltaSizes;
   rrlp_GANSSEphemerisDeltaScales ephemerisDeltaScales;
   OSRTDList extElem1;
} rrlp_GANSSDeltaEpochHeader;

EXTERN int asn1PE_rrlp_GANSSDeltaEpochHeader (OSCTXT* pctxt, rrlp_GANSSDeltaEpochHeader* pvalue);

EXTERN int asn1PD_rrlp_GANSSDeltaEpochHeader (OSCTXT* pctxt, rrlp_GANSSDeltaEpochHeader* pvalue);

EXTERN void asn1Free_rrlp_GANSSDeltaEpochHeader (OSCTXT *pctxt, 
   rrlp_GANSSDeltaEpochHeader* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSDeltaElementList_element                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GANSSDeltaElementList'
*/
typedef struct EXTERN rrlp_GANSSDeltaElementList_element {
   OSUINT32 numocts;
   OSOCTET data[49];
} rrlp_GANSSDeltaElementList_element;

EXTERN int asn1PE_rrlp_GANSSDeltaElementList_element (OSCTXT* pctxt, rrlp_GANSSDeltaElementList_element* pvalue);

EXTERN int asn1PD_rrlp_GANSSDeltaElementList_element (OSCTXT* pctxt, rrlp_GANSSDeltaElementList_element* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSDeltaElementList                                     */
/*                                                            */
/**************************************************************/
/*
 In each of the GANSSDeltaEpochs, if the optional element, validityPeriod is not included, the
 value in GANSSEphemerisExtensionHeader shall be used.  If the optional elements 
 ephemerisDeltaSizes or ephemerisDeltaScales are not included, then the default ephemeris delta
 sizes and scales shall be used.  The default sizes and scales are found in the annex in the 
 table 55.11.

GANSSDeltaElementList ::= SEQUENCE (SIZE (1..32)) OF OCTET STRING (SIZE (1..49))
*/
typedef struct EXTERN rrlp_GANSSDeltaElementList {
   OSUINT32 n;
   rrlp_GANSSDeltaElementList_element *elem;
} rrlp_GANSSDeltaElementList;

EXTERN int asn1PE_rrlp_GANSSDeltaElementList (OSCTXT* pctxt, rrlp_GANSSDeltaElementList* pvalue);

EXTERN int asn1PD_rrlp_GANSSDeltaElementList (OSCTXT* pctxt, rrlp_GANSSDeltaElementList* pvalue);

EXTERN void asn1Free_rrlp_GANSSDeltaElementList (OSCTXT *pctxt, 
   rrlp_GANSSDeltaElementList* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSEphemerisDeltaEpoch                                  */
/*                                                            */
/**************************************************************/
/*
GANSSEphemerisDeltaEpoch ::= SEQUENCE {
   ganssDeltaEpochHeader [0] GANSSDeltaEpochHeader OPTIONAL,
   ganssDeltaElementList [1] GANSSDeltaElementList,
   ...
}
*/
typedef struct EXTERN rrlp_GANSSEphemerisDeltaEpoch {
   struct {
      unsigned ganssDeltaEpochHeaderPresent : 1;
   } m;
   rrlp_GANSSDeltaEpochHeader ganssDeltaEpochHeader;
   rrlp_GANSSDeltaElementList ganssDeltaElementList;
   OSRTDList extElem1;
} rrlp_GANSSEphemerisDeltaEpoch;

EXTERN int asn1PE_rrlp_GANSSEphemerisDeltaEpoch (OSCTXT* pctxt, rrlp_GANSSEphemerisDeltaEpoch* pvalue);

EXTERN int asn1PD_rrlp_GANSSEphemerisDeltaEpoch (OSCTXT* pctxt, rrlp_GANSSEphemerisDeltaEpoch* pvalue);

EXTERN void asn1Free_rrlp_GANSSEphemerisDeltaEpoch (OSCTXT *pctxt, 
   rrlp_GANSSEphemerisDeltaEpoch* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSEphemerisDeltaMatrix                                 */
/*                                                            */
/**************************************************************/
/*
GANSSEphemerisDeltaMatrix ::= SEQUENCE (SIZE (1..128)) OF GANSSEphemerisDeltaEpoch
*/
typedef struct EXTERN rrlp_GANSSEphemerisDeltaMatrix {
   OSUINT32 n;
   rrlp_GANSSEphemerisDeltaEpoch *elem;
} rrlp_GANSSEphemerisDeltaMatrix;

EXTERN int asn1PE_rrlp_GANSSEphemerisDeltaMatrix (OSCTXT* pctxt, rrlp_GANSSEphemerisDeltaMatrix* pvalue);

EXTERN int asn1PD_rrlp_GANSSEphemerisDeltaMatrix (OSCTXT* pctxt, rrlp_GANSSEphemerisDeltaMatrix* pvalue);

EXTERN void asn1Free_rrlp_GANSSEphemerisDeltaMatrix (OSCTXT *pctxt, 
   rrlp_GANSSEphemerisDeltaMatrix* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSEphemerisExtension                                   */
/*                                                            */
/**************************************************************/
/*
GANSS Ephemeris Extension

GANSSEphemerisExtension ::= SEQUENCE {
   ganssEphemerisHeader [0] GANSSEphemerisExtensionHeader OPTIONAL,
   ganssReferenceSet [1] SeqOfGANSSRefOrbit OPTIONAL,
   ganssephemerisDeltasMatrix [2] GANSSEphemerisDeltaMatrix OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_GANSSEphemerisExtension {
   struct {
      unsigned ganssEphemerisHeaderPresent : 1;
      unsigned ganssReferenceSetPresent : 1;
      unsigned ganssephemerisDeltasMatrixPresent : 1;
   } m;
   rrlp_GANSSEphemerisExtensionHeader ganssEphemerisHeader;
   rrlp_SeqOfGANSSRefOrbit ganssReferenceSet;
   rrlp_GANSSEphemerisDeltaMatrix ganssephemerisDeltasMatrix;
   OSRTDList extElem1;
} rrlp_GANSSEphemerisExtension;

EXTERN int asn1PE_rrlp_GANSSEphemerisExtension (OSCTXT* pctxt, rrlp_GANSSEphemerisExtension* pvalue);

EXTERN int asn1PD_rrlp_GANSSEphemerisExtension (OSCTXT* pctxt, rrlp_GANSSEphemerisExtension* pvalue);

EXTERN void asn1Free_rrlp_GANSSEphemerisExtension (OSCTXT *pctxt, 
   rrlp_GANSSEphemerisExtension* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSSatEventsInfo_eventOccured                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GANSSSatEventsInfo'
*/
typedef struct rrlp_GANSSSatEventsInfo_eventOccured {
   OSUINT32 numbits;
   OSOCTET data[8];
} rrlp_GANSSSatEventsInfo_eventOccured;

EXTERN int asn1PE_rrlp_GANSSSatEventsInfo_eventOccured (OSCTXT* pctxt, rrlp_GANSSSatEventsInfo_eventOccured* pvalue);

EXTERN int asn1PD_rrlp_GANSSSatEventsInfo_eventOccured (OSCTXT* pctxt, rrlp_GANSSSatEventsInfo_eventOccured* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSSatEventsInfo_futureEventNoted                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GANSSSatEventsInfo'
*/
typedef struct rrlp_GANSSSatEventsInfo_futureEventNoted {
   OSUINT32 numbits;
   OSOCTET data[8];
} rrlp_GANSSSatEventsInfo_futureEventNoted;

EXTERN int asn1PE_rrlp_GANSSSatEventsInfo_futureEventNoted (OSCTXT* pctxt, rrlp_GANSSSatEventsInfo_futureEventNoted* pvalue);

EXTERN int asn1PD_rrlp_GANSSSatEventsInfo_futureEventNoted (OSCTXT* pctxt, rrlp_GANSSSatEventsInfo_futureEventNoted* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSSatEventsInfo                                        */
/*                                                            */
/**************************************************************/
/*
GANSSSatEventsInfo ::= SEQUENCE {
   eventOccured [0] BIT STRING  (SIZE (64)),
   futureEventNoted [1] BIT STRING  (SIZE (64)),
   ...
}
*/
typedef struct EXTERN rrlp_GANSSSatEventsInfo {
   rrlp_GANSSSatEventsInfo_eventOccured eventOccured;
   rrlp_GANSSSatEventsInfo_futureEventNoted futureEventNoted;
   OSRTDList extElem1;
} rrlp_GANSSSatEventsInfo;

EXTERN int asn1PE_rrlp_GANSSSatEventsInfo (OSCTXT* pctxt, rrlp_GANSSSatEventsInfo* pvalue);

EXTERN int asn1PD_rrlp_GANSSSatEventsInfo (OSCTXT* pctxt, rrlp_GANSSSatEventsInfo* pvalue);

EXTERN void asn1Free_rrlp_GANSSSatEventsInfo (OSCTXT *pctxt, 
   rrlp_GANSSSatEventsInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSEphemerisExtensionCheck                              */
/*                                                            */
/**************************************************************/
/*
 GANSS Ephemeris Extension Check

GANSSEphemerisExtensionCheck ::= SEQUENCE {
   ganssBeginTime [0] GANSSEphemerisExtensionTime,
   ganssEndTime [1] GANSSEphemerisExtensionTime,
   ganssSatEventsInfo [2] GANSSSatEventsInfo,
   ...
}
*/
typedef struct EXTERN rrlp_GANSSEphemerisExtensionCheck {
   rrlp_GANSSEphemerisExtensionTime ganssBeginTime;
   rrlp_GANSSEphemerisExtensionTime ganssEndTime;
   rrlp_GANSSSatEventsInfo ganssSatEventsInfo;
   OSRTDList extElem1;
} rrlp_GANSSEphemerisExtensionCheck;

EXTERN int asn1PE_rrlp_GANSSEphemerisExtensionCheck (OSCTXT* pctxt, rrlp_GANSSEphemerisExtensionCheck* pvalue);

EXTERN int asn1PD_rrlp_GANSSEphemerisExtensionCheck (OSCTXT* pctxt, rrlp_GANSSEphemerisExtensionCheck* pvalue);

EXTERN void asn1Free_rrlp_GANSSEphemerisExtensionCheck (OSCTXT *pctxt, 
   rrlp_GANSSEphemerisExtensionCheck* pvalue);

/**************************************************************/
/*                                                            */
/*  UTCmodelSet2                                              */
/*                                                            */
/**************************************************************/
/*
UTCmodelSet2 ::= SEQUENCE {
   utcA0 [0] INTEGER (-32768..32767),
   utcA1 [1] INTEGER (-4096..4095),
   utcA2 [2] INTEGER (-64..63),
   utcDeltaTls [3] INTEGER (-128..127),
   utcTot [4] INTEGER (0..65535),
   utcWNot [5] INTEGER (0..8191),
   utcWNlsf [6] INTEGER (0..255),
   utcDN [7] BIT STRING  (SIZE (4)),
   utcDeltaTlsf [8] INTEGER (-128..127)
}
*/
typedef struct EXTERN rrlp_UTCmodelSet2 {
   OSINT16 utcA0;
   OSINT16 utcA1;
   OSINT8 utcA2;
   OSINT8 utcDeltaTls;
   OSUINT16 utcTot;
   OSUINT16 utcWNot;
   OSUINT8 utcWNlsf;
   ASN1BitStr32 utcDN;
   OSINT8 utcDeltaTlsf;
} rrlp_UTCmodelSet2;

EXTERN int asn1PE_rrlp_UTCmodelSet2 (OSCTXT* pctxt, rrlp_UTCmodelSet2* pvalue);

EXTERN int asn1PD_rrlp_UTCmodelSet2 (OSCTXT* pctxt, rrlp_UTCmodelSet2* pvalue);

/**************************************************************/
/*                                                            */
/*  UTCmodelSet3                                              */
/*                                                            */
/**************************************************************/
/*
UTCmodelSet3 ::= SEQUENCE {
   nA [0] INTEGER (1..1461),
   tauC [1] INTEGER (-2147483648..2147483647),
   b1 [2] INTEGER (-1024..1023) OPTIONAL,
   b2 [3] INTEGER (-512..511) OPTIONAL,
   kp [4] BIT STRING  (SIZE (2)) OPTIONAL
}
*/
typedef struct EXTERN rrlp_UTCmodelSet3 {
   struct {
      unsigned b1Present : 1;
      unsigned b2Present : 1;
      unsigned kpPresent : 1;
   } m;
   OSUINT16 nA;
   OSINT32 tauC;
   OSINT16 b1;
   OSINT16 b2;
   ASN1BitStr32 kp;
} rrlp_UTCmodelSet3;

EXTERN int asn1PE_rrlp_UTCmodelSet3 (OSCTXT* pctxt, rrlp_UTCmodelSet3* pvalue);

EXTERN int asn1PD_rrlp_UTCmodelSet3 (OSCTXT* pctxt, rrlp_UTCmodelSet3* pvalue);

/**************************************************************/
/*                                                            */
/*  UTCmodelSet4                                              */
/*                                                            */
/**************************************************************/
/*
UTCmodelSet4 ::= SEQUENCE {
   utcA1wnt [0] INTEGER (-8388608..8388607),
   utcA0wnt [1] INTEGER (-2147483648..2147483647),
   utcTot [2] INTEGER (0..255),
   utcWNt [3] INTEGER (0..255),
   utcDeltaTls [4] INTEGER (-128..127),
   utcWNlsf [5] INTEGER (0..255),
   utcDN [6] INTEGER (-128..127),
   utcDeltaTlsf [7] INTEGER (-128..127),
   utcStandardID [8] INTEGER (0..7)
}
*/
typedef struct EXTERN rrlp_UTCmodelSet4 {
   OSINT32 utcA1wnt;
   OSINT32 utcA0wnt;
   OSUINT8 utcTot;
   OSUINT8 utcWNt;
   OSINT8 utcDeltaTls;
   OSUINT8 utcWNlsf;
   OSINT8 utcDN;
   OSINT8 utcDeltaTlsf;
   OSUINT8 utcStandardID;
} rrlp_UTCmodelSet4;

EXTERN int asn1PE_rrlp_UTCmodelSet4 (OSCTXT* pctxt, rrlp_UTCmodelSet4* pvalue);

EXTERN int asn1PD_rrlp_UTCmodelSet4 (OSCTXT* pctxt, rrlp_UTCmodelSet4* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSAddUTCModel                                          */
/*                                                            */
/**************************************************************/
/*
 If a bit is clear in the eventOccured field it indicates that no known errors have occured
 between the current time and the ganssBeginTime nor is a maneuver planned for the next sixty
 minutes.
 If a bit is set in the futureEventNoted field it indicates that a maneuver is planned during the
 time period between current time plus sixty minutes and the ganssEndTime
 GANSS Additional Universal Time Coordinate Model

GANSSAddUTCModel ::= CHOICE {
   utcModel2 [0] UTCmodelSet2,
   utcModel3 [1] UTCmodelSet3,
   utcModel4 [2] UTCmodelSet4,
   ...
}
*/
/* Choice tag constants */

#define T_rrlp_GANSSAddUTCModel_utcModel2 1
#define T_rrlp_GANSSAddUTCModel_utcModel3 2
#define T_rrlp_GANSSAddUTCModel_utcModel4 3
#define T_rrlp_GANSSAddUTCModel_extElem1 4

typedef struct EXTERN rrlp_GANSSAddUTCModel {
   OSUINT32 t;
   union {
      /* t = 1 */
      rrlp_UTCmodelSet2 *utcModel2;
      /* t = 2 */
      rrlp_UTCmodelSet3 *utcModel3;
      /* t = 3 */
      rrlp_UTCmodelSet4 *utcModel4;
      /* t = 4 */
      ASN1OpenType *extElem1;
   } u;
} rrlp_GANSSAddUTCModel;

EXTERN int asn1PE_rrlp_GANSSAddUTCModel (OSCTXT* pctxt, rrlp_GANSSAddUTCModel* pvalue);

EXTERN int asn1PD_rrlp_GANSSAddUTCModel (OSCTXT* pctxt, rrlp_GANSSAddUTCModel* pvalue);

EXTERN void asn1Free_rrlp_GANSSAddUTCModel (OSCTXT *pctxt, 
   rrlp_GANSSAddUTCModel* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSS_ID1_element                                         */
/*                                                            */
/**************************************************************/
/*
GANSS-ID1-element ::= SEQUENCE {
   svID [0] SVID,
   signalsAvailable [1] GANSSSignals,
   ...
}
*/
typedef struct EXTERN rrlp_GANSS_ID1_element {
   rrlp_SVID svID;
   rrlp_GANSSSignals signalsAvailable;
   OSRTDList extElem1;
} rrlp_GANSS_ID1_element;

EXTERN int asn1PE_rrlp_GANSS_ID1_element (OSCTXT* pctxt, rrlp_GANSS_ID1_element* pvalue);

EXTERN int asn1PD_rrlp_GANSS_ID1_element (OSCTXT* pctxt, rrlp_GANSS_ID1_element* pvalue);

EXTERN void asn1Free_rrlp_GANSS_ID1_element (OSCTXT *pctxt, 
   rrlp_GANSS_ID1_element* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSS_ID1                                                 */
/*                                                            */
/**************************************************************/
/*
GANSS-ID1 ::= SEQUENCE (SIZE (1..64)) OF GANSS-ID1-element
*/
typedef struct EXTERN rrlp_GANSS_ID1 {
   OSUINT32 n;
   rrlp_GANSS_ID1_element *elem;
} rrlp_GANSS_ID1;

EXTERN int asn1PE_rrlp_GANSS_ID1 (OSCTXT* pctxt, rrlp_GANSS_ID1* pvalue);

EXTERN int asn1PD_rrlp_GANSS_ID1 (OSCTXT* pctxt, rrlp_GANSS_ID1* pvalue);

EXTERN void asn1Free_rrlp_GANSS_ID1 (OSCTXT *pctxt, rrlp_GANSS_ID1* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSS_ID3_element                                         */
/*                                                            */
/**************************************************************/
/*
GANSS-ID3-element ::= SEQUENCE {
   svID [0] SVID,
   signalsAvailable [1] GANSSSignals,
   channelNumber [2] INTEGER (-7..13),
   ...
}
*/
typedef struct EXTERN rrlp_GANSS_ID3_element {
   rrlp_SVID svID;
   rrlp_GANSSSignals signalsAvailable;
   OSINT8 channelNumber;
   OSRTDList extElem1;
} rrlp_GANSS_ID3_element;

EXTERN int asn1PE_rrlp_GANSS_ID3_element (OSCTXT* pctxt, rrlp_GANSS_ID3_element* pvalue);

EXTERN int asn1PD_rrlp_GANSS_ID3_element (OSCTXT* pctxt, rrlp_GANSS_ID3_element* pvalue);

EXTERN void asn1Free_rrlp_GANSS_ID3_element (OSCTXT *pctxt, 
   rrlp_GANSS_ID3_element* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSS_ID3                                                 */
/*                                                            */
/**************************************************************/
/*
GANSS-ID3 ::= SEQUENCE (SIZE (1..64)) OF GANSS-ID3-element
*/
typedef struct EXTERN rrlp_GANSS_ID3 {
   OSUINT32 n;
   rrlp_GANSS_ID3_element *elem;
} rrlp_GANSS_ID3;

EXTERN int asn1PE_rrlp_GANSS_ID3 (OSCTXT* pctxt, rrlp_GANSS_ID3* pvalue);

EXTERN int asn1PD_rrlp_GANSS_ID3 (OSCTXT* pctxt, rrlp_GANSS_ID3* pvalue);

EXTERN void asn1Free_rrlp_GANSS_ID3 (OSCTXT *pctxt, rrlp_GANSS_ID3* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSAuxiliaryInformation                                 */
/*                                                            */
/**************************************************************/
/*
 GANSS Auxiliary Information

GANSSAuxiliaryInformation ::= CHOICE {
   ganssID1 [0] GANSS-ID1,
   ganssID3 [1] GANSS-ID3,
   ...
}
*/
/* Choice tag constants */

#define T_rrlp_GANSSAuxiliaryInformation_ganssID1 1
#define T_rrlp_GANSSAuxiliaryInformation_ganssID3 2
#define T_rrlp_GANSSAuxiliaryInformation_extElem1 3

typedef struct EXTERN rrlp_GANSSAuxiliaryInformation {
   OSUINT32 t;
   union {
      /* t = 1 */
      rrlp_GANSS_ID1 *ganssID1;
      /* t = 2 */
      rrlp_GANSS_ID3 *ganssID3;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} rrlp_GANSSAuxiliaryInformation;

EXTERN int asn1PE_rrlp_GANSSAuxiliaryInformation (OSCTXT* pctxt, rrlp_GANSSAuxiliaryInformation* pvalue);

EXTERN int asn1PD_rrlp_GANSSAuxiliaryInformation (OSCTXT* pctxt, rrlp_GANSSAuxiliaryInformation* pvalue);

EXTERN void asn1Free_rrlp_GANSSAuxiliaryInformation (OSCTXT *pctxt, 
   rrlp_GANSSAuxiliaryInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSGenericAssistDataElement                             */
/*                                                            */
/**************************************************************/
/*
 GANSS Generic Assistance Data Elements

GANSSGenericAssistDataElement ::= SEQUENCE {
   ganssID [0] INTEGER (0..7) OPTIONAL,
   ganssTimeModel [1] SeqOfGANSSTimeModel OPTIONAL,
   ganssDiffCorrections [2] GANSSDiffCorrections OPTIONAL,
   ganssNavigationModel [3] GANSSNavModel OPTIONAL,
   ganssRealTimeIntegrity [4] GANSSRealTimeIntegrity OPTIONAL,
   ganssDataBitAssist [5] GANSSDataBitAssist OPTIONAL,
   ganssRefMeasurementAssist [6] GANSSRefMeasurementAssist OPTIONAL,
   ganssAlmanacModel [7] GANSSAlmanacModel OPTIONAL,
   ganssUTCModel [8] GANSSUTCModel OPTIONAL,
   ganssEphemerisExtension [9] GANSSEphemerisExtension OPTIONAL,
   ganssEphemerisExtCheck [10] GANSSEphemerisExtensionCheck OPTIONAL,
   ...,
   sbasID [11] INTEGER (0..7) OPTIONAL,
   ganssAddUTCModel [12] GANSSAddUTCModel OPTIONAL,
   ganssAuxiliaryInfo [13] GANSSAuxiliaryInformation OPTIONAL
}
*/
typedef struct EXTERN rrlp_GANSSGenericAssistDataElement {
   struct {
      unsigned ganssIDPresent : 1;
      unsigned ganssTimeModelPresent : 1;
      unsigned ganssDiffCorrectionsPresent : 1;
      unsigned ganssNavigationModelPresent : 1;
      unsigned ganssRealTimeIntegrityPresent : 1;
      unsigned ganssDataBitAssistPresent : 1;
      unsigned ganssRefMeasurementAssistPresent : 1;
      unsigned ganssAlmanacModelPresent : 1;
      unsigned ganssUTCModelPresent : 1;
      unsigned ganssEphemerisExtensionPresent : 1;
      unsigned ganssEphemerisExtCheckPresent : 1;
      unsigned sbasIDPresent : 1;
      unsigned ganssAddUTCModelPresent : 1;
      unsigned ganssAuxiliaryInfoPresent : 1;
   } m;
   OSUINT8 ganssID;
   rrlp_SeqOfGANSSTimeModel ganssTimeModel;
   rrlp_GANSSDiffCorrections ganssDiffCorrections;
   rrlp_GANSSNavModel ganssNavigationModel;
   rrlp_GANSSRealTimeIntegrity ganssRealTimeIntegrity;
   rrlp_GANSSDataBitAssist ganssDataBitAssist;
   rrlp_GANSSRefMeasurementAssist ganssRefMeasurementAssist;
   rrlp_GANSSAlmanacModel ganssAlmanacModel;
   rrlp_GANSSUTCModel ganssUTCModel;
   rrlp_GANSSEphemerisExtension ganssEphemerisExtension;
   rrlp_GANSSEphemerisExtensionCheck ganssEphemerisExtCheck;
   OSUINT8 sbasID;
   rrlp_GANSSAddUTCModel ganssAddUTCModel;
   rrlp_GANSSAuxiliaryInformation ganssAuxiliaryInfo;
   OSRTDList extElem1;
} rrlp_GANSSGenericAssistDataElement;

EXTERN int asn1PE_rrlp_GANSSGenericAssistDataElement (OSCTXT* pctxt, rrlp_GANSSGenericAssistDataElement* pvalue);

EXTERN int asn1PD_rrlp_GANSSGenericAssistDataElement (OSCTXT* pctxt, rrlp_GANSSGenericAssistDataElement* pvalue);

EXTERN void asn1Free_rrlp_GANSSGenericAssistDataElement (OSCTXT *pctxt, 
   rrlp_GANSSGenericAssistDataElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGANSSGenericAssistDataElement                        */
/*                                                            */
/**************************************************************/
/*
 List of GANSS Generic Assistance Data Elements, up to 8 GANSS

SeqOfGANSSGenericAssistDataElement ::= SEQUENCE (SIZE (1..8)) OF GANSSGenericAssistDataElement
*/
typedef struct EXTERN rrlp_SeqOfGANSSGenericAssistDataElement {
   OSUINT32 n;
   rrlp_GANSSGenericAssistDataElement *elem;
} rrlp_SeqOfGANSSGenericAssistDataElement;

EXTERN int asn1PE_rrlp_SeqOfGANSSGenericAssistDataElement (OSCTXT* pctxt, rrlp_SeqOfGANSSGenericAssistDataElement* pvalue);

EXTERN int asn1PD_rrlp_SeqOfGANSSGenericAssistDataElement (OSCTXT* pctxt, rrlp_SeqOfGANSSGenericAssistDataElement* pvalue);

EXTERN void asn1Free_rrlp_SeqOfGANSSGenericAssistDataElement (OSCTXT *pctxt, 
   rrlp_SeqOfGANSSGenericAssistDataElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSS_ControlHeader                                       */
/*                                                            */
/**************************************************************/
/*
GANSS-ControlHeader ::= SEQUENCE {
   ganssCommonAssistData [0] GANSSCommonAssistData OPTIONAL,
   ganssGenericAssistDataList [1] SeqOfGANSSGenericAssistDataElement OPTIONAL
}
*/
typedef struct EXTERN rrlp_GANSS_ControlHeader {
   struct {
      unsigned ganssCommonAssistDataPresent : 1;
      unsigned ganssGenericAssistDataListPresent : 1;
   } m;
   rrlp_GANSSCommonAssistData ganssCommonAssistData;
   rrlp_SeqOfGANSSGenericAssistDataElement ganssGenericAssistDataList;
} rrlp_GANSS_ControlHeader;

EXTERN int asn1PE_rrlp_GANSS_ControlHeader (OSCTXT* pctxt, rrlp_GANSS_ControlHeader* pvalue);

EXTERN int asn1PD_rrlp_GANSS_ControlHeader (OSCTXT* pctxt, rrlp_GANSS_ControlHeader* pvalue);

EXTERN void asn1Free_rrlp_GANSS_ControlHeader (OSCTXT *pctxt, 
   rrlp_GANSS_ControlHeader* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSS_AssistData                                          */
/*                                                            */
/**************************************************************/
/*
GANSS-AssistData ::= SEQUENCE {
   ganss-controlHeader [0] GANSS-ControlHeader
}
*/
typedef struct EXTERN rrlp_GANSS_AssistData {
   rrlp_GANSS_ControlHeader ganss_controlHeader;
} rrlp_GANSS_AssistData;

EXTERN int asn1PE_rrlp_GANSS_AssistData (OSCTXT* pctxt, rrlp_GANSS_AssistData* pvalue);

EXTERN int asn1PD_rrlp_GANSS_AssistData (OSCTXT* pctxt, rrlp_GANSS_AssistData* pvalue);

EXTERN void asn1Free_rrlp_GANSS_AssistData (OSCTXT *pctxt, 
   rrlp_GANSS_AssistData* pvalue);

/**************************************************************/
/*                                                            */
/*  RequiredResponseTime                                      */
/*                                                            */
/**************************************************************/
/*
Required Measurement Request Response Time, range is 1 to 128 seconds. 

RequiredResponseTime ::= INTEGER (1..128)
*/
typedef OSUINT8 rrlp_RequiredResponseTime;

EXTERN int asn1PE_rrlp_RequiredResponseTime (OSCTXT* pctxt, rrlp_RequiredResponseTime value);

EXTERN int asn1PD_rrlp_RequiredResponseTime (OSCTXT* pctxt, rrlp_RequiredResponseTime* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSEphemerisExtensionTime                                 */
/*                                                            */
/**************************************************************/
/*
GPSEphemerisExtensionTime ::= SEQUENCE {
   gpsWeek [0] GPSWeek,
   gpsTOW [1] INTEGER (0..604799),
   ...
}
*/
typedef struct EXTERN rrlp_GPSEphemerisExtensionTime {
   rrlp_GPSWeek gpsWeek;
   OSUINT32 gpsTOW;
   OSRTDList extElem1;
} rrlp_GPSEphemerisExtensionTime;

EXTERN int asn1PE_rrlp_GPSEphemerisExtensionTime (OSCTXT* pctxt, rrlp_GPSEphemerisExtensionTime* pvalue);

EXTERN int asn1PD_rrlp_GPSEphemerisExtensionTime (OSCTXT* pctxt, rrlp_GPSEphemerisExtensionTime* pvalue);

EXTERN void asn1Free_rrlp_GPSEphemerisExtensionTime (OSCTXT *pctxt, 
   rrlp_GPSEphemerisExtensionTime* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSEphemerisExtensionHeader                               */
/*                                                            */
/**************************************************************/
/*
 The gpsEphemerisHeader and the gpsReferenceSet are mandatory only once in the delivery of the
 GPS Ephemeris Extension.  The gpsReferenceSet shall include all healthy satellite vehicles at the
 time of message construction
 The SMLC is required to deliver the gpsReferenceSet for all healthy satellite vehicles
 at the time of message construction.

GPSEphemerisExtensionHeader ::= SEQUENCE {
   timeofEstimation [0] GPSEphemerisExtensionTime,
   validityPeriod [1] INTEGER (1..8),
   ephemerisExtensionDuration [2] INTEGER (1..512),
   ...
}
*/
typedef struct EXTERN rrlp_GPSEphemerisExtensionHeader {
   rrlp_GPSEphemerisExtensionTime timeofEstimation;
   OSUINT8 validityPeriod;
   OSUINT16 ephemerisExtensionDuration;
   OSRTDList extElem1;
} rrlp_GPSEphemerisExtensionHeader;

EXTERN int asn1PE_rrlp_GPSEphemerisExtensionHeader (OSCTXT* pctxt, rrlp_GPSEphemerisExtensionHeader* pvalue);

EXTERN int asn1PD_rrlp_GPSEphemerisExtensionHeader (OSCTXT* pctxt, rrlp_GPSEphemerisExtensionHeader* pvalue);

EXTERN void asn1Free_rrlp_GPSEphemerisExtensionHeader (OSCTXT *pctxt, 
   rrlp_GPSEphemerisExtensionHeader* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSClockModel                                             */
/*                                                            */
/**************************************************************/
/*
GPSClockModel ::= SEQUENCE {
   af2 [0] INTEGER (-128..127),
   af1 [1] INTEGER (-32768..32767),
   af0 [2] INTEGER (-2097152..2097151),
   tgd [3] INTEGER (-128..127)
}
*/
typedef struct EXTERN rrlp_GPSClockModel {
   OSINT8 af2;
   OSINT16 af1;
   OSINT32 af0;
   OSINT8 tgd;
} rrlp_GPSClockModel;

EXTERN int asn1PE_rrlp_GPSClockModel (OSCTXT* pctxt, rrlp_GPSClockModel* pvalue);

EXTERN int asn1PD_rrlp_GPSClockModel (OSCTXT* pctxt, rrlp_GPSClockModel* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSReferenceOrbit                                         */
/*                                                            */
/**************************************************************/
/*
The number of reference orbits can be read from number of elements in this sequence

GPSReferenceOrbit ::= SEQUENCE {
   svID [0] SVID,
   gpsOrbitModel [1] ReferenceNavModel,
   gpsClockModel [2] GPSClockModel,
   ...
}
*/
typedef struct EXTERN rrlp_GPSReferenceOrbit {
   rrlp_SVID svID;
   rrlp_ReferenceNavModel gpsOrbitModel;
   rrlp_GPSClockModel gpsClockModel;
   OSRTDList extElem1;
} rrlp_GPSReferenceOrbit;

EXTERN int asn1PE_rrlp_GPSReferenceOrbit (OSCTXT* pctxt, rrlp_GPSReferenceOrbit* pvalue);

EXTERN int asn1PD_rrlp_GPSReferenceOrbit (OSCTXT* pctxt, rrlp_GPSReferenceOrbit* pvalue);

EXTERN void asn1Free_rrlp_GPSReferenceOrbit (OSCTXT *pctxt, 
   rrlp_GPSReferenceOrbit* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGPSRefOrbit                                          */
/*                                                            */
/**************************************************************/
/*
SeqOfGPSRefOrbit ::= SEQUENCE (SIZE (1..32)) OF GPSReferenceOrbit
*/
typedef struct EXTERN rrlp_SeqOfGPSRefOrbit {
   OSUINT32 n;
   rrlp_GPSReferenceOrbit *elem;
} rrlp_SeqOfGPSRefOrbit;

EXTERN int asn1PE_rrlp_SeqOfGPSRefOrbit (OSCTXT* pctxt, rrlp_SeqOfGPSRefOrbit* pvalue);

EXTERN int asn1PD_rrlp_SeqOfGPSRefOrbit (OSCTXT* pctxt, rrlp_SeqOfGPSRefOrbit* pvalue);

EXTERN void asn1Free_rrlp_SeqOfGPSRefOrbit (OSCTXT *pctxt, 
   rrlp_SeqOfGPSRefOrbit* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSEphemerisDeltaBitSizes                                 */
/*                                                            */
/**************************************************************/
/*
 Each octet string element in GPSDeltaElementList corresponds to one PRN within one epoch
 Table A.29.m of the annex shows the organization of the delta ephemeris octet string.
 Decoding of each of the octet strings is accomplished by consulting the ephemerisDeltaSizes
 table to learn the length and order of each of the parameters in the ephemerisDelta payload
 Post decode scaling is accomplished by consulting the ephemerisDeltaScales table to learn the.
 scale factors to apply to the terms in the delta ephemeris
 Ephemeris Delta Bit Sizes. 

GPSEphemerisDeltaBitSizes ::= SEQUENCE {
   bitsize-delta-omega [0] INTEGER (1..32),
   bitsize-delta-deltaN [1] INTEGER (1..16),
   bitsize-delta-m0 [2] INTEGER (1..32),
   bitsize-delta-omegadot [3] INTEGER (1..24),
   bitsize-delta-e [4] INTEGER (1..32),
   bitsize-delta-idot [5] INTEGER (1..14),
   bitsize-delta-sqrtA [6] INTEGER (1..32),
   bitsize-delta-i0 [7] INTEGER (1..32),
   bitsize-delta-omega0 [8] INTEGER (1..32),
   bitsize-delta-crs [9] INTEGER (1..16),
   bitsize-delta-cis [10] INTEGER (1..16),
   bitsize-delta-cus [11] INTEGER (1..16),
   bitsize-delta-crc [12] INTEGER (1..16),
   bitsize-delta-cic [13] INTEGER (1..16),
   bitsize-delta-cuc [14] INTEGER (1..16),
   bitsize-delta-tgd [15] INTEGER (1..10),
   ...
}
*/
typedef struct EXTERN rrlp_GPSEphemerisDeltaBitSizes {
   OSUINT8 bitsize_delta_omega;
   OSUINT8 bitsize_delta_deltaN;
   OSUINT8 bitsize_delta_m0;
   OSUINT8 bitsize_delta_omegadot;
   OSUINT8 bitsize_delta_e;
   OSUINT8 bitsize_delta_idot;
   OSUINT8 bitsize_delta_sqrtA;
   OSUINT8 bitsize_delta_i0;
   OSUINT8 bitsize_delta_omega0;
   OSUINT8 bitsize_delta_crs;
   OSUINT8 bitsize_delta_cis;
   OSUINT8 bitsize_delta_cus;
   OSUINT8 bitsize_delta_crc;
   OSUINT8 bitsize_delta_cic;
   OSUINT8 bitsize_delta_cuc;
   OSUINT8 bitsize_delta_tgd;
   OSRTDList extElem1;
} rrlp_GPSEphemerisDeltaBitSizes;

EXTERN int asn1PE_rrlp_GPSEphemerisDeltaBitSizes (OSCTXT* pctxt, rrlp_GPSEphemerisDeltaBitSizes* pvalue);

EXTERN int asn1PD_rrlp_GPSEphemerisDeltaBitSizes (OSCTXT* pctxt, rrlp_GPSEphemerisDeltaBitSizes* pvalue);

EXTERN void asn1Free_rrlp_GPSEphemerisDeltaBitSizes (OSCTXT *pctxt, 
   rrlp_GPSEphemerisDeltaBitSizes* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSEphemerisDeltaScales                                   */
/*                                                            */
/**************************************************************/
/*
GPSEphemerisDeltaScales ::= SEQUENCE {
   scale-delta-omega [0] INTEGER (-16..15),
   scale-delta-deltaN [1] INTEGER (-16..15),
   scale-delta-m0 [2] INTEGER (-16..15),
   scale-delta-omegadot [3] INTEGER (-16..15),
   scale-delta-e [4] INTEGER (-16..15),
   scale-delta-idot [5] INTEGER (-16..15),
   scale-delta-sqrtA [6] INTEGER (-16..15),
   scale-delta-i0 [7] INTEGER (-16..15),
   scale-delta-omega0 [8] INTEGER (-16..15),
   scale-delta-crs [9] INTEGER (-16..15),
   scale-delta-cis [10] INTEGER (-16..15),
   scale-delta-cus [11] INTEGER (-16..15),
   scale-delta-crc [12] INTEGER (-16..15),
   scale-delta-cic [13] INTEGER (-16..15),
   scale-delta-cuc [14] INTEGER (-16..15),
   scale-delta-tgd [15] INTEGER (-16..15),
   ...
}
*/
typedef struct EXTERN rrlp_GPSEphemerisDeltaScales {
   OSINT8 scale_delta_omega;
   OSINT8 scale_delta_deltaN;
   OSINT8 scale_delta_m0;
   OSINT8 scale_delta_omegadot;
   OSINT8 scale_delta_e;
   OSINT8 scale_delta_idot;
   OSINT8 scale_delta_sqrtA;
   OSINT8 scale_delta_i0;
   OSINT8 scale_delta_omega0;
   OSINT8 scale_delta_crs;
   OSINT8 scale_delta_cis;
   OSINT8 scale_delta_cus;
   OSINT8 scale_delta_crc;
   OSINT8 scale_delta_cic;
   OSINT8 scale_delta_cuc;
   OSINT8 scale_delta_tgd;
   OSRTDList extElem1;
} rrlp_GPSEphemerisDeltaScales;

EXTERN int asn1PE_rrlp_GPSEphemerisDeltaScales (OSCTXT* pctxt, rrlp_GPSEphemerisDeltaScales* pvalue);

EXTERN int asn1PD_rrlp_GPSEphemerisDeltaScales (OSCTXT* pctxt, rrlp_GPSEphemerisDeltaScales* pvalue);

EXTERN void asn1Free_rrlp_GPSEphemerisDeltaScales (OSCTXT *pctxt, 
   rrlp_GPSEphemerisDeltaScales* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSDeltaEpochHeader                                       */
/*                                                            */
/**************************************************************/
/*
 Each GPSDeltaEpoch element contains a header and the delta values for a particular time window 
 for all PRN's.

GPSDeltaEpochHeader ::= SEQUENCE {
   validityPeriod [0] INTEGER (1..8) OPTIONAL,
   ephemerisDeltaSizes [1] GPSEphemerisDeltaBitSizes OPTIONAL,
   ephemerisDeltaScales [2] GPSEphemerisDeltaScales OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_GPSDeltaEpochHeader {
   struct {
      unsigned validityPeriodPresent : 1;
      unsigned ephemerisDeltaSizesPresent : 1;
      unsigned ephemerisDeltaScalesPresent : 1;
   } m;
   OSUINT8 validityPeriod;
   rrlp_GPSEphemerisDeltaBitSizes ephemerisDeltaSizes;
   rrlp_GPSEphemerisDeltaScales ephemerisDeltaScales;
   OSRTDList extElem1;
} rrlp_GPSDeltaEpochHeader;

EXTERN int asn1PE_rrlp_GPSDeltaEpochHeader (OSCTXT* pctxt, rrlp_GPSDeltaEpochHeader* pvalue);

EXTERN int asn1PD_rrlp_GPSDeltaEpochHeader (OSCTXT* pctxt, rrlp_GPSDeltaEpochHeader* pvalue);

EXTERN void asn1Free_rrlp_GPSDeltaEpochHeader (OSCTXT *pctxt, 
   rrlp_GPSDeltaEpochHeader* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSDeltaElementList_element                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GPSDeltaElementList'
*/
typedef struct EXTERN rrlp_GPSDeltaElementList_element {
   OSUINT32 numocts;
   OSOCTET data[47];
} rrlp_GPSDeltaElementList_element;

EXTERN int asn1PE_rrlp_GPSDeltaElementList_element (OSCTXT* pctxt, rrlp_GPSDeltaElementList_element* pvalue);

EXTERN int asn1PD_rrlp_GPSDeltaElementList_element (OSCTXT* pctxt, rrlp_GPSDeltaElementList_element* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSDeltaElementList                                       */
/*                                                            */
/**************************************************************/
/*
 In each of the GPSDeltaEpochs, if the optional element validityPeriod is not included,
 the value in GPSEphemerisExtensionHeader shall be used.  if the optional elements 
 ephemerisDeltaSizes or ephemerisDeltaScales are not included, then the default ephemeris delta
 sizes and scales shall be used.  The default sizes and scales are found in the annex in section
 A.29.m

GPSDeltaElementList ::= SEQUENCE (SIZE (1..32)) OF OCTET STRING (SIZE (1..47))
*/
typedef struct EXTERN rrlp_GPSDeltaElementList {
   OSUINT32 n;
   rrlp_GPSDeltaElementList_element *elem;
} rrlp_GPSDeltaElementList;

EXTERN int asn1PE_rrlp_GPSDeltaElementList (OSCTXT* pctxt, rrlp_GPSDeltaElementList* pvalue);

EXTERN int asn1PD_rrlp_GPSDeltaElementList (OSCTXT* pctxt, rrlp_GPSDeltaElementList* pvalue);

EXTERN void asn1Free_rrlp_GPSDeltaElementList (OSCTXT *pctxt, 
   rrlp_GPSDeltaElementList* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSEphemerisDeltaEpoch                                    */
/*                                                            */
/**************************************************************/
/*
GPSEphemerisDeltaEpoch ::= SEQUENCE {
   gpsDeltaEpochHeader [0] GPSDeltaEpochHeader OPTIONAL,
   gpsDeltaElementList [1] GPSDeltaElementList,
   ...
}
*/
typedef struct EXTERN rrlp_GPSEphemerisDeltaEpoch {
   struct {
      unsigned gpsDeltaEpochHeaderPresent : 1;
   } m;
   rrlp_GPSDeltaEpochHeader gpsDeltaEpochHeader;
   rrlp_GPSDeltaElementList gpsDeltaElementList;
   OSRTDList extElem1;
} rrlp_GPSEphemerisDeltaEpoch;

EXTERN int asn1PE_rrlp_GPSEphemerisDeltaEpoch (OSCTXT* pctxt, rrlp_GPSEphemerisDeltaEpoch* pvalue);

EXTERN int asn1PD_rrlp_GPSEphemerisDeltaEpoch (OSCTXT* pctxt, rrlp_GPSEphemerisDeltaEpoch* pvalue);

EXTERN void asn1Free_rrlp_GPSEphemerisDeltaEpoch (OSCTXT *pctxt, 
   rrlp_GPSEphemerisDeltaEpoch* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSEphemerisDeltaMatrix                                   */
/*                                                            */
/**************************************************************/
/*
GPSEphemerisDeltaMatrix ::= SEQUENCE (SIZE (1..128)) OF GPSEphemerisDeltaEpoch
*/
typedef struct EXTERN rrlp_GPSEphemerisDeltaMatrix {
   OSUINT32 n;
   rrlp_GPSEphemerisDeltaEpoch *elem;
} rrlp_GPSEphemerisDeltaMatrix;

EXTERN int asn1PE_rrlp_GPSEphemerisDeltaMatrix (OSCTXT* pctxt, rrlp_GPSEphemerisDeltaMatrix* pvalue);

EXTERN int asn1PD_rrlp_GPSEphemerisDeltaMatrix (OSCTXT* pctxt, rrlp_GPSEphemerisDeltaMatrix* pvalue);

EXTERN void asn1Free_rrlp_GPSEphemerisDeltaMatrix (OSCTXT *pctxt, 
   rrlp_GPSEphemerisDeltaMatrix* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSEphemerisExtension                                     */
/*                                                            */
/**************************************************************/
/*
GPS Ephemeris Extension

GPSEphemerisExtension ::= SEQUENCE {
   gpsEphemerisHeader [0] GPSEphemerisExtensionHeader OPTIONAL,
   gpsReferenceSet [1] SeqOfGPSRefOrbit OPTIONAL,
   gpsephemerisDeltaMatrix [2] GPSEphemerisDeltaMatrix OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_GPSEphemerisExtension {
   struct {
      unsigned gpsEphemerisHeaderPresent : 1;
      unsigned gpsReferenceSetPresent : 1;
      unsigned gpsephemerisDeltaMatrixPresent : 1;
   } m;
   rrlp_GPSEphemerisExtensionHeader gpsEphemerisHeader;
   rrlp_SeqOfGPSRefOrbit gpsReferenceSet;
   rrlp_GPSEphemerisDeltaMatrix gpsephemerisDeltaMatrix;
   OSRTDList extElem1;
} rrlp_GPSEphemerisExtension;

EXTERN int asn1PE_rrlp_GPSEphemerisExtension (OSCTXT* pctxt, rrlp_GPSEphemerisExtension* pvalue);

EXTERN int asn1PD_rrlp_GPSEphemerisExtension (OSCTXT* pctxt, rrlp_GPSEphemerisExtension* pvalue);

EXTERN void asn1Free_rrlp_GPSEphemerisExtension (OSCTXT *pctxt, 
   rrlp_GPSEphemerisExtension* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSSatEventsInfo                                          */
/*                                                            */
/**************************************************************/
/*
GPSSatEventsInfo ::= SEQUENCE {
   eventOccured [0] BIT STRING  (SIZE (32)),
   futureEventNoted [1] BIT STRING  (SIZE (32)),
   ...
}
*/
typedef struct EXTERN rrlp_GPSSatEventsInfo {
   ASN1BitStr32 eventOccured;
   ASN1BitStr32 futureEventNoted;
   OSRTDList extElem1;
} rrlp_GPSSatEventsInfo;

EXTERN int asn1PE_rrlp_GPSSatEventsInfo (OSCTXT* pctxt, rrlp_GPSSatEventsInfo* pvalue);

EXTERN int asn1PD_rrlp_GPSSatEventsInfo (OSCTXT* pctxt, rrlp_GPSSatEventsInfo* pvalue);

EXTERN void asn1Free_rrlp_GPSSatEventsInfo (OSCTXT *pctxt, 
   rrlp_GPSSatEventsInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSEphemerisExtensionCheck                                */
/*                                                            */
/**************************************************************/
/*
GPSEphemerisExtensionCheck ::= SEQUENCE {
   gpsBeginTime [0] GPSEphemerisExtensionTime,
   gpsEndTime [1] GPSEphemerisExtensionTime,
   gpsSatEventsInfo [2] GPSSatEventsInfo,
   ...
}
*/
typedef struct EXTERN rrlp_GPSEphemerisExtensionCheck {
   rrlp_GPSEphemerisExtensionTime gpsBeginTime;
   rrlp_GPSEphemerisExtensionTime gpsEndTime;
   rrlp_GPSSatEventsInfo gpsSatEventsInfo;
   OSRTDList extElem1;
} rrlp_GPSEphemerisExtensionCheck;

EXTERN int asn1PE_rrlp_GPSEphemerisExtensionCheck (OSCTXT* pctxt, rrlp_GPSEphemerisExtensionCheck* pvalue);

EXTERN int asn1PD_rrlp_GPSEphemerisExtensionCheck (OSCTXT* pctxt, rrlp_GPSEphemerisExtensionCheck* pvalue);

EXTERN void asn1Free_rrlp_GPSEphemerisExtensionCheck (OSCTXT *pctxt, 
   rrlp_GPSEphemerisExtensionCheck* pvalue);

/**************************************************************/
/*                                                            */
/*  Add_GPS_ControlHeader                                     */
/*                                                            */
/**************************************************************/
/*
Add-GPS-ControlHeader ::= SEQUENCE {
   gpsEphemerisExtension [0] GPSEphemerisExtension OPTIONAL,
   gpsEphemerisExtensionCheck [1] GPSEphemerisExtensionCheck OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_Add_GPS_ControlHeader {
   struct {
      unsigned gpsEphemerisExtensionPresent : 1;
      unsigned gpsEphemerisExtensionCheckPresent : 1;
   } m;
   rrlp_GPSEphemerisExtension gpsEphemerisExtension;
   rrlp_GPSEphemerisExtensionCheck gpsEphemerisExtensionCheck;
   OSRTDList extElem1;
} rrlp_Add_GPS_ControlHeader;

EXTERN int asn1PE_rrlp_Add_GPS_ControlHeader (OSCTXT* pctxt, rrlp_Add_GPS_ControlHeader* pvalue);

EXTERN int asn1PD_rrlp_Add_GPS_ControlHeader (OSCTXT* pctxt, rrlp_Add_GPS_ControlHeader* pvalue);

EXTERN void asn1Free_rrlp_Add_GPS_ControlHeader (OSCTXT *pctxt, 
   rrlp_Add_GPS_ControlHeader* pvalue);

/**************************************************************/
/*                                                            */
/*  Add_GPS_AssistData                                        */
/*                                                            */
/**************************************************************/
/*
 Control header for additional GPS assistance data

Add-GPS-AssistData ::= SEQUENCE {
   add-GPS-controlHeader [0] Add-GPS-ControlHeader
}
*/
typedef struct EXTERN rrlp_Add_GPS_AssistData {
   rrlp_Add_GPS_ControlHeader add_GPS_controlHeader;
} rrlp_Add_GPS_AssistData;

EXTERN int asn1PE_rrlp_Add_GPS_AssistData (OSCTXT* pctxt, rrlp_Add_GPS_AssistData* pvalue);

EXTERN int asn1PD_rrlp_Add_GPS_AssistData (OSCTXT* pctxt, rrlp_Add_GPS_AssistData* pvalue);

EXTERN void asn1Free_rrlp_Add_GPS_AssistData (OSCTXT *pctxt, 
   rrlp_Add_GPS_AssistData* pvalue);

/**************************************************************/
/*                                                            */
/*  Rel7_MsrPosition_Req_Extension                            */
/*                                                            */
/**************************************************************/
/*
 Release 7 Extensions here

Rel7-MsrPosition-Req-Extension ::= SEQUENCE {
   velocityRequested [0] NULL OPTIONAL,
   ganssPositionMethod [1] GANSSPositioningMethod OPTIONAL,
   ganss-AssistData [2] GANSS-AssistData OPTIONAL,
   ganssCarrierPhaseMeasurementRequest [3] NULL OPTIONAL,
   ganssTODGSMTimeAssociationMeasurementRequest [4] NULL OPTIONAL,
   requiredResponseTime [5] RequiredResponseTime OPTIONAL,
   add-GPS-AssistData [6] Add-GPS-AssistData OPTIONAL,
   ganssMultiFreqMeasurementRequest [7] NULL OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_Rel7_MsrPosition_Req_Extension {
   struct {
      unsigned velocityRequestedPresent : 1;
      unsigned ganssPositionMethodPresent : 1;
      unsigned ganss_AssistDataPresent : 1;
      unsigned ganssCarrierPhaseMeasurementRequestPresent : 1;
      unsigned ganssTODGSMTimeAssociationMeasurementRequestPresent : 1;
      unsigned requiredResponseTimePresent : 1;
      unsigned add_GPS_AssistDataPresent : 1;
      unsigned ganssMultiFreqMeasurementRequestPresent : 1;
   } m;
   rrlp_GANSSPositioningMethod ganssPositionMethod;
   rrlp_GANSS_AssistData ganss_AssistData;
   rrlp_RequiredResponseTime requiredResponseTime;
   rrlp_Add_GPS_AssistData add_GPS_AssistData;
   OSRTDList extElem1;
} rrlp_Rel7_MsrPosition_Req_Extension;

EXTERN int asn1PE_rrlp_Rel7_MsrPosition_Req_Extension (OSCTXT* pctxt, rrlp_Rel7_MsrPosition_Req_Extension* pvalue);

EXTERN int asn1PD_rrlp_Rel7_MsrPosition_Req_Extension (OSCTXT* pctxt, rrlp_Rel7_MsrPosition_Req_Extension* pvalue);

EXTERN void asn1Free_rrlp_Rel7_MsrPosition_Req_Extension (OSCTXT *pctxt, 
   rrlp_Rel7_MsrPosition_Req_Extension* pvalue);

/**************************************************************/
/*                                                            */
/*  MsrPosition_Req                                           */
/*                                                            */
/**************************************************************/
/*
 Measurement Position request component

MsrPosition-Req ::= SEQUENCE {
   positionInstruct [0] PositionInstruct,
   referenceAssistData [1] ReferenceAssistData OPTIONAL,
   msrAssistData [2] MsrAssistData OPTIONAL,
   systemInfoAssistData [3] SystemInfoAssistData OPTIONAL,
   gps-AssistData [4] GPS-AssistData OPTIONAL,
   extensionContainer [5] ExtensionContainer OPTIONAL,
   ...,
   rel98-MsrPosition-Req-extension [6] Rel98-MsrPosition-Req-Extension OPTIONAL,
   rel5-MsrPosition-Req-extension [7] Rel5-MsrPosition-Req-Extension OPTIONAL,
   rel7-MsrPosition-Req-extension [8] Rel7-MsrPosition-Req-Extension OPTIONAL
}
*/
typedef struct EXTERN rrlp_MsrPosition_Req {
   struct {
      unsigned referenceAssistDataPresent : 1;
      unsigned msrAssistDataPresent : 1;
      unsigned systemInfoAssistDataPresent : 1;
      unsigned gps_AssistDataPresent : 1;
      unsigned extensionContainerPresent : 1;
      unsigned rel98_MsrPosition_Req_extensionPresent : 1;
      unsigned rel5_MsrPosition_Req_extensionPresent : 1;
      unsigned rel7_MsrPosition_Req_extensionPresent : 1;
   } m;
   rrlp_PositionInstruct positionInstruct;
   rrlp_ReferenceAssistData referenceAssistData;
   rrlp_MsrAssistData msrAssistData;
   rrlp_SystemInfoAssistData systemInfoAssistData;
   rrlp_GPS_AssistData gps_AssistData;
   rrlp_ExtensionContainer extensionContainer;
   rrlp_Rel98_MsrPosition_Req_Extension rel98_MsrPosition_Req_extension;
   rrlp_Rel5_MsrPosition_Req_Extension rel5_MsrPosition_Req_extension;
   rrlp_Rel7_MsrPosition_Req_Extension rel7_MsrPosition_Req_extension;
   OSRTDList extElem1;
} rrlp_MsrPosition_Req;

EXTERN int asn1PE_rrlp_MsrPosition_Req (OSCTXT* pctxt, rrlp_MsrPosition_Req* pvalue);

EXTERN int asn1PD_rrlp_MsrPosition_Req (OSCTXT* pctxt, rrlp_MsrPosition_Req* pvalue);

EXTERN void asn1Free_rrlp_MsrPosition_Req (OSCTXT *pctxt, 
   rrlp_MsrPosition_Req* pvalue);

/**************************************************************/
/*                                                            */
/*  ReferenceRelation                                         */
/*                                                            */
/**************************************************************/
/*
 Relation between refence BTSs and sets

ReferenceRelation ::= ENUMERATED { secondBTSThirdSet(0), secondBTSSecondSet(1), firstBTSFirstSet(2) }
*/
typedef enum {
   rrlp_ReferenceRelation_secondBTSThirdSet = 0,
   rrlp_ReferenceRelation_secondBTSSecondSet = 1,
   rrlp_ReferenceRelation_firstBTSFirstSet = 2
} rrlp_ReferenceRelation_Root;

typedef OSUINT32 rrlp_ReferenceRelation;

EXTERN int asn1PE_rrlp_ReferenceRelation (OSCTXT* pctxt, rrlp_ReferenceRelation value);

EXTERN int asn1PD_rrlp_ReferenceRelation (OSCTXT* pctxt, rrlp_ReferenceRelation* pvalue);

/**************************************************************/
/*                                                            */
/*  MultipleSets                                              */
/*                                                            */
/**************************************************************/
/*
 Measure position response IEs
 Reference Identity
 Multiple sets

MultipleSets ::= SEQUENCE {
   nbrOfSets [0] INTEGER (2..3),
   nbrOfReferenceBTSs [1] INTEGER (1..3),
   referenceRelation [2] ReferenceRelation OPTIONAL
}
*/
typedef struct EXTERN rrlp_MultipleSets {
   struct {
      unsigned referenceRelationPresent : 1;
   } m;
   OSUINT8 nbrOfSets;
   OSUINT8 nbrOfReferenceBTSs;
   rrlp_ReferenceRelation referenceRelation;
} rrlp_MultipleSets;

EXTERN int asn1PE_rrlp_MultipleSets (OSCTXT* pctxt, rrlp_MultipleSets* pvalue);

EXTERN int asn1PD_rrlp_MultipleSets (OSCTXT* pctxt, rrlp_MultipleSets* pvalue);

/**************************************************************/
/*                                                            */
/*  BSICAndCarrier                                            */
/*                                                            */
/**************************************************************/
/*
BSICAndCarrier ::= SEQUENCE {
   carrier [0] BCCHCarrier,
   bsic [1] BSIC
}
*/
typedef struct EXTERN rrlp_BSICAndCarrier {
   rrlp_BCCHCarrier carrier;
   rrlp_BSIC bsic;
} rrlp_BSICAndCarrier;

EXTERN int asn1PE_rrlp_BSICAndCarrier (OSCTXT* pctxt, rrlp_BSICAndCarrier* pvalue);

EXTERN int asn1PD_rrlp_BSICAndCarrier (OSCTXT* pctxt, rrlp_BSICAndCarrier* pvalue);

/**************************************************************/
/*                                                            */
/*  CellID                                                    */
/*                                                            */
/**************************************************************/
/*
CellID ::= INTEGER (0..65535)
*/
typedef OSUINT16 rrlp_CellID;

EXTERN int asn1PE_rrlp_CellID (OSCTXT* pctxt, rrlp_CellID value);

EXTERN int asn1PD_rrlp_CellID (OSCTXT* pctxt, rrlp_CellID* pvalue);

/**************************************************************/
/*                                                            */
/*  RequestIndex                                              */
/*                                                            */
/**************************************************************/
/*
RequestIndex ::= INTEGER (1..16)
*/
typedef OSUINT8 rrlp_RequestIndex;

EXTERN int asn1PE_rrlp_RequestIndex (OSCTXT* pctxt, rrlp_RequestIndex value);

EXTERN int asn1PD_rrlp_RequestIndex (OSCTXT* pctxt, rrlp_RequestIndex* pvalue);

/**************************************************************/
/*                                                            */
/*  SystemInfoIndex                                           */
/*                                                            */
/**************************************************************/
/*
SystemInfoIndex ::= INTEGER (1..32)
*/
typedef OSUINT8 rrlp_SystemInfoIndex;

EXTERN int asn1PE_rrlp_SystemInfoIndex (OSCTXT* pctxt, rrlp_SystemInfoIndex value);

EXTERN int asn1PD_rrlp_SystemInfoIndex (OSCTXT* pctxt, rrlp_SystemInfoIndex* pvalue);

/**************************************************************/
/*                                                            */
/*  LAC                                                       */
/*                                                            */
/**************************************************************/
/*
LAC ::= INTEGER (0..65535)
*/
typedef OSUINT16 rrlp_LAC;

EXTERN int asn1PE_rrlp_LAC (OSCTXT* pctxt, rrlp_LAC value);

EXTERN int asn1PD_rrlp_LAC (OSCTXT* pctxt, rrlp_LAC* pvalue);

/**************************************************************/
/*                                                            */
/*  CellIDAndLAC                                              */
/*                                                            */
/**************************************************************/
/*
CellIDAndLAC ::= SEQUENCE {
   referenceLAC [0] LAC,
   referenceCI [1] CellID
}
*/
typedef struct EXTERN rrlp_CellIDAndLAC {
   rrlp_LAC referenceLAC;
   rrlp_CellID referenceCI;
} rrlp_CellIDAndLAC;

EXTERN int asn1PE_rrlp_CellIDAndLAC (OSCTXT* pctxt, rrlp_CellIDAndLAC* pvalue);

EXTERN int asn1PD_rrlp_CellIDAndLAC (OSCTXT* pctxt, rrlp_CellIDAndLAC* pvalue);

/**************************************************************/
/*                                                            */
/*  ReferenceIdentityType                                     */
/*                                                            */
/**************************************************************/
/*
 Cell identity

ReferenceIdentityType ::= CHOICE {
   bsicAndCarrier [0] BSICAndCarrier,
   ci [1] CellID,
   requestIndex [2] RequestIndex,
   systemInfoIndex [3] SystemInfoIndex,
   ciAndLAC [4] CellIDAndLAC
}
*/
/* Choice tag constants */

#define T_rrlp_ReferenceIdentityType_bsicAndCarrier 1
#define T_rrlp_ReferenceIdentityType_ci 2
#define T_rrlp_ReferenceIdentityType_requestIndex 3
#define T_rrlp_ReferenceIdentityType_systemInfoIndex 4
#define T_rrlp_ReferenceIdentityType_ciAndLAC 5

typedef struct EXTERN rrlp_ReferenceIdentityType {
   OSUINT32 t;
   union {
      /* t = 1 */
      rrlp_BSICAndCarrier *bsicAndCarrier;
      /* t = 2 */
      rrlp_CellID ci;
      /* t = 3 */
      rrlp_RequestIndex requestIndex;
      /* t = 4 */
      rrlp_SystemInfoIndex systemInfoIndex;
      /* t = 5 */
      rrlp_CellIDAndLAC *ciAndLAC;
   } u;
} rrlp_ReferenceIdentityType;

EXTERN int asn1PE_rrlp_ReferenceIdentityType (OSCTXT* pctxt, rrlp_ReferenceIdentityType* pvalue);

EXTERN int asn1PD_rrlp_ReferenceIdentityType (OSCTXT* pctxt, rrlp_ReferenceIdentityType* pvalue);

EXTERN void asn1Free_rrlp_ReferenceIdentityType (OSCTXT *pctxt, 
   rrlp_ReferenceIdentityType* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfReferenceIdentityType                                */
/*                                                            */
/**************************************************************/
/*
SeqOfReferenceIdentityType ::= SEQUENCE (SIZE (1..3)) OF ReferenceIdentityType
*/
typedef struct EXTERN rrlp_SeqOfReferenceIdentityType {
   OSUINT32 n;
   rrlp_ReferenceIdentityType *elem;
} rrlp_SeqOfReferenceIdentityType;

EXTERN int asn1PE_rrlp_SeqOfReferenceIdentityType (OSCTXT* pctxt, rrlp_SeqOfReferenceIdentityType* pvalue);

EXTERN int asn1PD_rrlp_SeqOfReferenceIdentityType (OSCTXT* pctxt, rrlp_SeqOfReferenceIdentityType* pvalue);

EXTERN void asn1Free_rrlp_SeqOfReferenceIdentityType (OSCTXT *pctxt, 
   rrlp_SeqOfReferenceIdentityType* pvalue);

/**************************************************************/
/*                                                            */
/*  ReferenceIdentity                                         */
/*                                                            */
/**************************************************************/
/*
 Reference BTS Identity, this element contains number of
 BTSs told nbrOfReferenceBTSs field in Multiple sets element)

ReferenceIdentity ::= SEQUENCE {
   refBTSList [0] SeqOfReferenceIdentityType
}
*/
typedef struct EXTERN rrlp_ReferenceIdentity {
   rrlp_SeqOfReferenceIdentityType refBTSList;
} rrlp_ReferenceIdentity;

EXTERN int asn1PE_rrlp_ReferenceIdentity (OSCTXT* pctxt, rrlp_ReferenceIdentity* pvalue);

EXTERN int asn1PD_rrlp_ReferenceIdentity (OSCTXT* pctxt, rrlp_ReferenceIdentity* pvalue);

EXTERN void asn1Free_rrlp_ReferenceIdentity (OSCTXT *pctxt, 
   rrlp_ReferenceIdentity* pvalue);

/**************************************************************/
/*                                                            */
/*  ModuloTimeSlot                                            */
/*                                                            */
/**************************************************************/
/*
 Time slot (modulo)

ModuloTimeSlot ::= INTEGER (0..3)
*/
typedef OSUINT8 rrlp_ModuloTimeSlot;

EXTERN int asn1PE_rrlp_ModuloTimeSlot (OSCTXT* pctxt, rrlp_ModuloTimeSlot value);

EXTERN int asn1PD_rrlp_ModuloTimeSlot (OSCTXT* pctxt, rrlp_ModuloTimeSlot* pvalue);

/**************************************************************/
/*                                                            */
/*  RefQuality                                                */
/*                                                            */
/**************************************************************/
/*
RefQuality ::= INTEGER (0..31)
*/
typedef OSUINT8 rrlp_RefQuality;

EXTERN int asn1PE_rrlp_RefQuality (OSCTXT* pctxt, rrlp_RefQuality value);

EXTERN int asn1PD_rrlp_RefQuality (OSCTXT* pctxt, rrlp_RefQuality* pvalue);

/**************************************************************/
/*                                                            */
/*  NumOfMeasurements                                         */
/*                                                            */
/**************************************************************/
/*
 St Dev of TOA of reference as defined in annex

NumOfMeasurements ::= INTEGER (0..7)
*/
typedef OSUINT8 rrlp_NumOfMeasurements;

EXTERN int asn1PE_rrlp_NumOfMeasurements (OSCTXT* pctxt, rrlp_NumOfMeasurements value);

EXTERN int asn1PD_rrlp_NumOfMeasurements (OSCTXT* pctxt, rrlp_NumOfMeasurements* pvalue);

/**************************************************************/
/*                                                            */
/*  TOA_MeasurementsOfRef                                     */
/*                                                            */
/**************************************************************/
/*
 Standard deviation of the TOA measurements from the reference BTS

TOA-MeasurementsOfRef ::= SEQUENCE {
   refQuality [0] RefQuality,
   numOfMeasurements [1] NumOfMeasurements
}
*/
typedef struct EXTERN rrlp_TOA_MeasurementsOfRef {
   rrlp_RefQuality refQuality;
   rrlp_NumOfMeasurements numOfMeasurements;
} rrlp_TOA_MeasurementsOfRef;

EXTERN int asn1PE_rrlp_TOA_MeasurementsOfRef (OSCTXT* pctxt, rrlp_TOA_MeasurementsOfRef* pvalue);

EXTERN int asn1PD_rrlp_TOA_MeasurementsOfRef (OSCTXT* pctxt, rrlp_TOA_MeasurementsOfRef* pvalue);

/**************************************************************/
/*                                                            */
/*  StdResolution                                             */
/*                                                            */
/**************************************************************/
/*
 No. of measurements for RefQuality as defined in annex

StdResolution ::= INTEGER (0..3)
*/
typedef OSUINT8 rrlp_StdResolution;

EXTERN int asn1PE_rrlp_StdResolution (OSCTXT* pctxt, rrlp_StdResolution value);

EXTERN int asn1PD_rrlp_StdResolution (OSCTXT* pctxt, rrlp_StdResolution* pvalue);

/**************************************************************/
/*                                                            */
/*  MultiFrameCarrier                                         */
/*                                                            */
/**************************************************************/
/*
 Multiframe and carrier

MultiFrameCarrier ::= SEQUENCE {
   bcchCarrier [0] BCCHCarrier,
   multiFrameOffset [1] MultiFrameOffset
}
*/
typedef struct EXTERN rrlp_MultiFrameCarrier {
   rrlp_BCCHCarrier bcchCarrier;
   rrlp_MultiFrameOffset multiFrameOffset;
} rrlp_MultiFrameCarrier;

EXTERN int asn1PE_rrlp_MultiFrameCarrier (OSCTXT* pctxt, rrlp_MultiFrameCarrier* pvalue);

EXTERN int asn1PD_rrlp_MultiFrameCarrier (OSCTXT* pctxt, rrlp_MultiFrameCarrier* pvalue);

/**************************************************************/
/*                                                            */
/*  NeighborIdentity                                          */
/*                                                            */
/**************************************************************/
/*
NeighborIdentity ::= CHOICE {
   bsicAndCarrier [0] BSICAndCarrier,
   ci [1] CellID,
   multiFrameCarrier [2] MultiFrameCarrier,
   requestIndex [3] RequestIndex,
   systemInfoIndex [4] SystemInfoIndex,
   ciAndLAC [5] CellIDAndLAC
}
*/
/* Choice tag constants */

#define T_rrlp_NeighborIdentity_bsicAndCarrier 1
#define T_rrlp_NeighborIdentity_ci      2
#define T_rrlp_NeighborIdentity_multiFrameCarrier 3
#define T_rrlp_NeighborIdentity_requestIndex 4
#define T_rrlp_NeighborIdentity_systemInfoIndex 5
#define T_rrlp_NeighborIdentity_ciAndLAC 6

typedef struct EXTERN rrlp_NeighborIdentity {
   OSUINT32 t;
   union {
      /* t = 1 */
      rrlp_BSICAndCarrier *bsicAndCarrier;
      /* t = 2 */
      rrlp_CellID ci;
      /* t = 3 */
      rrlp_MultiFrameCarrier *multiFrameCarrier;
      /* t = 4 */
      rrlp_RequestIndex requestIndex;
      /* t = 5 */
      rrlp_SystemInfoIndex systemInfoIndex;
      /* t = 6 */
      rrlp_CellIDAndLAC *ciAndLAC;
   } u;
} rrlp_NeighborIdentity;

EXTERN int asn1PE_rrlp_NeighborIdentity (OSCTXT* pctxt, rrlp_NeighborIdentity* pvalue);

EXTERN int asn1PD_rrlp_NeighborIdentity (OSCTXT* pctxt, rrlp_NeighborIdentity* pvalue);

EXTERN void asn1Free_rrlp_NeighborIdentity (OSCTXT *pctxt, 
   rrlp_NeighborIdentity* pvalue);

/**************************************************************/
/*                                                            */
/*  EOTDQuality                                               */
/*                                                            */
/**************************************************************/
/*
EOTDQuality ::= SEQUENCE {
   nbrOfMeasurements [0] INTEGER (0..7),
   stdOfEOTD [1] INTEGER (0..31)
}
*/
typedef struct EXTERN rrlp_EOTDQuality {
   OSUINT8 nbrOfMeasurements;
   OSUINT8 stdOfEOTD;
} rrlp_EOTDQuality;

EXTERN int asn1PE_rrlp_EOTDQuality (OSCTXT* pctxt, rrlp_EOTDQuality* pvalue);

EXTERN int asn1PD_rrlp_EOTDQuality (OSCTXT* pctxt, rrlp_EOTDQuality* pvalue);

/**************************************************************/
/*                                                            */
/*  OTDValue                                                  */
/*                                                            */
/**************************************************************/
/*
 OTD measurement value for neighbour

OTDValue ::= INTEGER (0..39999)
*/
typedef OSUINT16 rrlp_OTDValue;

EXTERN int asn1PE_rrlp_OTDValue (OSCTXT* pctxt, rrlp_OTDValue value);

EXTERN int asn1PD_rrlp_OTDValue (OSCTXT* pctxt, rrlp_OTDValue* pvalue);

/**************************************************************/
/*                                                            */
/*  OTD_MeasurementWithID                                     */
/*                                                            */
/**************************************************************/
/*
 This measurement contains the BTS identity and measurement

OTD-MeasurementWithID ::= SEQUENCE {
   neighborIdentity [0] NeighborIdentity,
   nborTimeSlot [1] ModuloTimeSlot,
   eotdQuality [2] EOTDQuality,
   otdValue [3] OTDValue
}
*/
typedef struct EXTERN rrlp_OTD_MeasurementWithID {
   rrlp_NeighborIdentity neighborIdentity;
   rrlp_ModuloTimeSlot nborTimeSlot;
   rrlp_EOTDQuality eotdQuality;
   rrlp_OTDValue otdValue;
} rrlp_OTD_MeasurementWithID;

EXTERN int asn1PE_rrlp_OTD_MeasurementWithID (OSCTXT* pctxt, rrlp_OTD_MeasurementWithID* pvalue);

EXTERN int asn1PD_rrlp_OTD_MeasurementWithID (OSCTXT* pctxt, rrlp_OTD_MeasurementWithID* pvalue);

EXTERN void asn1Free_rrlp_OTD_MeasurementWithID (OSCTXT *pctxt, 
   rrlp_OTD_MeasurementWithID* pvalue);

/**************************************************************/
/*                                                            */
/*  OTD_FirstSetMsrs                                          */
/*                                                            */
/**************************************************************/
/*
 Values of resolution are defined in annex

OTD-FirstSetMsrs ::= OTD-MeasurementWithID
*/
typedef rrlp_OTD_MeasurementWithID rrlp_OTD_FirstSetMsrs;

EXTERN int asn1PE_rrlp_OTD_FirstSetMsrs (OSCTXT* pctxt, rrlp_OTD_FirstSetMsrs* pvalue);

EXTERN int asn1PD_rrlp_OTD_FirstSetMsrs (OSCTXT* pctxt, rrlp_OTD_FirstSetMsrs* pvalue);

EXTERN void asn1Free_rrlp_OTD_FirstSetMsrs (OSCTXT *pctxt, 
   rrlp_OTD_FirstSetMsrs* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfOTD_FirstSetMsrs                                     */
/*                                                            */
/**************************************************************/
/*
SeqOfOTD-FirstSetMsrs ::= SEQUENCE (SIZE (1..10)) OF OTD-FirstSetMsrs
*/
typedef struct EXTERN rrlp_SeqOfOTD_FirstSetMsrs {
   OSUINT32 n;
   rrlp_OTD_FirstSetMsrs *elem;
} rrlp_SeqOfOTD_FirstSetMsrs;

EXTERN int asn1PE_rrlp_SeqOfOTD_FirstSetMsrs (OSCTXT* pctxt, rrlp_SeqOfOTD_FirstSetMsrs* pvalue);

EXTERN int asn1PD_rrlp_SeqOfOTD_FirstSetMsrs (OSCTXT* pctxt, rrlp_SeqOfOTD_FirstSetMsrs* pvalue);

EXTERN void asn1Free_rrlp_SeqOfOTD_FirstSetMsrs (OSCTXT *pctxt, 
   rrlp_SeqOfOTD_FirstSetMsrs* pvalue);

/**************************************************************/
/*                                                            */
/*  OTD_MsrElementFirst                                       */
/*                                                            */
/**************************************************************/
/*
 OTD measurent information for 1 set

OTD-MsrElementFirst ::= SEQUENCE {
   refFrameNumber [0] INTEGER (0..42431),
   referenceTimeSlot [1] ModuloTimeSlot,
   toaMeasurementsOfRef [2] TOA-MeasurementsOfRef OPTIONAL,
   stdResolution [3] StdResolution,
   taCorrection [4] INTEGER (0..960) OPTIONAL,
   otd-FirstSetMsrs [5] SeqOfOTD-FirstSetMsrs OPTIONAL
}
*/
typedef struct EXTERN rrlp_OTD_MsrElementFirst {
   struct {
      unsigned toaMeasurementsOfRefPresent : 1;
      unsigned taCorrectionPresent : 1;
      unsigned otd_FirstSetMsrsPresent : 1;
   } m;
   OSUINT16 refFrameNumber;
   rrlp_ModuloTimeSlot referenceTimeSlot;
   rrlp_TOA_MeasurementsOfRef toaMeasurementsOfRef;
   rrlp_StdResolution stdResolution;
   OSUINT16 taCorrection;
   rrlp_SeqOfOTD_FirstSetMsrs otd_FirstSetMsrs;
} rrlp_OTD_MsrElementFirst;

EXTERN int asn1PE_rrlp_OTD_MsrElementFirst (OSCTXT* pctxt, rrlp_OTD_MsrElementFirst* pvalue);

EXTERN int asn1PD_rrlp_OTD_MsrElementFirst (OSCTXT* pctxt, rrlp_OTD_MsrElementFirst* pvalue);

EXTERN void asn1Free_rrlp_OTD_MsrElementFirst (OSCTXT *pctxt, 
   rrlp_OTD_MsrElementFirst* pvalue);

/**************************************************************/
/*                                                            */
/*  OTD_Measurement                                           */
/*                                                            */
/**************************************************************/
/*
 For this OTD measurement identity is same as the identity of BTS
 in the first set with same sequence number

OTD-Measurement ::= SEQUENCE {
   nborTimeSlot [0] ModuloTimeSlot,
   eotdQuality [1] EOTDQuality,
   otdValue [2] OTDValue
}
*/
typedef struct EXTERN rrlp_OTD_Measurement {
   rrlp_ModuloTimeSlot nborTimeSlot;
   rrlp_EOTDQuality eotdQuality;
   rrlp_OTDValue otdValue;
} rrlp_OTD_Measurement;

EXTERN int asn1PE_rrlp_OTD_Measurement (OSCTXT* pctxt, rrlp_OTD_Measurement* pvalue);

EXTERN int asn1PD_rrlp_OTD_Measurement (OSCTXT* pctxt, rrlp_OTD_Measurement* pvalue);

/**************************************************************/
/*                                                            */
/*  OTD_MsrsOfOtherSets                                       */
/*                                                            */
/**************************************************************/
/*
 Neighbour info in OTD measurements 0-10 times in TD measurement info

OTD-MsrsOfOtherSets ::= CHOICE {
   identityNotPresent [0] OTD-Measurement,
   identityPresent [1] OTD-MeasurementWithID
}
*/
/* Choice tag constants */

#define T_rrlp_OTD_MsrsOfOtherSets_identityNotPresent 1
#define T_rrlp_OTD_MsrsOfOtherSets_identityPresent 2

typedef struct EXTERN rrlp_OTD_MsrsOfOtherSets {
   OSUINT32 t;
   union {
      /* t = 1 */
      rrlp_OTD_Measurement *identityNotPresent;
      /* t = 2 */
      rrlp_OTD_MeasurementWithID *identityPresent;
   } u;
} rrlp_OTD_MsrsOfOtherSets;

EXTERN int asn1PE_rrlp_OTD_MsrsOfOtherSets (OSCTXT* pctxt, rrlp_OTD_MsrsOfOtherSets* pvalue);

EXTERN int asn1PD_rrlp_OTD_MsrsOfOtherSets (OSCTXT* pctxt, rrlp_OTD_MsrsOfOtherSets* pvalue);

EXTERN void asn1Free_rrlp_OTD_MsrsOfOtherSets (OSCTXT *pctxt, 
   rrlp_OTD_MsrsOfOtherSets* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfOTD_MsrsOfOtherSets                                  */
/*                                                            */
/**************************************************************/
/*
SeqOfOTD-MsrsOfOtherSets ::= SEQUENCE (SIZE (1..10)) OF OTD-MsrsOfOtherSets
*/
typedef struct EXTERN rrlp_SeqOfOTD_MsrsOfOtherSets {
   OSUINT32 n;
   rrlp_OTD_MsrsOfOtherSets *elem;
} rrlp_SeqOfOTD_MsrsOfOtherSets;

EXTERN int asn1PE_rrlp_SeqOfOTD_MsrsOfOtherSets (OSCTXT* pctxt, rrlp_SeqOfOTD_MsrsOfOtherSets* pvalue);

EXTERN int asn1PD_rrlp_SeqOfOTD_MsrsOfOtherSets (OSCTXT* pctxt, rrlp_SeqOfOTD_MsrsOfOtherSets* pvalue);

EXTERN void asn1Free_rrlp_SeqOfOTD_MsrsOfOtherSets (OSCTXT *pctxt, 
   rrlp_SeqOfOTD_MsrsOfOtherSets* pvalue);

/**************************************************************/
/*                                                            */
/*  OTD_MsrElementRest                                        */
/*                                                            */
/**************************************************************/
/*
 OTD measurent information 2 and 3 sets if exist

OTD-MsrElementRest ::= SEQUENCE {
   refFrameNumber [0] INTEGER (0..42431),
   referenceTimeSlot [1] ModuloTimeSlot,
   toaMeasurementsOfRef [2] TOA-MeasurementsOfRef OPTIONAL,
   stdResolution [3] StdResolution,
   taCorrection [4] INTEGER (0..960) OPTIONAL,
   otd-MsrsOfOtherSets [5] SeqOfOTD-MsrsOfOtherSets OPTIONAL
}
*/
typedef struct EXTERN rrlp_OTD_MsrElementRest {
   struct {
      unsigned toaMeasurementsOfRefPresent : 1;
      unsigned taCorrectionPresent : 1;
      unsigned otd_MsrsOfOtherSetsPresent : 1;
   } m;
   OSUINT16 refFrameNumber;
   rrlp_ModuloTimeSlot referenceTimeSlot;
   rrlp_TOA_MeasurementsOfRef toaMeasurementsOfRef;
   rrlp_StdResolution stdResolution;
   OSUINT16 taCorrection;
   rrlp_SeqOfOTD_MsrsOfOtherSets otd_MsrsOfOtherSets;
} rrlp_OTD_MsrElementRest;

EXTERN int asn1PE_rrlp_OTD_MsrElementRest (OSCTXT* pctxt, rrlp_OTD_MsrElementRest* pvalue);

EXTERN int asn1PD_rrlp_OTD_MsrElementRest (OSCTXT* pctxt, rrlp_OTD_MsrElementRest* pvalue);

EXTERN void asn1Free_rrlp_OTD_MsrElementRest (OSCTXT *pctxt, 
   rrlp_OTD_MsrElementRest* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfOTD_MsrElementRest                                   */
/*                                                            */
/**************************************************************/
/*
SeqOfOTD-MsrElementRest ::= SEQUENCE (SIZE (1..2)) OF OTD-MsrElementRest
*/
typedef struct EXTERN rrlp_SeqOfOTD_MsrElementRest {
   OSUINT32 n;
   rrlp_OTD_MsrElementRest *elem;
} rrlp_SeqOfOTD_MsrElementRest;

EXTERN int asn1PE_rrlp_SeqOfOTD_MsrElementRest (OSCTXT* pctxt, rrlp_SeqOfOTD_MsrElementRest* pvalue);

EXTERN int asn1PD_rrlp_SeqOfOTD_MsrElementRest (OSCTXT* pctxt, rrlp_SeqOfOTD_MsrElementRest* pvalue);

EXTERN void asn1Free_rrlp_SeqOfOTD_MsrElementRest (OSCTXT *pctxt, 
   rrlp_SeqOfOTD_MsrElementRest* pvalue);

/**************************************************************/
/*                                                            */
/*  OTD_MeasureInfo                                           */
/*                                                            */
/**************************************************************/
/*
 OTD-MeasureInfo

OTD-MeasureInfo ::= SEQUENCE {
   otdMsrFirstSets [0] OTD-MsrElementFirst,
   otdMsrRestSets [1] SeqOfOTD-MsrElementRest OPTIONAL
}
*/
typedef struct EXTERN rrlp_OTD_MeasureInfo {
   struct {
      unsigned otdMsrRestSetsPresent : 1;
   } m;
   rrlp_OTD_MsrElementFirst otdMsrFirstSets;
   rrlp_SeqOfOTD_MsrElementRest otdMsrRestSets;
} rrlp_OTD_MeasureInfo;

EXTERN int asn1PE_rrlp_OTD_MeasureInfo (OSCTXT* pctxt, rrlp_OTD_MeasureInfo* pvalue);

EXTERN int asn1PD_rrlp_OTD_MeasureInfo (OSCTXT* pctxt, rrlp_OTD_MeasureInfo* pvalue);

EXTERN void asn1Free_rrlp_OTD_MeasureInfo (OSCTXT *pctxt, 
   rrlp_OTD_MeasureInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  FixType                                                   */
/*                                                            */
/**************************************************************/
/*
FixType ::= INTEGER { twoDFix(0), threeDFix(1) } (0..1)
*/
typedef enum {
   rrlp_FixType_twoDFix = 0,
   rrlp_FixType_threeDFix = 1
} rrlp_FixType_Root;

typedef OSUINT8 rrlp_FixType;

EXTERN int asn1PE_rrlp_FixType (OSCTXT* pctxt, rrlp_FixType value);

EXTERN int asn1PD_rrlp_FixType (OSCTXT* pctxt, rrlp_FixType* pvalue);

/**************************************************************/
/*                                                            */
/*  LocationInfo                                              */
/*                                                            */
/**************************************************************/
/*
 Location information IE

LocationInfo ::= SEQUENCE {
   refFrame [0] INTEGER (0..65535),
   gpsTOW [1] INTEGER (0..14399999) OPTIONAL,
   fixType [2] FixType,
   posEstimate [3] Ext-GeographicalInformation
}
*/
typedef struct EXTERN rrlp_LocationInfo {
   struct {
      unsigned gpsTOWPresent : 1;
   } m;
   OSUINT16 refFrame;
   OSUINT32 gpsTOW;
   rrlp_FixType fixType;
   rrlp_Ext_GeographicalInformation posEstimate;
} rrlp_LocationInfo;

EXTERN int asn1PE_rrlp_LocationInfo (OSCTXT* pctxt, rrlp_LocationInfo* pvalue);

EXTERN int asn1PD_rrlp_LocationInfo (OSCTXT* pctxt, rrlp_LocationInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSTOW24b                                                 */
/*                                                            */
/**************************************************************/
/*
 24 bit presentation for GPSTOW

GPSTOW24b ::= INTEGER (0..14399999)
*/
typedef OSUINT32 rrlp_GPSTOW24b;

EXTERN int asn1PE_rrlp_GPSTOW24b (OSCTXT* pctxt, rrlp_GPSTOW24b value);

EXTERN int asn1PD_rrlp_GPSTOW24b (OSCTXT* pctxt, rrlp_GPSTOW24b* pvalue);

/**************************************************************/
/*                                                            */
/*  MpathIndic                                                */
/*                                                            */
/**************************************************************/
/*
 Multipath indicator

MpathIndic ::= ENUMERATED { notMeasured(0), low(1), medium(2), high(3) }
*/
typedef enum {
   rrlp_MpathIndic_notMeasured = 0,
   rrlp_MpathIndic_low = 1,
   rrlp_MpathIndic_medium = 2,
   rrlp_MpathIndic_high = 3
} rrlp_MpathIndic_Root;

typedef OSUINT32 rrlp_MpathIndic;

EXTERN int asn1PE_rrlp_MpathIndic (OSCTXT* pctxt, rrlp_MpathIndic value);

EXTERN int asn1PD_rrlp_MpathIndic (OSCTXT* pctxt, rrlp_MpathIndic* pvalue);

/**************************************************************/
/*                                                            */
/*  GPS_MsrElement                                            */
/*                                                            */
/**************************************************************/
/*
GPS-MsrElement ::= SEQUENCE {
   satelliteID [0] SatelliteID,
   cNo [1] INTEGER (0..63),
   doppler [2] INTEGER (-32768..32767),
   wholeChips [3] INTEGER (0..1022),
   fracChips [4] INTEGER (0..1024),
   mpathIndic [5] MpathIndic,
   pseuRangeRMSErr [6] INTEGER (0..63)
}
*/
typedef struct EXTERN rrlp_GPS_MsrElement {
   rrlp_SatelliteID satelliteID;
   OSUINT8 cNo;
   OSINT16 doppler;
   OSUINT16 wholeChips;
   OSUINT16 fracChips;
   rrlp_MpathIndic mpathIndic;
   OSUINT8 pseuRangeRMSErr;
} rrlp_GPS_MsrElement;

EXTERN int asn1PE_rrlp_GPS_MsrElement (OSCTXT* pctxt, rrlp_GPS_MsrElement* pvalue);

EXTERN int asn1PD_rrlp_GPS_MsrElement (OSCTXT* pctxt, rrlp_GPS_MsrElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGPS_MsrElement                                       */
/*                                                            */
/**************************************************************/
/*
 measured elements in measurement parameters field

SeqOfGPS-MsrElement ::= SEQUENCE (SIZE (1..16)) OF GPS-MsrElement
*/
typedef struct EXTERN rrlp_SeqOfGPS_MsrElement {
   OSUINT32 n;
   rrlp_GPS_MsrElement *elem;
} rrlp_SeqOfGPS_MsrElement;

EXTERN int asn1PE_rrlp_SeqOfGPS_MsrElement (OSCTXT* pctxt, rrlp_SeqOfGPS_MsrElement* pvalue);

EXTERN int asn1PD_rrlp_SeqOfGPS_MsrElement (OSCTXT* pctxt, rrlp_SeqOfGPS_MsrElement* pvalue);

EXTERN void asn1Free_rrlp_SeqOfGPS_MsrElement (OSCTXT *pctxt, 
   rrlp_SeqOfGPS_MsrElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GPS_MsrSetElement                                         */
/*                                                            */
/**************************************************************/
/*
 OTD measurent information 1-3 times in message

GPS-MsrSetElement ::= SEQUENCE {
   refFrame [0] INTEGER (0..65535) OPTIONAL,
   gpsTOW [1] GPSTOW24b,
   gps-msrList [2] SeqOfGPS-MsrElement
}
*/
typedef struct EXTERN rrlp_GPS_MsrSetElement {
   struct {
      unsigned refFramePresent : 1;
   } m;
   OSUINT16 refFrame;
   rrlp_GPSTOW24b gpsTOW;
   rrlp_SeqOfGPS_MsrElement gps_msrList;
} rrlp_GPS_MsrSetElement;

EXTERN int asn1PE_rrlp_GPS_MsrSetElement (OSCTXT* pctxt, rrlp_GPS_MsrSetElement* pvalue);

EXTERN int asn1PD_rrlp_GPS_MsrSetElement (OSCTXT* pctxt, rrlp_GPS_MsrSetElement* pvalue);

EXTERN void asn1Free_rrlp_GPS_MsrSetElement (OSCTXT *pctxt, 
   rrlp_GPS_MsrSetElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGPS_MsrSetElement                                    */
/*                                                            */
/**************************************************************/
/*
SeqOfGPS-MsrSetElement ::= SEQUENCE (SIZE (1..3)) OF GPS-MsrSetElement
*/
typedef struct EXTERN rrlp_SeqOfGPS_MsrSetElement {
   OSUINT32 n;
   rrlp_GPS_MsrSetElement *elem;
} rrlp_SeqOfGPS_MsrSetElement;

EXTERN int asn1PE_rrlp_SeqOfGPS_MsrSetElement (OSCTXT* pctxt, rrlp_SeqOfGPS_MsrSetElement* pvalue);

EXTERN int asn1PD_rrlp_SeqOfGPS_MsrSetElement (OSCTXT* pctxt, rrlp_SeqOfGPS_MsrSetElement* pvalue);

EXTERN void asn1Free_rrlp_SeqOfGPS_MsrSetElement (OSCTXT *pctxt, 
   rrlp_SeqOfGPS_MsrSetElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GPS_MeasureInfo                                           */
/*                                                            */
/**************************************************************/
/*
 GPS-Measurement information

GPS-MeasureInfo ::= SEQUENCE {
   gpsMsrSetList [0] SeqOfGPS-MsrSetElement
}
*/
typedef struct EXTERN rrlp_GPS_MeasureInfo {
   rrlp_SeqOfGPS_MsrSetElement gpsMsrSetList;
} rrlp_GPS_MeasureInfo;

EXTERN int asn1PE_rrlp_GPS_MeasureInfo (OSCTXT* pctxt, rrlp_GPS_MeasureInfo* pvalue);

EXTERN int asn1PD_rrlp_GPS_MeasureInfo (OSCTXT* pctxt, rrlp_GPS_MeasureInfo* pvalue);

EXTERN void asn1Free_rrlp_GPS_MeasureInfo (OSCTXT *pctxt, 
   rrlp_GPS_MeasureInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  LocErrorReason                                            */
/*                                                            */
/**************************************************************/
/*
LocErrorReason ::= ENUMERATED { unDefined(0), notEnoughBTSs(1), notEnoughSats(2), eotdLocCalAssDataMissing(3), eotdAssDataMissing(4), gpsLocCalAssDataMissing(5), gpsAssDataMissing(6), methodNotSupported(7), notProcessed(8), refBTSForGPSNotServingBTS(9), refBTSForEOTDNotServingBTS(10), ..., notEnoughGANSSSats(11), ganssAssDataMissing(12), refBTSForGANSSNotServingBTS(13) }
*/
typedef enum {
   rrlp_LocErrorReason_unDefined = 0,
   rrlp_LocErrorReason_notEnoughBTSs = 1,
   rrlp_LocErrorReason_notEnoughSats = 2,
   rrlp_LocErrorReason_eotdLocCalAssDataMissing = 3,
   rrlp_LocErrorReason_eotdAssDataMissing = 4,
   rrlp_LocErrorReason_gpsLocCalAssDataMissing = 5,
   rrlp_LocErrorReason_gpsAssDataMissing = 6,
   rrlp_LocErrorReason_methodNotSupported = 7,
   rrlp_LocErrorReason_notProcessed = 8,
   rrlp_LocErrorReason_refBTSForGPSNotServingBTS = 9,
   rrlp_LocErrorReason_refBTSForEOTDNotServingBTS = 10
} rrlp_LocErrorReason_Root;

typedef enum {
   rrlp_LocErrorReason_notEnoughGANSSSats = 11,
   rrlp_LocErrorReason_ganssAssDataMissing = 12,
   rrlp_LocErrorReason_refBTSForGANSSNotServingBTS = 13
} rrlp_LocErrorReason_Ext;

typedef OSUINT32 rrlp_LocErrorReason;

EXTERN int asn1PE_rrlp_LocErrorReason (OSCTXT* pctxt, rrlp_LocErrorReason value);

EXTERN int asn1PD_rrlp_LocErrorReason (OSCTXT* pctxt, rrlp_LocErrorReason* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSAssistanceData                                         */
/*                                                            */
/**************************************************************/
/*
GPSAssistanceData ::= OCTET STRING (SIZE (1..maxGPSAssistanceData))
*/
typedef struct EXTERN rrlp_GPSAssistanceData {
   OSUINT32 numocts;
   OSOCTET data[40];
} rrlp_GPSAssistanceData;

EXTERN int asn1PE_rrlp_GPSAssistanceData (OSCTXT* pctxt, rrlp_GPSAssistanceData* pvalue);

EXTERN int asn1PD_rrlp_GPSAssistanceData (OSCTXT* pctxt, rrlp_GPSAssistanceData* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSAssistanceData                                       */
/*                                                            */
/**************************************************************/
/*
GANSSAssistanceData ::= OCTET STRING (SIZE (1..maxGANSSAssistanceData))
*/
typedef struct EXTERN rrlp_GANSSAssistanceData {
   OSUINT32 numocts;
   OSOCTET data[40];
} rrlp_GANSSAssistanceData;

EXTERN int asn1PE_rrlp_GANSSAssistanceData (OSCTXT* pctxt, rrlp_GANSSAssistanceData* pvalue);

EXTERN int asn1PD_rrlp_GANSSAssistanceData (OSCTXT* pctxt, rrlp_GANSSAssistanceData* pvalue);

/**************************************************************/
/*                                                            */
/*  AdditionalAssistanceData                                  */
/*                                                            */
/**************************************************************/
/*
 exception handling:
 an unrecognized value shall be treated the same as value 0
 defines additional assistance data needed for any new location attempt
 MS shall retain any assistance data already received

AdditionalAssistanceData ::= SEQUENCE {
   gpsAssistanceData [0] GPSAssistanceData OPTIONAL,
   extensionContainer [1] ExtensionContainer OPTIONAL,
   ...,
   ganssAssistanceData [2] GANSSAssistanceData OPTIONAL
}
*/
typedef struct EXTERN rrlp_AdditionalAssistanceData {
   struct {
      unsigned gpsAssistanceDataPresent : 1;
      unsigned extensionContainerPresent : 1;
      unsigned ganssAssistanceDataPresent : 1;
   } m;
   rrlp_GPSAssistanceData gpsAssistanceData;
   rrlp_ExtensionContainer extensionContainer;
   rrlp_GANSSAssistanceData ganssAssistanceData;
   OSRTDList extElem1;
} rrlp_AdditionalAssistanceData;

EXTERN int asn1PE_rrlp_AdditionalAssistanceData (OSCTXT* pctxt, rrlp_AdditionalAssistanceData* pvalue);

EXTERN int asn1PD_rrlp_AdditionalAssistanceData (OSCTXT* pctxt, rrlp_AdditionalAssistanceData* pvalue);

EXTERN void asn1Free_rrlp_AdditionalAssistanceData (OSCTXT *pctxt, 
   rrlp_AdditionalAssistanceData* pvalue);

/**************************************************************/
/*                                                            */
/*  LocationError                                             */
/*                                                            */
/**************************************************************/
/*
 Location error IE

LocationError ::= SEQUENCE {
   locErrorReason [0] LocErrorReason,
   additionalAssistanceData [1] AdditionalAssistanceData OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_LocationError {
   struct {
      unsigned additionalAssistanceDataPresent : 1;
   } m;
   rrlp_LocErrorReason locErrorReason;
   rrlp_AdditionalAssistanceData additionalAssistanceData;
   OSRTDList extElem1;
} rrlp_LocationError;

EXTERN int asn1PE_rrlp_LocationError (OSCTXT* pctxt, rrlp_LocationError* pvalue);

EXTERN int asn1PD_rrlp_LocationError (OSCTXT* pctxt, rrlp_LocationError* pvalue);

EXTERN void asn1Free_rrlp_LocationError (OSCTXT *pctxt, rrlp_LocationError* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfOTD_FirstSetMsrs_R98_Ext                             */
/*                                                            */
/**************************************************************/
/*
SeqOfOTD-FirstSetMsrs-R98-Ext ::= SEQUENCE (SIZE (1..5)) OF OTD-FirstSetMsrs
*/
typedef struct EXTERN rrlp_SeqOfOTD_FirstSetMsrs_R98_Ext {
   OSUINT32 n;
   rrlp_OTD_FirstSetMsrs *elem;
} rrlp_SeqOfOTD_FirstSetMsrs_R98_Ext;

EXTERN int asn1PE_rrlp_SeqOfOTD_FirstSetMsrs_R98_Ext (OSCTXT* pctxt, rrlp_SeqOfOTD_FirstSetMsrs_R98_Ext* pvalue);

EXTERN int asn1PD_rrlp_SeqOfOTD_FirstSetMsrs_R98_Ext (OSCTXT* pctxt, rrlp_SeqOfOTD_FirstSetMsrs_R98_Ext* pvalue);

EXTERN void asn1Free_rrlp_SeqOfOTD_FirstSetMsrs_R98_Ext (OSCTXT *pctxt, 
   rrlp_SeqOfOTD_FirstSetMsrs_R98_Ext* pvalue);

/**************************************************************/
/*                                                            */
/*  OTD_MsrElementFirst_R98_Ext                               */
/*                                                            */
/**************************************************************/
/*
 OTD measurement information Ext for the first set only

OTD-MsrElementFirst-R98-Ext ::= SEQUENCE {
   otd-FirstSetMsrs-R98-Ext [0] SeqOfOTD-FirstSetMsrs-R98-Ext OPTIONAL
}
*/
typedef struct EXTERN rrlp_OTD_MsrElementFirst_R98_Ext {
   struct {
      unsigned otd_FirstSetMsrs_R98_ExtPresent : 1;
   } m;
   rrlp_SeqOfOTD_FirstSetMsrs_R98_Ext otd_FirstSetMsrs_R98_Ext;
} rrlp_OTD_MsrElementFirst_R98_Ext;

EXTERN int asn1PE_rrlp_OTD_MsrElementFirst_R98_Ext (OSCTXT* pctxt, rrlp_OTD_MsrElementFirst_R98_Ext* pvalue);

EXTERN int asn1PD_rrlp_OTD_MsrElementFirst_R98_Ext (OSCTXT* pctxt, rrlp_OTD_MsrElementFirst_R98_Ext* pvalue);

EXTERN void asn1Free_rrlp_OTD_MsrElementFirst_R98_Ext (OSCTXT *pctxt, 
   rrlp_OTD_MsrElementFirst_R98_Ext* pvalue);

/**************************************************************/
/*                                                            */
/*  OTD_MeasureInfo_R98_Ext                                   */
/*                                                            */
/**************************************************************/
/*
 This is an addition to OTD-MeasureInfo element defined in original message,
 If OTD-MeasureInfo is absent, or if one or more OTD-MsrElementRest are present
 OTD-MeasureInfo-R98-Ext shall be absent.
 OTD-MeasureInfo-R98-Ext

OTD-MeasureInfo-R98-Ext ::= SEQUENCE {
   otdMsrFirstSets-R98-Ext [0] OTD-MsrElementFirst-R98-Ext
}
*/
typedef struct EXTERN rrlp_OTD_MeasureInfo_R98_Ext {
   rrlp_OTD_MsrElementFirst_R98_Ext otdMsrFirstSets_R98_Ext;
} rrlp_OTD_MeasureInfo_R98_Ext;

EXTERN int asn1PE_rrlp_OTD_MeasureInfo_R98_Ext (OSCTXT* pctxt, rrlp_OTD_MeasureInfo_R98_Ext* pvalue);

EXTERN int asn1PD_rrlp_OTD_MeasureInfo_R98_Ext (OSCTXT* pctxt, rrlp_OTD_MeasureInfo_R98_Ext* pvalue);

EXTERN void asn1Free_rrlp_OTD_MeasureInfo_R98_Ext (OSCTXT *pctxt, 
   rrlp_OTD_MeasureInfo_R98_Ext* pvalue);

/**************************************************************/
/*                                                            */
/*  Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Rel-98-MsrPosition-Rsp-Extension'
*/
typedef struct EXTERN rrlp_Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo {
   struct {
      unsigned otd_MeasureInfo_R98_ExtPresent : 1;
   } m;
   rrlp_OTD_MeasureInfo_R98_Ext otd_MeasureInfo_R98_Ext;
} rrlp_Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo;

EXTERN int asn1PE_rrlp_Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo (OSCTXT* pctxt, rrlp_Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo* pvalue);

EXTERN int asn1PD_rrlp_Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo (OSCTXT* pctxt, rrlp_Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo* pvalue);

EXTERN void asn1Free_rrlp_Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo (OSCTXT *pctxt, 
   rrlp_Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSTimeAssistanceMeasurements                             */
/*                                                            */
/**************************************************************/
/*
 Coding according to Annex

GPSTimeAssistanceMeasurements ::= SEQUENCE {
   referenceFrameMSB [0] INTEGER (0..63) OPTIONAL,
   gpsTowSubms [1] INTEGER (0..9999) OPTIONAL,
   deltaTow [2] INTEGER (0..127) OPTIONAL,
   gpsReferenceTimeUncertainty [3] GPSReferenceTimeUncertainty OPTIONAL
}
*/
typedef struct EXTERN rrlp_GPSTimeAssistanceMeasurements {
   struct {
      unsigned referenceFrameMSBPresent : 1;
      unsigned gpsTowSubmsPresent : 1;
      unsigned deltaTowPresent : 1;
      unsigned gpsReferenceTimeUncertaintyPresent : 1;
   } m;
   OSUINT8 referenceFrameMSB;
   OSUINT16 gpsTowSubms;
   OSUINT8 deltaTow;
   rrlp_GPSReferenceTimeUncertainty gpsReferenceTimeUncertainty;
} rrlp_GPSTimeAssistanceMeasurements;

EXTERN int asn1PE_rrlp_GPSTimeAssistanceMeasurements (OSCTXT* pctxt, rrlp_GPSTimeAssistanceMeasurements* pvalue);

EXTERN int asn1PD_rrlp_GPSTimeAssistanceMeasurements (OSCTXT* pctxt, rrlp_GPSTimeAssistanceMeasurements* pvalue);

/**************************************************************/
/*                                                            */
/*  Rel_98_MsrPosition_Rsp_Extension                          */
/*                                                            */
/**************************************************************/
/*
Rel-98-MsrPosition-Rsp-Extension ::= SEQUENCE {
   rel-98-Ext-MeasureInfo [0] SEQUENCE {
      otd-MeasureInfo-R98-Ext [0] OTD-MeasureInfo-R98-Ext OPTIONAL
   },
   ...,
   timeAssistanceMeasurements [1] GPSTimeAssistanceMeasurements OPTIONAL
}
*/
typedef struct EXTERN rrlp_Rel_98_MsrPosition_Rsp_Extension {
   struct {
      unsigned timeAssistanceMeasurementsPresent : 1;
   } m;
   rrlp_Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo rel_98_Ext_MeasureInfo;
   rrlp_GPSTimeAssistanceMeasurements timeAssistanceMeasurements;
   OSRTDList extElem1;
} rrlp_Rel_98_MsrPosition_Rsp_Extension;

EXTERN int asn1PE_rrlp_Rel_98_MsrPosition_Rsp_Extension (OSCTXT* pctxt, rrlp_Rel_98_MsrPosition_Rsp_Extension* pvalue);

EXTERN int asn1PD_rrlp_Rel_98_MsrPosition_Rsp_Extension (OSCTXT* pctxt, rrlp_Rel_98_MsrPosition_Rsp_Extension* pvalue);

EXTERN void asn1Free_rrlp_Rel_98_MsrPosition_Rsp_Extension (OSCTXT *pctxt, 
   rrlp_Rel_98_MsrPosition_Rsp_Extension* pvalue);

/**************************************************************/
/*                                                            */
/*  OTD_MeasureInfo_5_Ext                                     */
/*                                                            */
/**************************************************************/
/*
OTD-MeasureInfo-5-Ext ::= SeqOfOTD-MsrElementRest
*/
/* Array of rrlp_OTD_MsrElementRest */
typedef rrlp_SeqOfOTD_MsrElementRest rrlp_OTD_MeasureInfo_5_Ext;

EXTERN int asn1PE_rrlp_OTD_MeasureInfo_5_Ext (OSCTXT* pctxt, rrlp_OTD_MeasureInfo_5_Ext* pvalue);

EXTERN int asn1PD_rrlp_OTD_MeasureInfo_5_Ext (OSCTXT* pctxt, rrlp_OTD_MeasureInfo_5_Ext* pvalue);

EXTERN void asn1Free_rrlp_OTD_MeasureInfo_5_Ext (OSCTXT *pctxt, 
   rrlp_OTD_MeasureInfo_5_Ext* pvalue);

/**************************************************************/
/*                                                            */
/*  UlPseudoSegInd                                            */
/*                                                            */
/**************************************************************/
/*
 if more than one measurement sets are present this element is repeated
 NumberOfSets - 1 (-1 = first set) combined in OTD-MeasureInfo-5-Ext and
 OTD-MeasureInfo (e.g. if NumberOfSets is 3, then one otdMsrRestSets may
 be sent in OTD-MeasureInfo-5-Ext and one in OTD-MeasureInfo)
 First part of Uplink RRLP Pseudo-segmentation indication, possibly more may be defined
 in the future for segmentation with more than two segments.

UlPseudoSegInd ::= ENUMERATED { firstOfMany(0), secondOfMany(1) }
*/
typedef enum {
   rrlp_UlPseudoSegInd_firstOfMany = 0,
   rrlp_UlPseudoSegInd_secondOfMany = 1
} rrlp_UlPseudoSegInd_Root;

typedef OSUINT32 rrlp_UlPseudoSegInd;

EXTERN int asn1PE_rrlp_UlPseudoSegInd (OSCTXT* pctxt, rrlp_UlPseudoSegInd value);

EXTERN int asn1PD_rrlp_UlPseudoSegInd (OSCTXT* pctxt, rrlp_UlPseudoSegInd* pvalue);

/**************************************************************/
/*                                                            */
/*  Rel_5_MsrPosition_Rsp_Extension                           */
/*                                                            */
/**************************************************************/
/*
Rel-5-MsrPosition-Rsp-Extension ::= SEQUENCE {
   extended-reference [0] Extended-reference OPTIONAL,
   otd-MeasureInfo-5-Ext [1] OTD-MeasureInfo-5-Ext OPTIONAL,
   ulPseudoSegInd [2] UlPseudoSegInd OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_Rel_5_MsrPosition_Rsp_Extension {
   struct {
      unsigned extended_referencePresent : 1;
      unsigned otd_MeasureInfo_5_ExtPresent : 1;
      unsigned ulPseudoSegIndPresent : 1;
   } m;
   rrlp_Extended_reference extended_reference;
   rrlp_OTD_MeasureInfo_5_Ext otd_MeasureInfo_5_Ext;
   rrlp_UlPseudoSegInd ulPseudoSegInd;
   OSRTDList extElem1;
} rrlp_Rel_5_MsrPosition_Rsp_Extension;

EXTERN int asn1PE_rrlp_Rel_5_MsrPosition_Rsp_Extension (OSCTXT* pctxt, rrlp_Rel_5_MsrPosition_Rsp_Extension* pvalue);

EXTERN int asn1PD_rrlp_Rel_5_MsrPosition_Rsp_Extension (OSCTXT* pctxt, rrlp_Rel_5_MsrPosition_Rsp_Extension* pvalue);

EXTERN void asn1Free_rrlp_Rel_5_MsrPosition_Rsp_Extension (OSCTXT *pctxt, 
   rrlp_Rel_5_MsrPosition_Rsp_Extension* pvalue);

/**************************************************************/
/*                                                            */
/*  ReferenceFrame                                            */
/*                                                            */
/**************************************************************/
/*
ReferenceFrame ::= SEQUENCE {
   referenceFN [0] INTEGER (0..65535),
   referenceFNMSB [1] INTEGER (0..63) OPTIONAL
}
*/
typedef struct EXTERN rrlp_ReferenceFrame {
   struct {
      unsigned referenceFNMSBPresent : 1;
   } m;
   OSUINT16 referenceFN;
   OSUINT8 referenceFNMSB;
} rrlp_ReferenceFrame;

EXTERN int asn1PE_rrlp_ReferenceFrame (OSCTXT* pctxt, rrlp_ReferenceFrame* pvalue);

EXTERN int asn1PD_rrlp_ReferenceFrame (OSCTXT* pctxt, rrlp_ReferenceFrame* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSTODm                                                 */
/*                                                            */
/**************************************************************/
/*
 GANSS TOD modulo 1 hour

GANSSTODm ::= INTEGER (0..3599999)
*/
typedef OSUINT32 rrlp_GANSSTODm;

EXTERN int asn1PE_rrlp_GANSSTODm (OSCTXT* pctxt, rrlp_GANSSTODm value);

EXTERN int asn1PD_rrlp_GANSSTODm (OSCTXT* pctxt, rrlp_GANSSTODm* pvalue);

/**************************************************************/
/*                                                            */
/*  PositionData                                              */
/*                                                            */
/**************************************************************/
/*
PositionData ::= BIT STRING  { e-otd(0), gps(1), galileo(2), sbas(3), modernizedGPS(4), qzss(5), glonass(6) } (SIZE (3..16))
*/
/* Named bit constants */

#define rrlp_PositionData_rrlp_e_otd                      0
#define rrlp_PositionData_rrlp_gps_1                      1
#define rrlp_PositionData_rrlp_galileo_1                  2
#define rrlp_PositionData_rrlp_sbas_1                     3
#define rrlp_PositionData_rrlp_modernizedGPS_1            4
#define rrlp_PositionData_rrlp_qzss_1                     5
#define rrlp_PositionData_rrlp_glonass_1                  6

typedef struct rrlp_PositionData {
   OSUINT32 numbits;
   OSOCTET data[2];
} rrlp_PositionData;

EXTERN int asn1PE_rrlp_PositionData (OSCTXT* pctxt, rrlp_PositionData* pvalue);

EXTERN int asn1PD_rrlp_PositionData (OSCTXT* pctxt, rrlp_PositionData* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSLocationInfo                                         */
/*                                                            */
/**************************************************************/
/*
 GANSS Location Information contains location estimate, time stamp with uncertainty 
 and optionally Reference Frame field

GANSSLocationInfo ::= SEQUENCE {
   referenceFrame [0] ReferenceFrame OPTIONAL,
   ganssTODm [1] GANSSTODm OPTIONAL,
   ganssTODFrac [2] INTEGER (0..16384) OPTIONAL,
   ganssTODUncertainty [3] GANSSTODUncertainty OPTIONAL,
   ganssTimeID [4] INTEGER (0..7) OPTIONAL,
   fixType [5] FixType,
   posData [6] PositionData,
   stationaryIndication [7] INTEGER (0..1) OPTIONAL,
   posEstimate [8] Ext-GeographicalInformation,
   ...
}
*/
typedef struct EXTERN rrlp_GANSSLocationInfo {
   struct {
      unsigned referenceFramePresent : 1;
      unsigned ganssTODmPresent : 1;
      unsigned ganssTODFracPresent : 1;
      unsigned ganssTODUncertaintyPresent : 1;
      unsigned ganssTimeIDPresent : 1;
      unsigned stationaryIndicationPresent : 1;
   } m;
   rrlp_ReferenceFrame referenceFrame;
   rrlp_GANSSTODm ganssTODm;
   OSUINT16 ganssTODFrac;
   rrlp_GANSSTODUncertainty ganssTODUncertainty;
   OSUINT8 ganssTimeID;
   rrlp_FixType fixType;
   rrlp_PositionData posData;
   OSUINT8 stationaryIndication;
   rrlp_Ext_GeographicalInformation posEstimate;
   OSRTDList extElem1;
} rrlp_GANSSLocationInfo;

EXTERN int asn1PE_rrlp_GANSSLocationInfo (OSCTXT* pctxt, rrlp_GANSSLocationInfo* pvalue);

EXTERN int asn1PD_rrlp_GANSSLocationInfo (OSCTXT* pctxt, rrlp_GANSSLocationInfo* pvalue);

EXTERN void asn1Free_rrlp_GANSSLocationInfo (OSCTXT *pctxt, 
   rrlp_GANSSLocationInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSS_SgnElement                                          */
/*                                                            */
/**************************************************************/
/*
GANSS-SgnElement ::= SEQUENCE {
   svID [0] SVID,
   cNo [1] INTEGER (0..63),
   mpathDet [2] MpathIndic,
   carrierQualityInd [3] INTEGER (0..3) OPTIONAL,
   codePhase [4] INTEGER (0..2097151),
   integerCodePhase [5] INTEGER (0..127) OPTIONAL,
   codePhaseRMSError [6] INTEGER (0..63),
   doppler [7] INTEGER (-32768..32767) OPTIONAL,
   adr [8] INTEGER (0..33554431) OPTIONAL
}
*/
typedef struct EXTERN rrlp_GANSS_SgnElement {
   struct {
      unsigned carrierQualityIndPresent : 1;
      unsigned integerCodePhasePresent : 1;
      unsigned dopplerPresent : 1;
      unsigned adrPresent : 1;
   } m;
   rrlp_SVID svID;
   OSUINT8 cNo;
   rrlp_MpathIndic mpathDet;
   OSUINT8 carrierQualityInd;
   OSUINT32 codePhase;
   OSUINT8 integerCodePhase;
   OSUINT8 codePhaseRMSError;
   OSINT16 doppler;
   OSUINT32 adr;
} rrlp_GANSS_SgnElement;

EXTERN int asn1PE_rrlp_GANSS_SgnElement (OSCTXT* pctxt, rrlp_GANSS_SgnElement* pvalue);

EXTERN int asn1PD_rrlp_GANSS_SgnElement (OSCTXT* pctxt, rrlp_GANSS_SgnElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGANSS_SgnElement                                     */
/*                                                            */
/**************************************************************/
/*
 Up to 16 Measurements can be returned per signal type 

SeqOfGANSS-SgnElement ::= SEQUENCE (SIZE (1..16)) OF GANSS-SgnElement
*/
typedef struct EXTERN rrlp_SeqOfGANSS_SgnElement {
   OSUINT32 n;
   rrlp_GANSS_SgnElement *elem;
} rrlp_SeqOfGANSS_SgnElement;

EXTERN int asn1PE_rrlp_SeqOfGANSS_SgnElement (OSCTXT* pctxt, rrlp_SeqOfGANSS_SgnElement* pvalue);

EXTERN int asn1PD_rrlp_SeqOfGANSS_SgnElement (OSCTXT* pctxt, rrlp_SeqOfGANSS_SgnElement* pvalue);

EXTERN void asn1Free_rrlp_SeqOfGANSS_SgnElement (OSCTXT *pctxt, 
   rrlp_SeqOfGANSS_SgnElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSS_SgnTypeElement                                      */
/*                                                            */
/**************************************************************/
/*
GANSS-SgnTypeElement ::= SEQUENCE {
   ganssSignalID [0] GANSSSignalID,
   ganssCodePhaseAmbiguity [1] INTEGER (0..127) OPTIONAL,
   ganss-SgnList [2] SeqOfGANSS-SgnElement,
   ...
}
*/
typedef struct EXTERN rrlp_GANSS_SgnTypeElement {
   struct {
      unsigned ganssCodePhaseAmbiguityPresent : 1;
   } m;
   rrlp_GANSSSignalID ganssSignalID;
   OSUINT8 ganssCodePhaseAmbiguity;
   rrlp_SeqOfGANSS_SgnElement ganss_SgnList;
   OSRTDList extElem1;
} rrlp_GANSS_SgnTypeElement;

EXTERN int asn1PE_rrlp_GANSS_SgnTypeElement (OSCTXT* pctxt, rrlp_GANSS_SgnTypeElement* pvalue);

EXTERN int asn1PD_rrlp_GANSS_SgnTypeElement (OSCTXT* pctxt, rrlp_GANSS_SgnTypeElement* pvalue);

EXTERN void asn1Free_rrlp_GANSS_SgnTypeElement (OSCTXT *pctxt, 
   rrlp_GANSS_SgnTypeElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGANSS_SgnTypeElement                                 */
/*                                                            */
/**************************************************************/
/*
 Measurements can be returned up to 8 different signal types
 N_SGN_TYPE can be read from number of elements of SeqOfGANSS-SgnTypeElement 
 Reporting of multiple signal types as defined in A.2.2.4g  

SeqOfGANSS-SgnTypeElement ::= SEQUENCE (SIZE (1..8)) OF GANSS-SgnTypeElement
*/
typedef struct EXTERN rrlp_SeqOfGANSS_SgnTypeElement {
   OSUINT32 n;
   rrlp_GANSS_SgnTypeElement *elem;
} rrlp_SeqOfGANSS_SgnTypeElement;

EXTERN int asn1PE_rrlp_SeqOfGANSS_SgnTypeElement (OSCTXT* pctxt, rrlp_SeqOfGANSS_SgnTypeElement* pvalue);

EXTERN int asn1PD_rrlp_SeqOfGANSS_SgnTypeElement (OSCTXT* pctxt, rrlp_SeqOfGANSS_SgnTypeElement* pvalue);

EXTERN void asn1Free_rrlp_SeqOfGANSS_SgnTypeElement (OSCTXT *pctxt, 
   rrlp_SeqOfGANSS_SgnTypeElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSS_MsrElement                                          */
/*                                                            */
/**************************************************************/
/*
GANSS-MsrElement ::= SEQUENCE {
   ganssID [0] INTEGER (0..7) OPTIONAL,
   ganss-SgnTypeList [1] SeqOfGANSS-SgnTypeElement
}
*/
typedef struct EXTERN rrlp_GANSS_MsrElement {
   struct {
      unsigned ganssIDPresent : 1;
   } m;
   OSUINT8 ganssID;
   rrlp_SeqOfGANSS_SgnTypeElement ganss_SgnTypeList;
} rrlp_GANSS_MsrElement;

EXTERN int asn1PE_rrlp_GANSS_MsrElement (OSCTXT* pctxt, rrlp_GANSS_MsrElement* pvalue);

EXTERN int asn1PD_rrlp_GANSS_MsrElement (OSCTXT* pctxt, rrlp_GANSS_MsrElement* pvalue);

EXTERN void asn1Free_rrlp_GANSS_MsrElement (OSCTXT *pctxt, 
   rrlp_GANSS_MsrElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGANSS_MsrElement                                     */
/*                                                            */
/**************************************************************/
/*
SeqOfGANSS-MsrElement ::= SEQUENCE (SIZE (1..8)) OF GANSS-MsrElement
*/
typedef struct EXTERN rrlp_SeqOfGANSS_MsrElement {
   OSUINT32 n;
   rrlp_GANSS_MsrElement *elem;
} rrlp_SeqOfGANSS_MsrElement;

EXTERN int asn1PE_rrlp_SeqOfGANSS_MsrElement (OSCTXT* pctxt, rrlp_SeqOfGANSS_MsrElement* pvalue);

EXTERN int asn1PD_rrlp_SeqOfGANSS_MsrElement (OSCTXT* pctxt, rrlp_SeqOfGANSS_MsrElement* pvalue);

EXTERN void asn1Free_rrlp_SeqOfGANSS_MsrElement (OSCTXT *pctxt, 
   rrlp_SeqOfGANSS_MsrElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSS_MsrSetElement                                       */
/*                                                            */
/**************************************************************/
/*
 GANSS measurement information 1-3 times in a message

GANSS-MsrSetElement ::= SEQUENCE {
   referenceFrame [0] ReferenceFrame OPTIONAL,
   ganssTODm [1] GANSSTODm OPTIONAL,
   deltaGANSSTOD [2] INTEGER (0..127) OPTIONAL,
   ganssTODUncertainty [3] GANSSTODUncertainty OPTIONAL,
   ganss-MsrElementList [4] SeqOfGANSS-MsrElement
}
*/
typedef struct EXTERN rrlp_GANSS_MsrSetElement {
   struct {
      unsigned referenceFramePresent : 1;
      unsigned ganssTODmPresent : 1;
      unsigned deltaGANSSTODPresent : 1;
      unsigned ganssTODUncertaintyPresent : 1;
   } m;
   rrlp_ReferenceFrame referenceFrame;
   rrlp_GANSSTODm ganssTODm;
   OSUINT8 deltaGANSSTOD;
   rrlp_GANSSTODUncertainty ganssTODUncertainty;
   rrlp_SeqOfGANSS_MsrElement ganss_MsrElementList;
} rrlp_GANSS_MsrSetElement;

EXTERN int asn1PE_rrlp_GANSS_MsrSetElement (OSCTXT* pctxt, rrlp_GANSS_MsrSetElement* pvalue);

EXTERN int asn1PD_rrlp_GANSS_MsrSetElement (OSCTXT* pctxt, rrlp_GANSS_MsrSetElement* pvalue);

EXTERN void asn1Free_rrlp_GANSS_MsrSetElement (OSCTXT *pctxt, 
   rrlp_GANSS_MsrSetElement* pvalue);

/**************************************************************/
/*                                                            */
/*  SeqOfGANSS_MsrSetElement                                  */
/*                                                            */
/**************************************************************/
/*
SeqOfGANSS-MsrSetElement ::= SEQUENCE (SIZE (1..3)) OF GANSS-MsrSetElement
*/
typedef struct EXTERN rrlp_SeqOfGANSS_MsrSetElement {
   OSUINT32 n;
   rrlp_GANSS_MsrSetElement *elem;
} rrlp_SeqOfGANSS_MsrSetElement;

EXTERN int asn1PE_rrlp_SeqOfGANSS_MsrSetElement (OSCTXT* pctxt, rrlp_SeqOfGANSS_MsrSetElement* pvalue);

EXTERN int asn1PD_rrlp_SeqOfGANSS_MsrSetElement (OSCTXT* pctxt, rrlp_SeqOfGANSS_MsrSetElement* pvalue);

EXTERN void asn1Free_rrlp_SeqOfGANSS_MsrSetElement (OSCTXT *pctxt, 
   rrlp_SeqOfGANSS_MsrSetElement* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSMeasureInfo                                          */
/*                                                            */
/**************************************************************/
/*
 GANSS Measurement Information 

GANSSMeasureInfo ::= SEQUENCE {
   ganssMsrSetList [0] SeqOfGANSS-MsrSetElement
}
*/
typedef struct EXTERN rrlp_GANSSMeasureInfo {
   rrlp_SeqOfGANSS_MsrSetElement ganssMsrSetList;
} rrlp_GANSSMeasureInfo;

EXTERN int asn1PE_rrlp_GANSSMeasureInfo (OSCTXT* pctxt, rrlp_GANSSMeasureInfo* pvalue);

EXTERN int asn1PD_rrlp_GANSSMeasureInfo (OSCTXT* pctxt, rrlp_GANSSMeasureInfo* pvalue);

EXTERN void asn1Free_rrlp_GANSSMeasureInfo (OSCTXT *pctxt, 
   rrlp_GANSSMeasureInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  Rel_7_MsrPosition_Rsp_Extension                           */
/*                                                            */
/**************************************************************/
/*
 If a bit is clear in the eventOccured field it indicates that no known errors have occured since 
 the gpsBeginTime nor is a maneuver planned for the next sixty minutes.
 If a bit is set in the futureEventNoted field it indicates that a maneuver is planned during the
 time period between current time plus sixty minutes and gpsEndTime

Rel-7-MsrPosition-Rsp-Extension ::= SEQUENCE {
   velEstimate [0] VelocityEstimate OPTIONAL,
   ganssLocationInfo [1] GANSSLocationInfo OPTIONAL,
   ganssMeasureInfo [2] GANSSMeasureInfo OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_Rel_7_MsrPosition_Rsp_Extension {
   struct {
      unsigned velEstimatePresent : 1;
      unsigned ganssLocationInfoPresent : 1;
      unsigned ganssMeasureInfoPresent : 1;
   } m;
   rrlp_VelocityEstimate velEstimate;
   rrlp_GANSSLocationInfo ganssLocationInfo;
   rrlp_GANSSMeasureInfo ganssMeasureInfo;
   OSRTDList extElem1;
} rrlp_Rel_7_MsrPosition_Rsp_Extension;

EXTERN int asn1PE_rrlp_Rel_7_MsrPosition_Rsp_Extension (OSCTXT* pctxt, rrlp_Rel_7_MsrPosition_Rsp_Extension* pvalue);

EXTERN int asn1PD_rrlp_Rel_7_MsrPosition_Rsp_Extension (OSCTXT* pctxt, rrlp_Rel_7_MsrPosition_Rsp_Extension* pvalue);

EXTERN void asn1Free_rrlp_Rel_7_MsrPosition_Rsp_Extension (OSCTXT *pctxt, 
   rrlp_Rel_7_MsrPosition_Rsp_Extension* pvalue);

/**************************************************************/
/*                                                            */
/*  MsrPosition_Rsp                                           */
/*                                                            */
/**************************************************************/
/*
 Measurement Position response component

MsrPosition-Rsp ::= SEQUENCE {
   multipleSets [0] MultipleSets OPTIONAL,
   referenceIdentity [1] ReferenceIdentity OPTIONAL,
   otd-MeasureInfo [2] OTD-MeasureInfo OPTIONAL,
   locationInfo [3] LocationInfo OPTIONAL,
   gps-MeasureInfo [4] GPS-MeasureInfo OPTIONAL,
   locationError [5] LocationError OPTIONAL,
   extensionContainer [6] ExtensionContainer OPTIONAL,
   ...,
   rel-98-MsrPosition-Rsp-Extension [7] Rel-98-MsrPosition-Rsp-Extension OPTIONAL,
   rel-5-MsrPosition-Rsp-Extension [8] Rel-5-MsrPosition-Rsp-Extension OPTIONAL,
   rel-7-MsrPosition-Rsp-Extension [9] Rel-7-MsrPosition-Rsp-Extension OPTIONAL
}
*/
typedef struct EXTERN rrlp_MsrPosition_Rsp {
   struct {
      unsigned multipleSetsPresent : 1;
      unsigned referenceIdentityPresent : 1;
      unsigned otd_MeasureInfoPresent : 1;
      unsigned locationInfoPresent : 1;
      unsigned gps_MeasureInfoPresent : 1;
      unsigned locationErrorPresent : 1;
      unsigned extensionContainerPresent : 1;
      unsigned rel_98_MsrPosition_Rsp_ExtensionPresent : 1;
      unsigned rel_5_MsrPosition_Rsp_ExtensionPresent : 1;
      unsigned rel_7_MsrPosition_Rsp_ExtensionPresent : 1;
   } m;
   rrlp_MultipleSets multipleSets;
   rrlp_ReferenceIdentity referenceIdentity;
   rrlp_OTD_MeasureInfo otd_MeasureInfo;
   rrlp_LocationInfo locationInfo;
   rrlp_GPS_MeasureInfo gps_MeasureInfo;
   rrlp_LocationError locationError;
   rrlp_ExtensionContainer extensionContainer;
   rrlp_Rel_98_MsrPosition_Rsp_Extension rel_98_MsrPosition_Rsp_Extension;
   rrlp_Rel_5_MsrPosition_Rsp_Extension rel_5_MsrPosition_Rsp_Extension;
   rrlp_Rel_7_MsrPosition_Rsp_Extension rel_7_MsrPosition_Rsp_Extension;
   OSRTDList extElem1;
} rrlp_MsrPosition_Rsp;

EXTERN int asn1PE_rrlp_MsrPosition_Rsp (OSCTXT* pctxt, rrlp_MsrPosition_Rsp* pvalue);

EXTERN int asn1PD_rrlp_MsrPosition_Rsp (OSCTXT* pctxt, rrlp_MsrPosition_Rsp* pvalue);

EXTERN void asn1Free_rrlp_MsrPosition_Rsp (OSCTXT *pctxt, 
   rrlp_MsrPosition_Rsp* pvalue);

/**************************************************************/
/*                                                            */
/*  MoreAssDataToBeSent                                       */
/*                                                            */
/**************************************************************/
/*
 More Assistance Data To Be Sent IE
 More Assistance Data Components On the Way indication for delivery of an entire set of assistance
 data in multiple Assistance Data components.

MoreAssDataToBeSent ::= ENUMERATED { noMoreMessages(0), moreMessagesOnTheWay(1) }
*/
typedef enum {
   rrlp_MoreAssDataToBeSent_noMoreMessages = 0,
   rrlp_MoreAssDataToBeSent_moreMessagesOnTheWay = 1
} rrlp_MoreAssDataToBeSent_Root;

typedef OSUINT32 rrlp_MoreAssDataToBeSent;

EXTERN int asn1PE_rrlp_MoreAssDataToBeSent (OSCTXT* pctxt, rrlp_MoreAssDataToBeSent value);

EXTERN int asn1PD_rrlp_MoreAssDataToBeSent (OSCTXT* pctxt, rrlp_MoreAssDataToBeSent* pvalue);

/**************************************************************/
/*                                                            */
/*  Rel98_AssistanceData_Extension                            */
/*                                                            */
/**************************************************************/
/*
Rel98-AssistanceData-Extension ::= SEQUENCE {
   rel98-Ext-ExpOTD [0] Rel98-Ext-ExpOTD OPTIONAL,
   ...,
   gpsTimeAssistanceMeasurementRequest [1] NULL OPTIONAL,
   gpsReferenceTimeUncertainty [2] GPSReferenceTimeUncertainty OPTIONAL
}
*/
typedef struct EXTERN rrlp_Rel98_AssistanceData_Extension {
   struct {
      unsigned rel98_Ext_ExpOTDPresent : 1;
      unsigned gpsTimeAssistanceMeasurementRequestPresent : 1;
      unsigned gpsReferenceTimeUncertaintyPresent : 1;
   } m;
   rrlp_Rel98_Ext_ExpOTD rel98_Ext_ExpOTD;
   rrlp_GPSReferenceTimeUncertainty gpsReferenceTimeUncertainty;
   OSRTDList extElem1;
} rrlp_Rel98_AssistanceData_Extension;

EXTERN int asn1PE_rrlp_Rel98_AssistanceData_Extension (OSCTXT* pctxt, rrlp_Rel98_AssistanceData_Extension* pvalue);

EXTERN int asn1PD_rrlp_Rel98_AssistanceData_Extension (OSCTXT* pctxt, rrlp_Rel98_AssistanceData_Extension* pvalue);

EXTERN void asn1Free_rrlp_Rel98_AssistanceData_Extension (OSCTXT *pctxt, 
   rrlp_Rel98_AssistanceData_Extension* pvalue);

/**************************************************************/
/*                                                            */
/*  Rel5_AssistanceData_Extension                             */
/*                                                            */
/**************************************************************/
/*
Rel5-AssistanceData-Extension ::= SEQUENCE {
   extended-reference [0] Extended-reference,
   ...
}
*/
typedef struct EXTERN rrlp_Rel5_AssistanceData_Extension {
   rrlp_Extended_reference extended_reference;
   OSRTDList extElem1;
} rrlp_Rel5_AssistanceData_Extension;

EXTERN int asn1PE_rrlp_Rel5_AssistanceData_Extension (OSCTXT* pctxt, rrlp_Rel5_AssistanceData_Extension* pvalue);

EXTERN int asn1PD_rrlp_Rel5_AssistanceData_Extension (OSCTXT* pctxt, rrlp_Rel5_AssistanceData_Extension* pvalue);

EXTERN void asn1Free_rrlp_Rel5_AssistanceData_Extension (OSCTXT *pctxt, 
   rrlp_Rel5_AssistanceData_Extension* pvalue);

/**************************************************************/
/*                                                            */
/*  Rel7_AssistanceData_Extension                             */
/*                                                            */
/**************************************************************/
/*
Rel7-AssistanceData-Extension ::= SEQUENCE {
   ganss-AssistData [0] GANSS-AssistData OPTIONAL,
   ganssCarrierPhaseMeasurementRequest [1] NULL OPTIONAL,
   ganssTODGSMTimeAssociationMeasurementRequest [2] NULL OPTIONAL,
   add-GPS-AssistData [3] Add-GPS-AssistData OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_Rel7_AssistanceData_Extension {
   struct {
      unsigned ganss_AssistDataPresent : 1;
      unsigned ganssCarrierPhaseMeasurementRequestPresent : 1;
      unsigned ganssTODGSMTimeAssociationMeasurementRequestPresent : 1;
      unsigned add_GPS_AssistDataPresent : 1;
   } m;
   rrlp_GANSS_AssistData ganss_AssistData;
   rrlp_Add_GPS_AssistData add_GPS_AssistData;
   OSRTDList extElem1;
} rrlp_Rel7_AssistanceData_Extension;

EXTERN int asn1PE_rrlp_Rel7_AssistanceData_Extension (OSCTXT* pctxt, rrlp_Rel7_AssistanceData_Extension* pvalue);

EXTERN int asn1PD_rrlp_Rel7_AssistanceData_Extension (OSCTXT* pctxt, rrlp_Rel7_AssistanceData_Extension* pvalue);

EXTERN void asn1Free_rrlp_Rel7_AssistanceData_Extension (OSCTXT *pctxt, 
   rrlp_Rel7_AssistanceData_Extension* pvalue);

/**************************************************************/
/*                                                            */
/*  AssistanceData                                            */
/*                                                            */
/**************************************************************/
/*
 Assistance Data component

AssistanceData ::= SEQUENCE {
   referenceAssistData [0] ReferenceAssistData OPTIONAL,
   msrAssistData [1] MsrAssistData OPTIONAL,
   systemInfoAssistData [2] SystemInfoAssistData OPTIONAL,
   gps-AssistData [3] GPS-AssistData OPTIONAL,
   moreAssDataToBeSent [4] MoreAssDataToBeSent OPTIONAL,
   extensionContainer [5] ExtensionContainer OPTIONAL,
   ...,
   rel98-AssistanceData-Extension [6] Rel98-AssistanceData-Extension OPTIONAL,
   rel5-AssistanceData-Extension [7] Rel5-AssistanceData-Extension OPTIONAL,
   rel7-AssistanceData-Extension [8] Rel7-AssistanceData-Extension OPTIONAL
}
*/
typedef struct EXTERN rrlp_AssistanceData {
   struct {
      unsigned referenceAssistDataPresent : 1;
      unsigned msrAssistDataPresent : 1;
      unsigned systemInfoAssistDataPresent : 1;
      unsigned gps_AssistDataPresent : 1;
      unsigned moreAssDataToBeSentPresent : 1;
      unsigned extensionContainerPresent : 1;
      unsigned rel98_AssistanceData_ExtensionPresent : 1;
      unsigned rel5_AssistanceData_ExtensionPresent : 1;
      unsigned rel7_AssistanceData_ExtensionPresent : 1;
   } m;
   rrlp_ReferenceAssistData referenceAssistData;
   rrlp_MsrAssistData msrAssistData;
   rrlp_SystemInfoAssistData systemInfoAssistData;
   rrlp_GPS_AssistData gps_AssistData;
   rrlp_MoreAssDataToBeSent moreAssDataToBeSent;
   rrlp_ExtensionContainer extensionContainer;
   rrlp_Rel98_AssistanceData_Extension rel98_AssistanceData_Extension;
   rrlp_Rel5_AssistanceData_Extension rel5_AssistanceData_Extension;
   rrlp_Rel7_AssistanceData_Extension rel7_AssistanceData_Extension;
   OSRTDList extElem1;
} rrlp_AssistanceData;

EXTERN int asn1PE_rrlp_AssistanceData (OSCTXT* pctxt, rrlp_AssistanceData* pvalue);

EXTERN int asn1PD_rrlp_AssistanceData (OSCTXT* pctxt, rrlp_AssistanceData* pvalue);

EXTERN void asn1Free_rrlp_AssistanceData (OSCTXT *pctxt, rrlp_AssistanceData* pvalue);

/**************************************************************/
/*                                                            */
/*  ErrorCodes                                                */
/*                                                            */
/**************************************************************/
/*
 Protocol Error Causes

ErrorCodes ::= ENUMERATED { unDefined(0), missingComponet(1), incorrectData(2), missingIEorComponentElement(3), messageTooShort(4), unknowReferenceNumber(5), ... }
*/
typedef enum {
   rrlp_ErrorCodes_unDefined = 0,
   rrlp_ErrorCodes_missingComponet = 1,
   rrlp_ErrorCodes_incorrectData = 2,
   rrlp_ErrorCodes_missingIEorComponentElement = 3,
   rrlp_ErrorCodes_messageTooShort = 4,
   rrlp_ErrorCodes_unknowReferenceNumber = 5
} rrlp_ErrorCodes_Root;

typedef OSUINT32 rrlp_ErrorCodes;

EXTERN int asn1PE_rrlp_ErrorCodes (OSCTXT* pctxt, rrlp_ErrorCodes value);

EXTERN int asn1PD_rrlp_ErrorCodes (OSCTXT* pctxt, rrlp_ErrorCodes* pvalue);

/**************************************************************/
/*                                                            */
/*  Rel_5_ProtocolError_Extension                             */
/*                                                            */
/**************************************************************/
/*
Rel-5-ProtocolError-Extension ::= SEQUENCE {
   extended-reference [0] Extended-reference OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_Rel_5_ProtocolError_Extension {
   struct {
      unsigned extended_referencePresent : 1;
   } m;
   rrlp_Extended_reference extended_reference;
   OSRTDList extElem1;
} rrlp_Rel_5_ProtocolError_Extension;

EXTERN int asn1PE_rrlp_Rel_5_ProtocolError_Extension (OSCTXT* pctxt, rrlp_Rel_5_ProtocolError_Extension* pvalue);

EXTERN int asn1PD_rrlp_Rel_5_ProtocolError_Extension (OSCTXT* pctxt, rrlp_Rel_5_ProtocolError_Extension* pvalue);

EXTERN void asn1Free_rrlp_Rel_5_ProtocolError_Extension (OSCTXT *pctxt, 
   rrlp_Rel_5_ProtocolError_Extension* pvalue);

/**************************************************************/
/*                                                            */
/*  ProtocolError                                             */
/*                                                            */
/**************************************************************/
/*
 Protocol Error component

ProtocolError ::= SEQUENCE {
   errorCause [0] ErrorCodes,
   extensionContainer [1] ExtensionContainer OPTIONAL,
   ...,
   rel-5-ProtocolError-Extension [2] Rel-5-ProtocolError-Extension OPTIONAL
}
*/
typedef struct EXTERN rrlp_ProtocolError {
   struct {
      unsigned extensionContainerPresent : 1;
      unsigned rel_5_ProtocolError_ExtensionPresent : 1;
   } m;
   rrlp_ErrorCodes errorCause;
   rrlp_ExtensionContainer extensionContainer;
   rrlp_Rel_5_ProtocolError_Extension rel_5_ProtocolError_Extension;
   OSRTDList extElem1;
} rrlp_ProtocolError;

EXTERN int asn1PE_rrlp_ProtocolError (OSCTXT* pctxt, rrlp_ProtocolError* pvalue);

EXTERN int asn1PD_rrlp_ProtocolError (OSCTXT* pctxt, rrlp_ProtocolError* pvalue);

EXTERN void asn1Free_rrlp_ProtocolError (OSCTXT *pctxt, rrlp_ProtocolError* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSPositioningMethodTypes                               */
/*                                                            */
/**************************************************************/
/*
GANSSPositioningMethodTypes ::= BIT STRING  { msAssisted(0), msBased(1), standalone(2) } (SIZE (1..8))
*/
/* Named bit constants */

#define rrlp_GANSSPositioningMethodTypes_rrlp_msAssisted                 0
#define rrlp_GANSSPositioningMethodTypes_rrlp_msBased                    1
#define rrlp_GANSSPositioningMethodTypes_rrlp_standalone                 2

typedef struct rrlp_GANSSPositioningMethodTypes {
   OSUINT32 numbits;
   OSOCTET data[1];
} rrlp_GANSSPositioningMethodTypes;

EXTERN int asn1PE_rrlp_GANSSPositioningMethodTypes (OSCTXT* pctxt, rrlp_GANSSPositioningMethodTypes* pvalue);

EXTERN int asn1PD_rrlp_GANSSPositioningMethodTypes (OSCTXT* pctxt, rrlp_GANSSPositioningMethodTypes* pvalue);

/**************************************************************/
/*                                                            */
/*  SBASID                                                    */
/*                                                            */
/**************************************************************/
/*
SBASID ::= BIT STRING  { waas(0), egnos(1), masas(2), gagan(3) } (SIZE (1..8))
*/
/* Named bit constants */

#define rrlp_SBASID_rrlp_waas                       0
#define rrlp_SBASID_rrlp_egnos                      1
#define rrlp_SBASID_rrlp_masas                      2
#define rrlp_SBASID_rrlp_gagan                      3

typedef struct rrlp_SBASID {
   OSUINT32 numbits;
   OSOCTET data[1];
} rrlp_SBASID;

EXTERN int asn1PE_rrlp_SBASID (OSCTXT* pctxt, rrlp_SBASID* pvalue);

EXTERN int asn1PD_rrlp_SBASID (OSCTXT* pctxt, rrlp_SBASID* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSPositionMethod                                       */
/*                                                            */
/**************************************************************/
/*
GANSSPositionMethod ::= SEQUENCE {
   ganssID [0] INTEGER (0..7) OPTIONAL,
   gANSSPositioningMethodTypes [1] GANSSPositioningMethodTypes OPTIONAL,
   gANSSSignals [2] GANSSSignals,
   ...,
   sbasID [3] SBASID OPTIONAL
}
*/
typedef struct EXTERN rrlp_GANSSPositionMethod {
   struct {
      unsigned ganssIDPresent : 1;
      unsigned gANSSPositioningMethodTypesPresent : 1;
      unsigned sbasIDPresent : 1;
   } m;
   OSUINT8 ganssID;
   rrlp_GANSSPositioningMethodTypes gANSSPositioningMethodTypes;
   rrlp_GANSSSignals gANSSSignals;
   rrlp_SBASID sbasID;
   OSRTDList extElem1;
} rrlp_GANSSPositionMethod;

EXTERN int asn1PE_rrlp_GANSSPositionMethod (OSCTXT* pctxt, rrlp_GANSSPositionMethod* pvalue);

EXTERN int asn1PD_rrlp_GANSSPositionMethod (OSCTXT* pctxt, rrlp_GANSSPositionMethod* pvalue);

EXTERN void asn1Free_rrlp_GANSSPositionMethod (OSCTXT *pctxt, 
   rrlp_GANSSPositionMethod* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSPositionMethods                                      */
/*                                                            */
/**************************************************************/
/*
GANSSPositionMethods ::= SEQUENCE (SIZE (1..16)) OF GANSSPositionMethod
*/
typedef struct EXTERN rrlp_GANSSPositionMethods {
   OSUINT32 n;
   rrlp_GANSSPositionMethod *elem;
} rrlp_GANSSPositionMethods;

EXTERN int asn1PE_rrlp_GANSSPositionMethods (OSCTXT* pctxt, rrlp_GANSSPositionMethods* pvalue);

EXTERN int asn1PD_rrlp_GANSSPositionMethods (OSCTXT* pctxt, rrlp_GANSSPositionMethods* pvalue);

EXTERN void asn1Free_rrlp_GANSSPositionMethods (OSCTXT *pctxt, 
   rrlp_GANSSPositionMethods* pvalue);

/**************************************************************/
/*                                                            */
/*  PosCapability_Req                                         */
/*                                                            */
/**************************************************************/
/*
 Positioning Capability request component

PosCapability-Req ::= SEQUENCE {
   extended-reference [0] Extended-reference,
   gANSSPositionMethods [1] GANSSPositionMethods OPTIONAL,
   extensionContainer [2] ExtensionContainer OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_PosCapability_Req {
   struct {
      unsigned gANSSPositionMethodsPresent : 1;
      unsigned extensionContainerPresent : 1;
   } m;
   rrlp_Extended_reference extended_reference;
   rrlp_GANSSPositionMethods gANSSPositionMethods;
   rrlp_ExtensionContainer extensionContainer;
   OSRTDList extElem1;
} rrlp_PosCapability_Req;

EXTERN int asn1PE_rrlp_PosCapability_Req (OSCTXT* pctxt, rrlp_PosCapability_Req* pvalue);

EXTERN int asn1PD_rrlp_PosCapability_Req (OSCTXT* pctxt, rrlp_PosCapability_Req* pvalue);

EXTERN void asn1Free_rrlp_PosCapability_Req (OSCTXT *pctxt, 
   rrlp_PosCapability_Req* pvalue);

/**************************************************************/
/*                                                            */
/*  NonGANSSPositionMethods                                   */
/*                                                            */
/**************************************************************/
/*
NonGANSSPositionMethods ::= BIT STRING  { msAssistedEOTD(0), msBasedEOTD(1), msAssistedGPS(2), msBasedGPS(3), standaloneGPS(4) } (SIZE (1..16))
*/
/* Named bit constants */

#define rrlp_NonGANSSPositionMethods_rrlp_msAssistedEOTD             0
#define rrlp_NonGANSSPositionMethods_rrlp_msBasedEOTD                1
#define rrlp_NonGANSSPositionMethods_rrlp_msAssistedGPS              2
#define rrlp_NonGANSSPositionMethods_rrlp_msBasedGPS                 3
#define rrlp_NonGANSSPositionMethods_rrlp_standaloneGPS              4

typedef struct rrlp_NonGANSSPositionMethods {
   OSUINT32 numbits;
   OSOCTET data[2];
} rrlp_NonGANSSPositionMethods;

EXTERN int asn1PE_rrlp_NonGANSSPositionMethods (OSCTXT* pctxt, rrlp_NonGANSSPositionMethods* pvalue);

EXTERN int asn1PD_rrlp_NonGANSSPositionMethods (OSCTXT* pctxt, rrlp_NonGANSSPositionMethods* pvalue);

/**************************************************************/
/*                                                            */
/*  MultipleMeasurementSets                                   */
/*                                                            */
/**************************************************************/
/*
 indicates MS support of multiple measurement sets for MS assisted position methods

MultipleMeasurementSets ::= BIT STRING  { eotd(0), gps(1), ganss(2) } (SIZE (1..8))
*/
/* Named bit constants */

#define rrlp_MultipleMeasurementSets_rrlp_eotd                       0
#define rrlp_MultipleMeasurementSets_rrlp_gps_2                      1
#define rrlp_MultipleMeasurementSets_rrlp_ganss                      2

typedef struct rrlp_MultipleMeasurementSets {
   OSUINT32 numbits;
   OSOCTET data[1];
} rrlp_MultipleMeasurementSets;

EXTERN int asn1PE_rrlp_MultipleMeasurementSets (OSCTXT* pctxt, rrlp_MultipleMeasurementSets* pvalue);

EXTERN int asn1PD_rrlp_MultipleMeasurementSets (OSCTXT* pctxt, rrlp_MultipleMeasurementSets* pvalue);

/**************************************************************/
/*                                                            */
/*  PosCapabilities                                           */
/*                                                            */
/**************************************************************/
/*
 Rel-7 Positioning Capability parameters here

PosCapabilities ::= SEQUENCE {
   nonGANSSpositionMethods [0] NonGANSSPositionMethods OPTIONAL,
   gANSSPositionMethods [1] GANSSPositionMethods OPTIONAL,
   multipleMeasurementSets [2] MultipleMeasurementSets OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_PosCapabilities {
   struct {
      unsigned nonGANSSpositionMethodsPresent : 1;
      unsigned gANSSPositionMethodsPresent : 1;
      unsigned multipleMeasurementSetsPresent : 1;
   } m;
   rrlp_NonGANSSPositionMethods nonGANSSpositionMethods;
   rrlp_GANSSPositionMethods gANSSPositionMethods;
   rrlp_MultipleMeasurementSets multipleMeasurementSets;
   OSRTDList extElem1;
} rrlp_PosCapabilities;

EXTERN int asn1PE_rrlp_PosCapabilities (OSCTXT* pctxt, rrlp_PosCapabilities* pvalue);

EXTERN int asn1PD_rrlp_PosCapabilities (OSCTXT* pctxt, rrlp_PosCapabilities* pvalue);

EXTERN void asn1Free_rrlp_PosCapabilities (OSCTXT *pctxt, 
   rrlp_PosCapabilities* pvalue);

/**************************************************************/
/*                                                            */
/*  GPSAssistance                                             */
/*                                                            */
/**************************************************************/
/*
 GPS assistance data supported

GPSAssistance ::= BIT STRING  { almanac(0), uTCmodel(1), ionosphericModel(2), navigationmodel(3), dGPScorrections(4), referenceLocation(5), referenceTime(6), acquisitionAssistance(7), realTimeIntegrity(8), ephemerisExtension(9), ephemerisExtensionCheck(10) } (SIZE (1..16))
*/
/* Named bit constants */

#define rrlp_GPSAssistance_rrlp_almanac                    0
#define rrlp_GPSAssistance_rrlp_uTCmodel                   1
#define rrlp_GPSAssistance_rrlp_ionosphericModel           2
#define rrlp_GPSAssistance_rrlp_navigationmodel            3
#define rrlp_GPSAssistance_rrlp_dGPScorrections            4
#define rrlp_GPSAssistance_rrlp_referenceLocation          5
#define rrlp_GPSAssistance_rrlp_referenceTime              6
#define rrlp_GPSAssistance_rrlp_acquisitionAssistance      7
#define rrlp_GPSAssistance_rrlp_realTimeIntegrity          8
#define rrlp_GPSAssistance_rrlp_ephemerisExtension         9
#define rrlp_GPSAssistance_rrlp_ephemerisExtensionCheck    10

typedef struct rrlp_GPSAssistance {
   OSUINT32 numbits;
   OSOCTET data[2];
} rrlp_GPSAssistance;

EXTERN int asn1PE_rrlp_GPSAssistance (OSCTXT* pctxt, rrlp_GPSAssistance* pvalue);

EXTERN int asn1PD_rrlp_GPSAssistance (OSCTXT* pctxt, rrlp_GPSAssistance* pvalue);

/**************************************************************/
/*                                                            */
/*  CommonGANSSAssistance                                     */
/*                                                            */
/**************************************************************/
/*
 Common GANSS assistance data supported

CommonGANSSAssistance ::= BIT STRING  { referenceTime(0), referenceLocation(1), ionosphericModel(3), addIonosphericModel(4), earthOrientationParam(5) } (SIZE (1..8))
*/
/* Named bit constants */

#define rrlp_CommonGANSSAssistance_rrlp_referenceTime_1            0
#define rrlp_CommonGANSSAssistance_rrlp_referenceLocation_1        1
#define rrlp_CommonGANSSAssistance_rrlp_ionosphericModel_1         3
#define rrlp_CommonGANSSAssistance_rrlp_addIonosphericModel        4
#define rrlp_CommonGANSSAssistance_rrlp_earthOrientationParam      5

typedef struct rrlp_CommonGANSSAssistance {
   OSUINT32 numbits;
   OSOCTET data[1];
} rrlp_CommonGANSSAssistance;

EXTERN int asn1PE_rrlp_CommonGANSSAssistance (OSCTXT* pctxt, rrlp_CommonGANSSAssistance* pvalue);

EXTERN int asn1PD_rrlp_CommonGANSSAssistance (OSCTXT* pctxt, rrlp_CommonGANSSAssistance* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSAssistance                                           */
/*                                                            */
/**************************************************************/
/*
 specific GANSS assistance data supported

GANSSAssistance ::= BIT STRING  { realTimeIntegrity(0), differentialCorrections(1), almanac(2), referenceMeasurementInformation(3), navigationModel(4), timeModelGNSS-UTC(5), timeModelGNSS-GNSS(6), databitassistance(7), ephemerisExtension(8), ephemerisExtensionCheck(9), addUTCmodel(10), auxiliaryInformation(11) } (SIZE (1..16))
*/
/* Named bit constants */

#define rrlp_GANSSAssistance_rrlp_realTimeIntegrity_1        0
#define rrlp_GANSSAssistance_rrlp_differentialCorrections    1
#define rrlp_GANSSAssistance_rrlp_almanac_1                  2
#define rrlp_GANSSAssistance_rrlp_referenceMeasurementInformation 3
#define rrlp_GANSSAssistance_rrlp_navigationModel            4
#define rrlp_GANSSAssistance_rrlp_timeModelGNSS_UTC          5
#define rrlp_GANSSAssistance_rrlp_timeModelGNSS_GNSS         6
#define rrlp_GANSSAssistance_rrlp_databitassistance          7
#define rrlp_GANSSAssistance_rrlp_ephemerisExtension_1       8
#define rrlp_GANSSAssistance_rrlp_ephemerisExtensionCheck_1  9
#define rrlp_GANSSAssistance_rrlp_addUTCmodel                10
#define rrlp_GANSSAssistance_rrlp_auxiliaryInformation       11

typedef struct rrlp_GANSSAssistance {
   OSUINT32 numbits;
   OSOCTET data[2];
} rrlp_GANSSAssistance;

EXTERN int asn1PE_rrlp_GANSSAssistance (OSCTXT* pctxt, rrlp_GANSSAssistance* pvalue);

EXTERN int asn1PD_rrlp_GANSSAssistance (OSCTXT* pctxt, rrlp_GANSSAssistance* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSAssistanceForOneGANSS                                */
/*                                                            */
/**************************************************************/
/*
 assistance data supported for a particular GANSS system

GANSSAssistanceForOneGANSS ::= SEQUENCE {
   ganssID [0] INTEGER (0..7) OPTIONAL,
   gANSSAssistance [1] GANSSAssistance,
   ...
}
*/
typedef struct EXTERN rrlp_GANSSAssistanceForOneGANSS {
   struct {
      unsigned ganssIDPresent : 1;
   } m;
   OSUINT8 ganssID;
   rrlp_GANSSAssistance gANSSAssistance;
   OSRTDList extElem1;
} rrlp_GANSSAssistanceForOneGANSS;

EXTERN int asn1PE_rrlp_GANSSAssistanceForOneGANSS (OSCTXT* pctxt, rrlp_GANSSAssistanceForOneGANSS* pvalue);

EXTERN int asn1PD_rrlp_GANSSAssistanceForOneGANSS (OSCTXT* pctxt, rrlp_GANSSAssistanceForOneGANSS* pvalue);

EXTERN void asn1Free_rrlp_GANSSAssistanceForOneGANSS (OSCTXT *pctxt, 
   rrlp_GANSSAssistanceForOneGANSS* pvalue);

/**************************************************************/
/*                                                            */
/*  SpecificGANSSAssistance                                   */
/*                                                            */
/**************************************************************/
/*
SpecificGANSSAssistance ::= SEQUENCE (SIZE (1..16)) OF GANSSAssistanceForOneGANSS
*/
typedef struct EXTERN rrlp_SpecificGANSSAssistance {
   OSUINT32 n;
   rrlp_GANSSAssistanceForOneGANSS *elem;
} rrlp_SpecificGANSSAssistance;

EXTERN int asn1PE_rrlp_SpecificGANSSAssistance (OSCTXT* pctxt, rrlp_SpecificGANSSAssistance* pvalue);

EXTERN int asn1PD_rrlp_SpecificGANSSAssistance (OSCTXT* pctxt, rrlp_SpecificGANSSAssistance* pvalue);

EXTERN void asn1Free_rrlp_SpecificGANSSAssistance (OSCTXT *pctxt, 
   rrlp_SpecificGANSSAssistance* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSAssistanceSet                                        */
/*                                                            */
/**************************************************************/
/*
 GANSS assistance data supported

GANSSAssistanceSet ::= SEQUENCE {
   commonGANSSAssistance [0] CommonGANSSAssistance,
   specificGANSSAssistance [1] SpecificGANSSAssistance,
   ...
}
*/
typedef struct EXTERN rrlp_GANSSAssistanceSet {
   rrlp_CommonGANSSAssistance commonGANSSAssistance;
   rrlp_SpecificGANSSAssistance specificGANSSAssistance;
   OSRTDList extElem1;
} rrlp_GANSSAssistanceSet;

EXTERN int asn1PE_rrlp_GANSSAssistanceSet (OSCTXT* pctxt, rrlp_GANSSAssistanceSet* pvalue);

EXTERN int asn1PD_rrlp_GANSSAssistanceSet (OSCTXT* pctxt, rrlp_GANSSAssistanceSet* pvalue);

EXTERN void asn1Free_rrlp_GANSSAssistanceSet (OSCTXT *pctxt, 
   rrlp_GANSSAssistanceSet* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSModelID                                              */
/*                                                            */
/**************************************************************/
/*
GANSSModelID ::= BIT STRING  { model1(0), model2(1), model3(2), model4(3), model5(4), model6(5), model7(6), model8(7) } (SIZE (1..8))
*/
/* Named bit constants */

#define rrlp_GANSSModelID_rrlp_model1                     0
#define rrlp_GANSSModelID_rrlp_model2                     1
#define rrlp_GANSSModelID_rrlp_model3                     2
#define rrlp_GANSSModelID_rrlp_model4                     3
#define rrlp_GANSSModelID_rrlp_model5                     4
#define rrlp_GANSSModelID_rrlp_model6                     5
#define rrlp_GANSSModelID_rrlp_model7                     6
#define rrlp_GANSSModelID_rrlp_model8                     7

typedef struct rrlp_GANSSModelID {
   OSUINT32 numbits;
   OSOCTET data[1];
} rrlp_GANSSModelID;

EXTERN int asn1PE_rrlp_GANSSModelID (OSCTXT* pctxt, rrlp_GANSSModelID* pvalue);

EXTERN int asn1PD_rrlp_GANSSModelID (OSCTXT* pctxt, rrlp_GANSSModelID* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSAdditionalAssistanceChoicesForOneGANSS               */
/*                                                            */
/**************************************************************/
/*
GANSSAdditionalAssistanceChoicesForOneGANSS ::= SEQUENCE {
   ganssID [0] INTEGER (0..7) OPTIONAL,
   ganssClockModelChoice [1] GANSSModelID OPTIONAL,
   gannsOrbitModelChoice [2] GANSSModelID OPTIONAL,
   ganssAlmanacModelChoice [3] GANSSModelID OPTIONAL,
   ganssAdditionalUTCModelChoice [4] GANSSModelID OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_GANSSAdditionalAssistanceChoicesForOneGANSS {
   struct {
      unsigned ganssIDPresent : 1;
      unsigned ganssClockModelChoicePresent : 1;
      unsigned gannsOrbitModelChoicePresent : 1;
      unsigned ganssAlmanacModelChoicePresent : 1;
      unsigned ganssAdditionalUTCModelChoicePresent : 1;
   } m;
   OSUINT8 ganssID;
   rrlp_GANSSModelID ganssClockModelChoice;
   rrlp_GANSSModelID gannsOrbitModelChoice;
   rrlp_GANSSModelID ganssAlmanacModelChoice;
   rrlp_GANSSModelID ganssAdditionalUTCModelChoice;
   OSRTDList extElem1;
} rrlp_GANSSAdditionalAssistanceChoicesForOneGANSS;

EXTERN int asn1PE_rrlp_GANSSAdditionalAssistanceChoicesForOneGANSS (OSCTXT* pctxt, rrlp_GANSSAdditionalAssistanceChoicesForOneGANSS* pvalue);

EXTERN int asn1PD_rrlp_GANSSAdditionalAssistanceChoicesForOneGANSS (OSCTXT* pctxt, rrlp_GANSSAdditionalAssistanceChoicesForOneGANSS* pvalue);

EXTERN void asn1Free_rrlp_GANSSAdditionalAssistanceChoicesForOneGANSS (OSCTXT *pctxt, 
   rrlp_GANSSAdditionalAssistanceChoicesForOneGANSS* pvalue);

/**************************************************************/
/*                                                            */
/*  GANSSAdditionalAssistanceChoices                          */
/*                                                            */
/**************************************************************/
/*
GANSSAdditionalAssistanceChoices ::= SEQUENCE (SIZE (1..16)) OF GANSSAdditionalAssistanceChoicesForOneGANSS
*/
typedef struct EXTERN rrlp_GANSSAdditionalAssistanceChoices {
   OSUINT32 n;
   rrlp_GANSSAdditionalAssistanceChoicesForOneGANSS *elem;
} rrlp_GANSSAdditionalAssistanceChoices;

EXTERN int asn1PE_rrlp_GANSSAdditionalAssistanceChoices (OSCTXT* pctxt, rrlp_GANSSAdditionalAssistanceChoices* pvalue);

EXTERN int asn1PD_rrlp_GANSSAdditionalAssistanceChoices (OSCTXT* pctxt, rrlp_GANSSAdditionalAssistanceChoices* pvalue);

EXTERN void asn1Free_rrlp_GANSSAdditionalAssistanceChoices (OSCTXT *pctxt, 
   rrlp_GANSSAdditionalAssistanceChoices* pvalue);

/**************************************************************/
/*                                                            */
/*  AssistanceSupported                                       */
/*                                                            */
/**************************************************************/
/*
 indicates MS support of different types of assistance data

AssistanceSupported ::= SEQUENCE {
   gpsAssistance [0] GPSAssistance OPTIONAL,
   gANSSAssistanceSet [1] GANSSAssistanceSet OPTIONAL,
   ...,
   gANSSAdditionalAssistanceChoices [2] GANSSAdditionalAssistanceChoices OPTIONAL
}
*/
typedef struct EXTERN rrlp_AssistanceSupported {
   struct {
      unsigned gpsAssistancePresent : 1;
      unsigned gANSSAssistanceSetPresent : 1;
      unsigned gANSSAdditionalAssistanceChoicesPresent : 1;
   } m;
   rrlp_GPSAssistance gpsAssistance;
   rrlp_GANSSAssistanceSet gANSSAssistanceSet;
   rrlp_GANSSAdditionalAssistanceChoices gANSSAdditionalAssistanceChoices;
   OSRTDList extElem1;
} rrlp_AssistanceSupported;

EXTERN int asn1PE_rrlp_AssistanceSupported (OSCTXT* pctxt, rrlp_AssistanceSupported* pvalue);

EXTERN int asn1PD_rrlp_AssistanceSupported (OSCTXT* pctxt, rrlp_AssistanceSupported* pvalue);

EXTERN void asn1Free_rrlp_AssistanceSupported (OSCTXT *pctxt, 
   rrlp_AssistanceSupported* pvalue);

/**************************************************************/
/*                                                            */
/*  AssistanceNeeded                                          */
/*                                                            */
/**************************************************************/
/*
 indicates assistance data that may be needed by the MS

AssistanceNeeded ::= SEQUENCE {
   gpsAssistanceData [0] GPSAssistanceData OPTIONAL,
   ganssAssistanceData [1] GANSSAssistanceData OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_AssistanceNeeded {
   struct {
      unsigned gpsAssistanceDataPresent : 1;
      unsigned ganssAssistanceDataPresent : 1;
   } m;
   rrlp_GPSAssistanceData gpsAssistanceData;
   rrlp_GANSSAssistanceData ganssAssistanceData;
   OSRTDList extElem1;
} rrlp_AssistanceNeeded;

EXTERN int asn1PE_rrlp_AssistanceNeeded (OSCTXT* pctxt, rrlp_AssistanceNeeded* pvalue);

EXTERN int asn1PD_rrlp_AssistanceNeeded (OSCTXT* pctxt, rrlp_AssistanceNeeded* pvalue);

EXTERN void asn1Free_rrlp_AssistanceNeeded (OSCTXT *pctxt, 
   rrlp_AssistanceNeeded* pvalue);

/**************************************************************/
/*                                                            */
/*  PosCapability_Rsp                                         */
/*                                                            */
/**************************************************************/
/*
 Positioning Capability response component

PosCapability-Rsp ::= SEQUENCE {
   extended-reference [0] Extended-reference,
   posCapabilities [1] PosCapabilities,
   assistanceSupported [2] AssistanceSupported OPTIONAL,
   assistanceNeeded [3] AssistanceNeeded OPTIONAL,
   extensionContainer [4] ExtensionContainer OPTIONAL,
   ...
}
*/
typedef struct EXTERN rrlp_PosCapability_Rsp {
   struct {
      unsigned assistanceSupportedPresent : 1;
      unsigned assistanceNeededPresent : 1;
      unsigned extensionContainerPresent : 1;
   } m;
   rrlp_Extended_reference extended_reference;
   rrlp_PosCapabilities posCapabilities;
   rrlp_AssistanceSupported assistanceSupported;
   rrlp_AssistanceNeeded assistanceNeeded;
   rrlp_ExtensionContainer extensionContainer;
   OSRTDList extElem1;
} rrlp_PosCapability_Rsp;

EXTERN int asn1PE_rrlp_PosCapability_Rsp (OSCTXT* pctxt, rrlp_PosCapability_Rsp* pvalue);

EXTERN int asn1PD_rrlp_PosCapability_Rsp (OSCTXT* pctxt, rrlp_PosCapability_Rsp* pvalue);

EXTERN void asn1Free_rrlp_PosCapability_Rsp (OSCTXT *pctxt, 
   rrlp_PosCapability_Rsp* pvalue);

/* Value definitions */

#define ASN1V_maxGPSAssistanceData 40
#define ASN1V_maxGANSSAssistanceData 40

/**
 * Header file for ASN.1 module RRLP-Messages
 */
/**************************************************************/
/*                                                            */
/*  RRLP_Component                                            */
/*                                                            */
/**************************************************************/
/*
RRLP-Component ::= CHOICE {
   msrPositionReq [0] MsrPosition-Req,
   msrPositionRsp [1] MsrPosition-Rsp,
   assistanceData [2] AssistanceData,
   assistanceDataAck [3] NULL,
   protocolError [4] ProtocolError,
   ...,
   posCapabilityReq [5] PosCapability-Req,
   posCapabilityRsp [6] PosCapability-Rsp
}
*/
/* Choice tag constants */

#define T_RRLP_Component_msrPositionReq 1
#define T_RRLP_Component_msrPositionRsp 2
#define T_RRLP_Component_assistanceData 3
#define T_RRLP_Component_assistanceDataAck 4
#define T_RRLP_Component_protocolError  5
#define T_RRLP_Component_posCapabilityReq 6
#define T_RRLP_Component_posCapabilityRsp 7
#define T_RRLP_Component_extElem1       8

typedef struct EXTERN RRLP_Component {
   OSUINT32 t;
   union {
      /* t = 1 */
      rrlp_MsrPosition_Req *msrPositionReq;
      /* t = 2 */
      rrlp_MsrPosition_Rsp *msrPositionRsp;
      /* t = 3 */
      rrlp_AssistanceData *assistanceData;
      /* t = 4 */
      /* t = 5 */
      rrlp_ProtocolError *protocolError;
      /* t = 6 */
      rrlp_PosCapability_Req *posCapabilityReq;
      /* t = 7 */
      rrlp_PosCapability_Rsp *posCapabilityRsp;
      /* t = 8 */
      ASN1OpenType *extElem1;
   } u;
} RRLP_Component;

EXTERN int asn1PE_RRLP_Component (OSCTXT* pctxt, RRLP_Component* pvalue);

EXTERN int asn1PD_RRLP_Component (OSCTXT* pctxt, RRLP_Component* pvalue);

EXTERN void asn1Free_RRLP_Component (OSCTXT *pctxt, RRLP_Component* pvalue);

/**************************************************************/
/*                                                            */
/*  PDU                                                       */
/*                                                            */
/**************************************************************/
/*
PDU ::= SEQUENCE {
   referenceNumber [0] INTEGER (0..7),
   component [1] RRLP-Component
}
*/
typedef struct EXTERN PDU {
   OSUINT8 referenceNumber;
   RRLP_Component component;
} PDU;

EXTERN int asn1PE_PDU (OSCTXT* pctxt, PDU* pvalue);

EXTERN int asn1PD_PDU (OSCTXT* pctxt, PDU* pvalue);

EXTERN void asn1Free_PDU (OSCTXT *pctxt, PDU* pvalue);

#ifdef __cplusplus
}
#endif

#endif
