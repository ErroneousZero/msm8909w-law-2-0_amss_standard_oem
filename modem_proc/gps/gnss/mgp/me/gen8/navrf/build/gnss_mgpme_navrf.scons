# -------------------------------------------------------------------------------- #
#                         G N S S _ M G P M E _ N A V R F . S C O N S
#
# DESCRIPTION
#   SCons file for the whole MGP subsystem. Defines the existence of MGP subsystem.
#
#
# INITIALIZATION AND SEQUENCING REQUIREMENTS
#   None.
#
#
#  Copyright (c) 2014-2015 Qualcomm Atheros, Inc.
#  Qualcomm Atheros Confidential and Proprietary. All Rights Reserved.
#  Copyright (c) 2015-2016 Qualcomm Technologies, Inc. 
#  All Rights Reserved.
#  Confidential and Proprietary - Qualcomm Technologies, Inc.
#
# All Rights Reserved. Qualcomm Confidential and Proprietary
# Export of this technology or software is regulated by the U.S. Government.
# Diversion contrary to U.S. law prohibited.
#
# All ideas, data and information contained in or disclosed by
# this document are confidential and proprietary information of
# Qualcomm Technologies Incorporated and all rights therein are expressly reserved.
# By accepting this material the recipient agrees that this material
# and the information contained therein are held in confidence and in
# trust and will not be used, copied, reproduced in whole or in part,
# nor its contents revealed in any manner to others without the express
# written permission of Qualcomm Technologies Incorporated.
#
# $Header: //commercial/MPSS.JO.2.0.c1.4/Main/modem_proc/gps/gnss/mgp/me/gen8/navrf/build/gnss_mgpme_navrf.scons#1 $
# $DateTime: 2016/12/13 07:59:45 $
# --------------------------------------------------------------------------------- #

#--------------------------------------------------------------------------------
# Import the SCons environment
#--------------------------------------------------------------------------------
Import('env')
    
#-------------------------------------------------------------------------------
# Publish these private APIs for the rest of Nav RF
#------------------------------------------------------------------------------- 
env.PublishPrivateApi('NAVRF', ['${GPS_ROOT}/gnss/mgp/me/gen8/navrf/common/inc',
                                '${GPS_ROOT}/gnss/mgp/me/gen8/navrf/chipset/inc',
                                '${GPS_ROOT}/gnss/mgp/me/gen8/navrf/device/inc',
                               ])

#-------------------------------------------------------------------------------
# Configure GNSS ADC header file for NAVRF API
#------------------------------------------------------------------------------- 
if env['CHIPSET'] in ['msm8x10',
                      'msm8x26',
                      'msm8926',
                      'msm8962',
                     ]:
    env.PublishPrivateApi('NAVRF', ['${GPS_ROOT}/gnss/mgp/me/gen8/navrf/adc/waverider/inc'])
elif env['CHIPSET'] in ['apq8094',
                        'msm8994',
                        'mdm9x35',
                        'mdm9x45',
                        'mdm9x55',  # Gen9 Target - Gen8C support is for RUMI
                       ]:
    env.PublishPrivateApi('NAVRF', ['${GPS_ROOT}/gnss/mgp/me/gen8/navrf/adc/sinope/inc'])
elif env['CHIPSET'] in ['msm8974',
                        'mdm9x25',
                       ]:
    env.PublishPrivateApi('NAVRF', ['${GPS_ROOT}/gnss/mgp/me/gen8/navrf/adc/elara/inc'])
elif env['CHIPSET'] in ['msm8916',
                       ]:
    env.PublishPrivateApi('NAVRF', ['${GPS_ROOT}/gnss/mgp/me/gen8/navrf/adc/helike/inc'])
elif env['CHIPSET'] in ['msm8936',
                        'msm8939',
                        'msm8952',
                        'mdm9609',
                        'mdm9607',
                        'msm8909',
                        'msm8937',
						'msm8940',
                       ]:
    env.PublishPrivateApi('NAVRF', ['${GPS_ROOT}/gnss/mgp/me/gen8/navrf/adc/helike2/inc'])
elif env['CHIPSET'] in [
                        'msm8976',
                       ]:
    env.PublishPrivateApi('NAVRF', ['${GPS_ROOT}/gnss/mgp/me/gen8/navrf/adc/helike3/inc'])
elif env['CHIPSET'] in ['msm8996',
                        'msm8953',
                       ]:
    env.PublishPrivateApi('NAVRF', ['${GPS_ROOT}/gnss/mgp/me/gen8/navrf/adc/sinope14/inc'])

if 'USES_GNSS_SA' in env:
    env.PublishPrivateApi('NAVRF', ['${GPS_ROOT}/gnss/mgp/me/gen8/navrf/stubs/inc'])

env.RequirePrivateApi('NAVRF')

#--------------------------------------------------------------------------------
# Explicitly remove all source files from the NavRF folders
#--------------------------------------------------------------------------------   
env.CleanPack("CLEANPACK_TARGET", env.FindFiles('*.c', '..'))
env.CleanPack("CLEANPACK_TARGET", env.FindFiles('*.h', '..'))

env.LoadSoftwareUnits()
