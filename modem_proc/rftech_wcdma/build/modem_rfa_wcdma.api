#r===============================================================================
#
#
# GENERAL DESCRIPTION
#
# Copyright (c) 2011-2014 Qualcomm Technologies, Inc. All Rights Reserved
#
# Qualcomm Technologies Proprietary
#
# Export of this technology or software is regulated by the U.S. Government.
# Diversion contrary to U.S. law prohibited.
#
# All ideas, data and information contained in or disclosed by
# this document are confidential and proprietary information of
# Qualcomm Technologies, Inc and all rights therein are expressly reserved.
# By accepting this material the recipient agrees that this material
# and the information contained therein are held in confidence and in
# trust and will not be used, copied, reproduced in whole or in part,
# nor its contents revealed in any manner to others without the express
# written permission of Qualcomm Technologies, Inc.
#
#-------------------------------------------------------------------------------
#
# $Header: //commercial/MPSS.JO.2.0.c1.4/Main/modem_proc/rftech_wcdma/build/modem_rfa_wcdma.api#1 $
# $DateTime: 2016/12/13 07:59:54 $ 
#
#                      EDIT HISTORY FOR FILE
#                      
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#  
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 10/16/14   dej     Clean-up SCons and add support for TABASCO
# 06/02/14   dr      Adding support for JOLOKIA
# 02/07/14   aa      Importing dimePM HAL APIs
# 07/17/13   aro     Exported WCDMA API to be used by RFA
# 05/14/13   ra      Added support for Bolt
# 02/13/13   vb      Support for new tuner manager in WCDMA
# 02/04/13   dej     Branch MSM layer to RFMODEM component(s)
# 01/31/13    ka     Added path for off-target to compile
# 12/05/12   sar     Created
#===============================================================================

Import('env')

if env.PathExists('${INC_ROOT}/rfa'):
    env.Replace(RF_ROOT = '${INC_ROOT}/rfa')
else:
    env.Replace(RF_ROOT = '${INC_ROOT}/modem/rfa')

env.Replace(RFTECH_WCDMA_ROOT = env.GetBuildPath(Dir('..')))

env.PublishPublicApi('RFTECH_WCDMA',['${RFTECH_WCDMA_ROOT}/api',
                                     '${RFTECH_WCDMA_ROOT}/rf/core/inc'])

if env.get('CHIPSET') not in ('mdm9x35'):
   env.PublishRestrictedApi ('RFTECH_WCDMA_VIOLATIONS',[
       '${INC_ROOT}/mcs/hwio/inc',
       '${INC_ROOT}/mcs/hwio/inc/${CHIPSET}'
       ])

#Start public VIOLATIONS
env.PublishRestrictedApi('RFTECH_WCDMA_VIOLATIONS',[
        '${INC_ROOT}/fw/api/common',
        '${INC_ROOT}/geran/cust/inc',
        '${INC_ROOT}/geran/variation/inc',
        '${INC_ROOT}/hdr/common/api',
        '${INC_ROOT}/hdr/cp/api',
        '${INC_ROOT}/hdr/cust/inc',
        '${INC_ROOT}/hdr/mac/api',
        '${INC_ROOT}/hdr/srch/api',
        '${INC_ROOT}/hdr/variation/inc',
        '${INC_ROOT}/mcs/variation/inc',
        '${INC_ROOT}/mcs/cust/inc',
#        '${INC_ROOT}/rfa_gsm/ftm/inc',
#        '${INC_ROOT}/rfa_gsm/ftm/protected',
#        '${INC_ROOT}/utils/osys',
        '${INC_ROOT}/wcdma/api',
        '${INC_ROOT}/wcdma/cust/inc',
        '${INC_ROOT}/wcdma/diag/inc',
        '${INC_ROOT}/wcdma/l1/offline/inc',
#        '${INC_ROOT}/wcdma/l2/inc',
        '${INC_ROOT}/wcdma/mac/inc',
        '${INC_ROOT}/wcdma/rlc/inc',
#        '${INC_ROOT}/wcdma/rrc/inc',
        '${INC_ROOT}/wcdma/variation/inc',
#        '${RF_ROOT}/cust/inc',
        '${RF_ROOT}/device/rfdev_intf/inc',
#       '${RF_ROOT}/lm/common/inc',
        '${RF_ROOT}/rf/common/ftm/inc',
        '${RF_ROOT}/rf/common/hwtc/inc',
        '${RF_ROOT}/rf/common/rf/core/inc',
        '${RF_ROOT}/rf/common/rf/core/src',
        '${RF_ROOT}/rf/common/rf/mc/inc',
        '${RF_ROOT}/rf/common/rf/nv/inc',
        '${RF_ROOT}/rf/common/rf/rfc/inc',
        '${RF_ROOT}/rf/common/stubs/inc',
        '${RF_ROOT}/rf/hal/common/inc',
#        '${RF_ROOT}/rf/hal/nikel/common/inc',
#        '${RF_ROOT}/rf/hal/nikel/meas/inc',
#        '${RF_ROOT}/rf/hal/nikel/wcdma/inc',
        '${RF_ROOT}/rf/mdsp/qdsp6_common/inc',
        '${RF_ROOT}/rf/mdsp/qdsp6_meas/inc',
        '${RF_ROOT}/rf/mdsp/qdsp6_wcdma/inc',
        '${RF_ROOT}/rf/meas/rf/rfc/inc',
        '${RF_ROOT}/rf/rfd/common/inc',
        '${RF_ROOT}/rf/rfd/nikel/inc',
        '${RF_ROOT}/rf/task/common/inc',
        '${RF_ROOT}/rfc/common/inc',
        '${RF_ROOT}/rfc/vreg_mgr/common/inc',
        '${RF_ROOT}/variation/inc',
        '${RF_ROOT}/rf/meas/ftm/inc',
        '${RF_ROOT}/offtarget/framework/inc',
        '${RF_ROOT}/rf/common/rf/atuner/inc',

# support for modem directory
#        '${INC_ROOT}/modem/rftech_wcdma/api',
#        '${INC_ROOT}/modem/rftech_wcdma/ftm/inc',
#        '${INC_ROOT}/modem/rftech_wcdma/rf/mc/inc',
#        '${INC_ROOT}/modem/rftech_wcdma/rf/meas/inc',
#        '${INC_ROOT}/modem/rftech_wcdma/rf/nv/inc',
#        '${INC_ROOT}/modem/rftech_wcdma/rf/rfc/inc',
#        '${INC_ROOT}/modem/fw/api/common',
#        '${INC_ROOT}/modem/geran/cust/inc',
#        '${INC_ROOT}/modem/geran/variation/inc',
#        '${INC_ROOT}/modem/hdr/common/api',
#        '${INC_ROOT}/modem/hdr/cp/api',
#        '${INC_ROOT}/modem/hdr/cust/inc',
#        '${INC_ROOT}/modem/hdr/mac/api',
#        '${INC_ROOT}/modem/hdr/srch/api',
#        '${INC_ROOT}/modem/hdr/variation/inc',
#        '${INC_ROOT}/modem/mcs/variation/inc',
#        '${INC_ROOT}/modem/mcs/cust/inc',
#        '${INC_ROOT}/modem/rftech_gsm/ftm/inc',
#        '${INC_ROOT}/modem/rfa_gsm/ftm/protected',
#        '${INC_ROOT}/modem/utils/osys',
#        '${INC_ROOT}/modem/wcdma/api',
#        '${INC_ROOT}/modem/wcdma/cust/inc',
#        '${INC_ROOT}/modem/wcdma/diag/inc',
#        '${INC_ROOT}/modem/wcdma/l1/offline/inc',
#        '${INC_ROOT}/modem/wcdma/l2/inc',
#        '${INC_ROOT}/modem/wcdma/mac/inc',
#        '${INC_ROOT}/modem/wcdma/rlc/inc',
#        '${INC_ROOT}/modem/wcdma/rrc/inc',
#        '${INC_ROOT}/modem/wcdma/variation/inc',
#        '${INC_ROOT}/modem/rfa/cust/inc',
#        '${INC_ROOT}/modem/rfa/device/rfdev_intf/inc',
#        '${INC_ROOT}/modem/rfa/lm/common/inc',
#        '${INC_ROOT}/modem/rfa/rf/common/ftm/inc',
#        '${INC_ROOT}/modem/rfa/rf/common/hwtc/inc',
#        '${INC_ROOT}/modem/rfa/rf/common/rf/core/inc',
#        '${INC_ROOT}/modem/rfa/rf/common/rf/core/src',
#        '${INC_ROOT}/modem/rfa/rf/common/rf/mc/inc',
#        '${INC_ROOT}/modem/rfa/rf/common/rf/nv/inc',
#        '${INC_ROOT}/modem/rfa/rf/common/rf/rfc/inc',
#        '${INC_ROOT}/modem/rfa/rf/common/stubs/inc',
#        '${INC_ROOT}/modem/rfa/rf/hal/common/inc',
#        '${INC_ROOT}/modem/rfa/rf/hal/dime/common/inc',
#        '${INC_ROOT}/modem/rfa/rf/hal/dime/meas/inc',
#        '${INC_ROOT}/modem/rfa/rf/hal/dime/wcdma/inc',
#        '${INC_ROOT}/modem/rfa/rf/hal/nikel/common/inc',
#        '${INC_ROOT}/modem/rfa/rf/hal/nikel/meas/inc',
#        '${INC_ROOT}/modem/rfa/rf/hal/nikel/wcdma/inc',
#        '${INC_ROOT}/modem/rfa/rf/mdsp/qdsp6_common/inc',
#        '${INC_ROOT}/modem/rfa/rf/mdsp/qdsp6_meas/inc',
#        '${INC_ROOT}/modem/rfa/rf/mdsp/qdsp6_wcdma/inc',
#        '${INC_ROOT}/modem/rfa/rf/meas/rf/rfc/inc',
#        '${INC_ROOT}/modem/rfa/rf/rfd/common/inc',
#        '${INC_ROOT}/modem/rfa/rf/rfd/nikel/inc',
#        '${INC_ROOT}/modem/rfa/rf/task/common/inc',
#        '${INC_ROOT}/modem/rfa/rfc/common/inc',
#        '${INC_ROOT}/modem/rfa/rfc/vreg_mgr/common/inc',
#        '${INC_ROOT}/modem/rfa/variation/inc',
#        '${INC_ROOT}/modem/rfa/rf/meas/ftm/inc',
#        '${INC_ROOT}/modem/rftech_gsm/api',
        ])

#This violation needs to eventually be updated to include 
#TRITON RFC Target folder when available
if env.get('CHIPSET') in ('msm8x26','msm8x10','mdm9x35','msm8962','msm8926','msm8916'):
  env.PublishRestrictedApi( 'RFTECH_WCDMA_VIOLATIONS', [
        '${RF_ROOT}/rfc/dime/target/msm8974/inc',
        '${INC_ROOT}/modem/rfa/rfc/dime/target/msm8974/inc',

    ])
else:
  env.PublishRestrictedApi( 'RFTECH_WCDMA_VIOLATIONS', [    
        '${RF_ROOT}/rfc/dime/target/${CHIPSET}/inc',
        '${INC_ROOT}/modem/rfa/rfc/dime/target/${CHIPSET}/inc',
    ])

