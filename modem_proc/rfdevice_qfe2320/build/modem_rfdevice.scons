#====include path optimized=====================================================
#
#
# GENERAL DESCRIPTION
#
# Copyright (c) 2012 - 2013 QUALCOMM Technologies, Incorporated. All Rights Reserved
#
# Qualcomm Proprietary
#
# Export of this technology or software is regulated by the U.S. Government.
# Diversion contrary to U.S. law prohibited.
#
# All ideas, data and information contained in or disclosed by
# this document are confidential and proprietary information of
# Qualcomm Technologies Incorporated and all rights therein are expressly reserved.
# By accepting this material the recipient agrees that this material
# and the information contained therein are held in confidence and in
# trust and will not be used, copied, reproduced in whole or in part,
# nor its contents revealed in any manner to others without the express
# written permission of Qualcomm Technologies Incorporated.
#
#-------------------------------------------------------------------------------
#
# $Header: //commercial/MPSS.JO.2.0.c1.4/Main/modem_proc/rfdevice_qfe2320/build/modem_rfdevice.scons#1 $
# $DateTime: 2016/12/14 01:58:10 $
#
#                      EDIT HISTORY FOR FILE
#                      
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#  
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 10/06/13   ra      Support RFLM CCS 
# 09/05/13   lp      Removed from TR.2.0 8x10 builds
# 08/12/13   aca     Scons clean up part 1- remove violations
# 07/02/13   sar     Removed obsolete paths & used published apis where applicable.
# 01/30/13   sar     Added Pack script changes.
# 09/25/12   sar     Updated scons and created api.
# 07/25/12   sn      Cleaned up legacy qfe2320 driver path
# 06/26/12   sar     Created
#===============================================================================

Import('env')

# QFE2320 not needed for 8x10 builds
if env.get('CHIPSET') in ('msm8x10'):
   Return() 

# Do not compile for mdm9607 flavor
if env.get('CHIPSET') in ('mdm9607'):
  Return( )

env = env.Clone()

#usage:  ENV_UPDATE_RFA=CHIPSET,=mdm9x15,USES_NO_DEBUG,delete,USES_HI_SPEED,add
if ARGUMENTS.get('ENV_UPDATE_RFA'):
   
   env_update_string    = ARGUMENTS.get('ENV_UPDATE_RFA')
   env_update_list      = env_update_string.split(',')
   item_total           = len(env_update_list)
   list_index           = 0
   
   #note if list is not even number of items, last odd item is ignored
   while list_index < item_total-1:
                 
      item            = env_update_list[list_index]  
      value           = env_update_list[list_index+1]
      list_index      += 2
                                              
      if(value == 'add'):
         env[str(item)] = 'yes'
         print "adding",item,"to env"                                          
                
      elif(value == 'delete'):
         del env[str(item)]
         print "deleting",item,"from env"
      
      else:
         if(value[0] != '='):
            print "missing leading = in",value
            print "not updating ",item
                 
         else:
            value2 = value[1:len(value)]
            env[str(item)] = value2
            print "now setting",item,value


env.Replace(RFDEVICE_QFE2320_ROOT = '${INC_ROOT}/rfdevice_qfe2320')

#The order of APIs in the rfdevice_qfe2320_public_api_list determines the order the paths are listed on the build command line.
#To optimize build times the API list is sorted in descending order of use.

env.PublishProtectedApi( 'RF_COMMON_INC', [
    '${INC_ROOT}/rfa/rf/common/rf/nv/inc',
    '${INC_ROOT}/rfa/rf/task/common/inc',    
    ])

env.RequirePublicApi(['RFLM'],area='RFLM')

env.RequirePublicApi(['RFMODEM'], area=env.get('RF_GLOBALS')['RFMODEM_AREA'])

rfdevice_qfe2320_public_api_list = [        
        ('MMCP',                'PUBLIC'),
        ('MMCP',                'MMCP'),
        ('FW',                  'COMMON'),
        ('FW',                  'GERAN'),
        ('FW',                  'RF'),
        ('FW',                  'WCDMA'),
		('FW',                  'LTE'),
        ('GERAN',               'GERAN'),
        ('MCS',                 'MCS'),
        ('RFA',                 'CDMA'),
        ('RFA',                 'COMMON'),
        ('RFA',                 'WCDMA'),
		('RFA',                 'LTE'),
		('RFA',                 'LM'),		
		('RFNV',                'RFNV'),
		('RFTECH_LTE',          'RFTECH_LTE'),
		('LTE',                 'RFA'),
        ('RFDEVICE_INTERFACE',  'RFDEVICE_INTERFACE'),
        ('RFDEVICE_QFE2320',    'RFDEVICE_QFE2320'),
        ]

for api_area,api_name in rfdevice_qfe2320_public_api_list:
    env.RequirePublicApi([api_name], area=api_area)

env.RequireRestrictedApi(['RFDEVICE_QFE2320_VIOLATIONS'])

#Start AU paths that were included in the top level pasted block
env.PublishProtectedApi('RFDEVICE_INC',[
    '${RFDEVICE_QFE2320_ROOT}/common/protected',
    ])


env.RequireProtectedApi([
    'RF_COMMON_INC',
    'RF_DEVICE_INC',
    ])

if 'NO_MODEM_FOLDER' in env or 'USES_NO_MODEM_FOLDER' in env:
        env.RequireRestrictedApi([ 'RFDEVICE_INTERFACE','RFDEVICE_NO_MODEM_FOLDER'])


#delete from here through end of the file when DIME modem folder is removed 
#  (keep last line with LoadSoftwareUnits)

env.PublishPrivateApi( 'RFA_RF_VIOLATIONS', [
    '${RFDEVICE_QFE2320_ROOT}/build/cust',
    ])


#----------------------------------------------------------------------------#
# Export Protected API to RFA folder. This will be visible only within
# RFA folder
#----------------------------------------------------------------------------#

env.PublishProtectedApi( 'QFE2320_LIB_PROTECTED', [
    '${RFDEVICE_QFE2320_ROOT}/common/protected',
    '${RFDEVICE_QFE2320_ROOT}/common/test',	
    ])

env.PublishProtectedApi( 'RF_DEVICE_INC', [
    '${INC_ROOT}/rfdevice_qfe2320/common/inc',
    '${INC_ROOT}/rfdevice_qfe2320/common/protected',
    '${RFDEVICE_QFE2320_ROOT}/common/test',		
    '${INC_ROOT}/rfa/rfc/dime/target/msm8974/inc',
    '${INC_ROOT}/rfa/rfc/dime/target/mdm9x25/inc',
    '${INC_ROOT}/rfa/rfc/common/inc',
    '${INC_ROOT}/rfa/rf/rfd/common/inc',
    '${INC_ROOT}/rfa/rf/rfd/nikel/inc',
	
    ])

env.LoadSoftwareUnits( ) 

