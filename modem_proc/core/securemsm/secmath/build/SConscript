#===============================================================================
#
# secmath
#
# GENERAL DESCRIPTION
#    build script
#
# Copyright (c) 20011 by QUALCOMM, Incorporated.
# All Rights Reserved.
# QUALCOMM Proprietary/GTDR
#
#-------------------------------------------------------------------------------
#
#  $Header:  $
#  $DateTime: $
#  $Author:  $
#  $Change:  $
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 03/12/12   mm     initial version
#===============================================================================
Import('env')
env = env.Clone()


#-------------------------------------------------------------------------------
# Set search path for securemsm subsystem files
#-------------------------------------------------------------------------------
SRCPATH = "${BUILD_ROOT}/core/securemsm/secmath/"

env.Append(CPPPATH = "${COREBSP_ROOT}/securemsm/secmath/api")

env.PublishRestrictedApi('SECMATH',
                         ["${INC_ROOT}/core/securemsm/secmath/inc"])
env.Append(CPPPATH = "${COREBSP_ROOT}/securemsm/secmath/inc")

env.AddUsesFlags('USES_QDSP6')
if env.has_key('USES_MBA'):
  if env.has_key('USES_QDSP6'):
    env.Append(CCFLAGS = " -O3 ")
    env.Append(CFLAGS = " -O3 ")
  else:
    env.Append(CCFLAGS = " --restrict  -O3 -OTime ")
    env.Append(CFLAGS = " --restrict  -O3 -OTime ")
else:
  if env.has_key('USES_QDSP6'):
    env.Append(CCFLAGS = " -O2 -hexagon-predef-argset=modem-sw ")
    env.Append(CFLAGS = " -O2 -hexagon-predef-argset=modem-sw ")
  else:
    env.Append(CCFLAGS = " --restrict  -O2 -OTime ")
    env.Append(CFLAGS = " --restrict  -O2 -OTime ")

#-------------------------------------------------------------------------------
# External depends within CoreBSP
#-------------------------------------------------------------------------------
CBSP_API = [
   'SERVICES',

   # needs to be last also contains wrong comdef.h
   'KERNEL',
]

env.RequirePublicApi(CBSP_API)

#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------
SRCPATH = "${COREBSP_ROOT}/securemsm/secmath"

#-------------------------------------------------------------------------------
# Let Scons build the object files in $(BUILDPATH} and don't copy over files
#-------------------------------------------------------------------------------
env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

#-------------------------------------------------------------------------------
# Compiler, object, and linker definitions
#-------------------------------------------------------------------------------



#-------------------------------------------------------------------------------
# Sources, libraries
#-------------------------------------------------------------------------------
SECMATH_SRC_SHARED = [
  '${BUILDPATH}/src/secmath_mod_exp.c',
  '${BUILDPATH}/src/secmath_montmul_ref.c',
  '${BUILDPATH}/src/secmath_montmul_utils.c',
  '${BUILDPATH}/src/secmath_barrett_reduce.c',
  '${BUILDPATH}/src/secmath_BIGINT_read_radix.c',
  '${BUILDPATH}/src/secmath_BIGINT_read_unsigned_bin.c',
  '${BUILDPATH}/src/secmath_BIGINT_to_radix.c',
  '${BUILDPATH}/src/secmath_BIGINT_to_unsigned_bin.c',
  '${BUILDPATH}/src/secmath_bin_to_hex_str.c',
  '${BUILDPATH}/src/secmath_hex_str_to_bin.c',
]

#-------------------------------------------------------------------------------
# Add Libraries to MBA Image
#-------------------------------------------------------------------------------
env.LoadSoftwareUnits()

SECMATH_IMAGES = [
	'SBL2_BOOT_IMAGE', 
	'TZOS_IMAGE',
	'TZEXEC_IMAGE',  
	'SBL3_BOOT_IMAGE',
	'AUTH_BOOT_DRIVER',   
	'MODEM_IMAGE',
	'CBSP_QDSP6_SW_IMAGE', 
	'MBA_CORE_SW',
]

env.AddBinaryLibrary(SECMATH_IMAGES,'${BUILDPATH}/secmath', SECMATH_SRC_SHARED)

