#===============================================================================
#
# smecom_ixfile_shared Libs
#
# GENERAL DESCRIPTION
#    build script
#
# Copyright (c) 2010 - 2013 by Qualcomm Technologies, Incorporated.
# All Rights Reserved.
# QUALCOMM Proprietary/GTDR
#
#-------------------------------------------------------------------------------
#
#  $Header: //components/rel/core.mpss/3.5.c12.3/securemsm/mba/src/mba_nand/build/mba_nand.scons#1 $
#  $DateTime: 2016/12/13 07:59:23 $
#  $Author: mplcsds1 $
#  $Change: 11985146 $
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who        what, where, why
# --------   ---        ---------------------------------------------------------
# 10/24/13   vj          disable prng usage for 8916 bringup  
# 01/04/13   rsahay      Initial Version
#===============================================================================
Import('env')
env = env.Clone()

if env['MSM_ID'] in ['8952']:
  Return()

env.Append(CPPPATH = "${COREBSP_ROOT}/securemsm/mba/inc/chipset/${MSM_ID}")

#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------
SRCPATH = "${BUILD_ROOT}/core/securemsm/mba/src/mba_nand"

env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

#-------------------------------------------------------------------------------
# Internal depends within CoreBSP
#-------------------------------------------------------------------------------
CBSP_API = [
   'SECUREMSM',
   'HAL',
   'SYSTEMDRIVERS',
   'DAL',
   'POWER',
   'STORAGE',
   # needs to be last also contains wrong comdef.h
   'KERNEL',
]

env.RequirePublicApi(CBSP_API)
env.RequireRestrictedApi(CBSP_API)
env.RequireProtectedApi(['SECUREMSM'])

if env['MSM_ID'] in ['8952','8976','8937']:
  env.Append(CCFLAGS = " -DFEATURE_NO_XPU ")
  env.Append(CPPDEFINES = "FEATURE_NO_XPU")
  env.Append(AFLAGS = " -DFEATURE_NO_XPU ")

#-------------------------------------------------------------------------------
# Compiler, object, and linker definitions
#-------------------------------------------------------------------------------

env.Append(CPPPATH = "${COREBSP_ROOT}/securemsm/mba/src/mba_nand")

#env.Append(CCFLAGS = " --restrict ")

#-------------------------------------------------------------------------------
# Generates mba_hwio.h
#-------------------------------------------------------------------------------

#----------------------------------------------------------------------------
# Modem Security Sources
#----------------------------------------------------------------------------


#-------------------------------------------------------------------------------
# Add Libraries to image
#-------------------------------------------------------------------------------

if env.has_key('USES_QPIC_NAND'):
  env.Append(CCFLAGS = " -DFEATURE_QPIC_NAND ")
  env.Append(CPPDEFINES = "FEATURE_QPIC_NAND")
  env.Append(AFLAGS = " -DFEATURE_QPIC_NAND ")
  NAND_SOURCES = [ '${BUILDPATH}/mba_nand.c' ,'${BUILDPATH}/mba_nand_clocks.c' ]
  #-------------------------------------------------------------------------------
  # Setup RCINIT so we call qpic nand setup in modem
  #------------------------------------------------------------------------------- 
  if 'USES_RCINIT' in env:
    RCINIT_IMG = ['MODEM_IMAGE', 'CORE_MODEM', 'CORE_QDSP6_SW']
    env.AddRCInitFunc(RCINIT_IMG,                 
      {
        'sequence_group'             : 'RCINIT_GROUP_0',                 # required
        'init_name'                  : 'setup_qpic_nand',                # required
        'init_function'              : 'mba_configure_qpic_nand',                # required
		'dependencies'               : ['npa','clk_regime','rpm','smd','bam_drv','npa_timer_init'],
      }
    )

  env.AddBinaryObject(['MODEM_IMAGE', 'CBSP_MODEM_IMAGE',
	       'QDSP6_SW_IMAGE', 'CBSP_QDSP6_SW_IMAGE'], NAND_SOURCES)

#-------------------------------------------------------------------------------
# Load sub scripts
#-------------------------------------------------------------------------------
env.LoadSoftwareUnits()
