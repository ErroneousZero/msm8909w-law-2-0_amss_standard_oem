#===============================================================================
#
# RTE (Inter-Process Communication) Libs
#
# GENERAL DESCRIPTION
#    build script
#
# Copyright (c) 2009-2010 by Qualcomm Technologies, Incorporated.
# All Rights Reserved.
# QUALCOMM Proprietary/GTDR
#
#-------------------------------------------------------------------------------
#
#  $Header: //components/rel/core.mpss/3.5.c12.3/kernel/rte/build/rte.scons#1 $
#  $DateTime: 2016/12/13 07:59:23 $
#  $Author: mplcsds1 $
#  $Change: 11985146 $
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
#
#===============================================================================
Import('env')
env = env.Clone()

#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------
SRCPATH = "${BUILD_ROOT}/core/kernel/rte/src"

env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)
env.Append(CPPDEFINES = ["FEATURE_REX_IPC"])


#-------------------------------------------------------------------------------
# Internal depends within CoreBSP
#-------------------------------------------------------------------------------
CBSP_API = [
   'DEBUGTOOLS',
   'MPROC',
   'SERVICES',
   'SYSTEMDRIVERS',
   'DAL',
   
   # needs to be last also contains wrong comdef.h
   'KERNEL',
]

env.RequirePublicApi(CBSP_API)
env.RequireRestrictedApi(CBSP_API)

#-------------------------------------------------------------------------------
# Sources, libraries
#-------------------------------------------------------------------------------

RTE_SOURCES =  [
   '${BUILDPATH}/rteprocessrex.c',
   '${BUILDPATH}/ipcrex.c',
   '${BUILDPATH}/rte.c',
   '${BUILDPATH}/rte_rex.cpp',
   '${BUILDPATH}/rtei.c',
   '${BUILDPATH}/rteprocess.c',
   '${BUILDPATH}/ipc.c',
   '${BUILDPATH}/ipcns.c',
   '${BUILDPATH}/ipcmem.c',
   '${BUILDPATH}/tsvc.c',
   '${BUILDPATH}/pq.c'
]

#-------------------------------------------------------------------------------
# Add Libraries to image
#-------------------------------------------------------------------------------

env.AddLibrary(
      ['MODEM_IMAGE', 'CBSP_MODEM_IMAGE', 'APPS_IMAGE', 'CBSP_APPS_IMAGE', 'QDSP6_SW_IMAGE', 'CBSP_QDSP6_SW_IMAGE'],
      '${BUILDPATH}/rte',RTE_SOURCES)

#-------------------------------------------------------------------------------

if 'USES_RCINIT' in env:
   RCINIT_IMG = ['CORE_MODEM', 'CORE_QDSP6_SW']
   env.AddRCInitFunc(           # Code Fragment in TMC: NO
    RCINIT_IMG,                 # define TMC_RCINIT_INIT_IPCMEM_POOL_INIT
    {
     'sequence_group'             : 'RCINIT_GROUP_0',                   # required
     'init_name'                  : 'ipcmem',                           # required
     'init_function'              : 'ipcmem_pool_init',                 # required
     'dependencies'               : ['smem','dsm',]
    })

#-------------------------------------------------------------------------------

if 'USES_RCINIT' in env:
   RCINIT_IMG = ['CORE_MODEM', 'CORE_QDSP6_SW']
   env.AddRCInitFunc(           # Code Fragment in TMC: NO
    RCINIT_IMG,                 # define TMC_RCINIT_INIT_TSVC_INIT
    {
     'sequence_group'             : 'RCINIT_GROUP_0',                   # required
     'init_name'                  : 'tsvc',                             # required
     'init_function'              : 'tsvc_init',                        # required
     'dependencies'               : ['ipcmem',]
    })


