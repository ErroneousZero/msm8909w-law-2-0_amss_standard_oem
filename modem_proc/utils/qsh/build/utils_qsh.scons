#===============================================================================
#
# Utils QSH
#
# GENERAL DESCRIPTION
#    build script
#
# Copyright (c) 2014 by Qualcomm Technologies, Incorporated.
# All Rights Reserved.
# QUALCOMM Proprietary/GTDR
#
#-------------------------------------------------------------------------------
#
#  $Header: //commercial/MPSS.JO.2.0.c1.4/Main/modem_proc/utils/qsh/build/utils_qsh.scons#1 $
#
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 12/19/14    mm     Added core includes
# 03/12/14    vd     Initial version.
#===============================================================================
Import('env')

from glob import glob
from os.path import join, basename


VERSION_IMG = [
   'IMAGE_TREE_VERSION_AUTO_GENERATE',
]

#-------------------------------------------------------------------------------
# Setup source PATH
#-------------------------------------------------------------------------------
SRCPATH = "../src"

env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

#-------------------------------------------------------------------------------
# Set MSG_BT_SSID_DFLT for legacy MSG macros
#-------------------------------------------------------------------------------
env.Append(CPPDEFINES = [
   "MSG_BT_SSID_DFLT=MSG_SSID_UTILS_QSH",
])

#-------------------------------------------------------------------------------
# Set Feature flag to get the Modem image version details
#-------------------------------------------------------------------------------
if env.IsTargetEnable(VERSION_IMG):
   env.Append(CPPDEFINES=['FEATURE_QSH_VERSION_IMAGE_ENABLED'])

#-------------------------------------------------------------------------------
# Necessary Public and Restricted API's
#-------------------------------------------------------------------------------
env.RequirePublicApi(['SHUTDOWN'], area='PERF')
env.RequirePublicApi(['DEBUGTOOLS'], area='core')

# Need get access to Modem Restricted headers

#-------------------------------------------------------------------------------
# Generate the library and add to an image
#-------------------------------------------------------------------------------

# Construct the list of source files by looking for *.c
UTILS_QSH_SOURCES = ['${BUILDPATH}/' + basename(fname)
                   for fname in glob(join(env.subst(SRCPATH), '*.c'))]

# Compile the UTILS QSH source and convert to a binary library
env.AddBinaryLibrary(['MODEM_MODEM','MOB_UTILS'], '${BUILDPATH}/utils_qsh', UTILS_QSH_SOURCES, pack_exception=['USES_CUSTOMER_GENERATE_LIBS'])

# RC Init Task Dictionary
RCINIT_TASK_QSH = {
            'thread_name'         : 'qsh',
            'sequence_group'      : 'RCINIT_GROUP_1',
            'stack_size_bytes'    : env.subst('4096'),
            'priority_amss_order' : 'DIAG_PRI_ORDER',
            'stack_name'          : 'qsh_stack',
            'thread_entry'        : 'qsh_task_main',
            'tcb_name'            : 'qsh_tcb',
            'cpu_affinity'        : 'REX_ANY_CPU_AFFINITY_MASK',
            'dependencies'        : ['diag', ]
    }


# Add tasks to RCInit
if 'USES_MODEM_RCINIT' in env:
            env.AddRCInitTask(['MODEM_MODEM','MOB_UTILS'], RCINIT_TASK_QSH)

