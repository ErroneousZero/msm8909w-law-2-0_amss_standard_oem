#===============================================================================
#
# TZ PLAYREADY Porting Kit Wrapper
#
# GENERAL DESCRIPTION
#    build script
#
# Copyright (c) 2011-2014 Qualcomm Technologies, Incorporated.
# All Rights Reserved.
# Qualcomm Technologies Confidential and Proprietary
#
#-------------------------------------------------------------------------------
#
#  $Header:  $
#  $DateTime: $
#  $Author: $
#  $Change: $
#                      EDIT HISTORY FOR FILE
#
#  This section contains pkwrapperents describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 03/03/14    rk     Added new path for app_common_svc_handler.h
# 16/12/13    rk     Modified new path for security checker
# 05/09/13    ck     SCHK dxhdcp2 support. Independent lib, Added callback reg function to remove config dependency.
#                    Removed operation parameter. Added log for debugging. Added datarate check.
# 01/15/13    cz     Used BUILDPATH
# 12/10/12    rk     Added guid and aes key caching to support multiple keys
# 11/20/12    hw     Add a new file for non-contiguous decrypt
# 11/06/12    cz     Removed USES_PR_2_0 condition check as TZ 2.0 only uses PR 2.0
# 07/17/12    rk     Initial Revision
#===============================================================================

Import('env')
env = env.Clone()

#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------
SRCPATH = "${BUILD_ROOT}/core/securemsm/trustzone/qsapps/tzdrm/playready/pkwrapper/shared"

#-------------------------------------------------------------------------------
# Internal depends within CoreBSP
#-------------------------------------------------------------------------------
CBSP_API = [
   'SERVICES',
   'SYSTEMDRIVERS',
]

env.RequirePublicApi(CBSP_API)


env.PublishPrivateApi('SECUREMSM', [
  "${INC_ROOT}/core/api/dal",
  "${INC_ROOT}/core/api/securemsm/trustzone/qsee",
  "${INC_ROOT}/core/securemsm/trustzone/qsee/include/crypto/",
  "${INC_ROOT}/core/securemsm/trustzone/qsee/include/",
  "${INC_ROOT}/core/securemsm/trustzone/qsapps/tzdrm/playready/pk2.0/intgr",
  "${INC_ROOT}/core/securemsm/trustzone/qsapps/tzdrm/playready/pk2.0/source/inc",
  "${INC_ROOT}/core/securemsm/trustzone/qsapps/tzdrm/playready/pk2.0/source/config",
  "${INC_ROOT}/core/securemsm/trustzone/qsapps/tzdrm/playready/pk2.0/source/crypto/bignum",
  "${INC_ROOT}/core/securemsm/trustzone/qsapps/tzdrm/playready/pk2.0/source/crypto/drmcrypto",
  "${INC_ROOT}/core/securemsm/trustzone/qsapps/tzdrm/playready/pk2.0/source/oem/ansi/inc",
  "${INC_ROOT}/core/securemsm/trustzone/qsapps/tzdrm/playready/pk2.0/source/oem/common/inc",
  "${INC_ROOT}/core/securemsm/trustzone/qsapps/tzdrm/playready/pk2.0/source/oem/common/aes",
  "${INC_ROOT}/core/securemsm/trustzone/qsapps/tzdrm/playready/pk2.0/source/certs",
  "${INC_ROOT}/core/securemsm/trustzone/qsapps/tzdrm/playready/pk2.0/source/xmr",
  "${INC_ROOT}/core/securemsm/trustzone/qsapps/tzdrm/playready/pk2.0/source/core",
  "${INC_ROOT}/core/securemsm/trustzone/qsapps/tzdrm/playready/pk2.0/source/initiators",
  "${INC_ROOT}/core/securemsm/trustzone/qsapps/tzdrm/playready/pk2.0/source/keyfile",
  "${INC_ROOT}/core/securemsm/trustzone/qsapps/tzdrm/playready/pk2.0/source/keyfileformat",
  "${INC_ROOT}/core/securemsm/trustzone/qsapps/tzdrm/playready/pk2.0/source/results",
  "${INC_ROOT}/core/securemsm/trustzone/qsapps/tzdrm/playready/pkwrapper/shared/inc",
  "${INC_ROOT}/core/securemsm/trustzone/qsapps/tzdrm/playready/core/shared/inc",
  "${INC_ROOT}/core/securemsm/trustzone/qsapps/tzdrm/tzcommon/common/shared/src",
  "${INC_ROOT}/core/securemsm/trustzone/qsapps/tzdrm/tzcommon/common/shared/inc",
  "${INC_ROOT}/core/securemsm/trustzone/qsapps/tzdrm/tzcommon/common/chipset/${CHIPSET}/inc",
  "${INC_ROOT}/core/securemsm/trustzone/qsapps/common/security_checker/shared/src",
  "${INC_ROOT}/core/securemsm/trustzone/qsapps/tzdrm/tzcommon/config/shared/inc",
  "${INC_ROOT}/core/securemsm/trustzone/qsapps/tzdrm/tzcommon/crypto/chipset/inc",
  "${INC_ROOT}/core/securemsm/trustzone/qsapps/common/drmprov/shared/inc",
  "${INC_ROOT}/core/securemsm/trustzone/qsapps/libs/services/src",
  "${INC_ROOT}/core/securemsm/trustzone/qsapps/common/app_common_svc/shared/inc",
])

if env.has_key('USES_NO_DEBUG'):
   env.Replace(DBUG_MODE = "NoDebug")
else:
   env.Replace(DBUG_MODE = "Debug")

env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

#-------------------------------------------------------------------------------
# Compiler, object, and linker definitions
#-------------------------------------------------------------------------------

# do not generate thumb code for inline assembler code
env.Append(ARMCC_OPT = ' --loose_implicit_cast -W')
env.Append(ARMCPP_OPT = ' --loose_implicit_cast -W')


#----------------------------------------------------------------------------
# PLAYREADY Shared Library
#----------------------------------------------------------------------------

SME_PLAYREADY_PKWRAPPER_SHARED_LIB_SOURCES = [
    '${BUILDPATH}/src/playready.c',
    '${BUILDPATH}/src/playreadykidlist.c',
    '${BUILDPATH}/src/playreadydomain.c',
    '${BUILDPATH}/src/playreadyenvelope.c',
    '${BUILDPATH}/src/playreadymtp.c',
    '${BUILDPATH}/src/playreadydecrypt.c',
]

sme_playready_pkwrapper_shared_lib = '${BUILDPATH}/sme_playready_pkwrapper_shared'

#-------------------------------------------------------------------------------
# Add Libraries to image
#-------------------------------------------------------------------------------
env.AddBinaryLibrary (['PLAYREADY_IMAGE'],sme_playready_pkwrapper_shared_lib, [SME_PLAYREADY_PKWRAPPER_SHARED_LIB_SOURCES])

#-------------------------------------------------------------------------------
# Pack out files
#-------------------------------------------------------------------------------
NOSHIP_SOURCES = [
          SRCPATH + "/inc/playreadycomdef.h",
          SRCPATH + "/src/playreadykidlist.h",
]
env.CleanPack('PLAYREADY_IMAGE', NOSHIP_SOURCES)

#-------------------------------------------------------------------------------
# Load sub scripts
#-------------------------------------------------------------------------------
env.LoadSoftwareUnits()
