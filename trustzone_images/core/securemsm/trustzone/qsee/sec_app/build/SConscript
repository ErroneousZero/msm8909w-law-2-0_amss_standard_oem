#===============================================================================
#
#                             Edit History
# $Header: //source/qcom/qct/core/kernel/lk/rel/1h10/build/SConscript#3 $
#
# when         who     what, where, why
# ----------   ---     ---------------------------------------------------------
# 2012/12/16   mg      Add qsee_log.c to QSEE_SEC_APP_SOURCES
# 2011/07/12   spa     Create initial version
#
#===============================================================================
#                    Copyright (c) 2013 QUALCOMM Incorporated.
#                           All Rights Reserved.
#                         QUALCOMM Proprietary/GTDR
#===============================================================================
# QSEE Lib
#-------------------------------------------------------------------------------
Import('env')
env = env.Clone()

#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------
#SRCPATH = ".."
SRCPATH = "${BUILD_ROOT}/core/securemsm/trustzone/qsee/sec_app"

env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0) 

#-------------------------------------------------------------------------------
# Internal depends within CoreBSP
#-------------------------------------------------------------------------------
CBSP_APIS = [
   'BOOT',
   'BUSES',
   'DAL',
   'DEBUGTOOLS',
   'HAL',
   'SERVICES',
   'SYSTEMDRIVERS',
   'KERNEL',
   'SECUREMSM',   
   'TZKS',   
   'TZSSD',
   'TZCHIPSET'
]

env.RequirePublicApi(CBSP_APIS)
env.RequireRestrictedApi(CBSP_APIS)
env.RequirePrivateApi(CBSP_APIS)

env.PublishPrivateApi('SECUREMSM', [
   '${INC_ROOT}/core/securemsm/trustzone/qsee/sec_app/inc',
])

INC_PATH_API = ["${INC_ROOT}/core/api/securemsm/trustzone/qsee",
               "${INC_ROOT}/core/api/kernel/libstd/stringl"]
               
env.Append(CPPPATH = INC_PATH_API)

INC_PATH_COMMON = ["${INC_ROOT}/core/securemsm/trustzone/qsee/include"]
env.Append(CPPPATH = INC_PATH_COMMON)

INC_PATH_QSEE = [
      "${INC_ROOT}/core/securemsm/trustzone/qsee/kernel/inc",
      "${INC_ROOT}/core/securemsm/trustzone/qsee/sec_app/inc",
      "${INC_ROOT}/core/securemsm/trustzone/qsee/services/elfloader/inc",
      "${INC_ROOT}/core/securemsm/trustzone/qsee/services/external",
      "${INC_ROOT}/core/securemsm/trustzone/qsee/include/crypto",
      "${INC_ROOT}/core/securemsm/trustzone/qsee/services/img_auth/inc",
      "${INC_ROOT}/core/securemsm/trustzone/qsee/services/keyprov/macchiato/shared/inc",
      "${INC_ROOT}/core/securemsm/trustzone/qsee/services/fuseprov/inc",
]
env.Append(CPPPATH = INC_PATH_QSEE)

INC_PATH_LK = [
      "${INC_ROOT}/core/kernel/lk/kernel/inc",
      "${INC_ROOT}/core/kernel/lk/arch/inc",
      "${INC_ROOT}/core/kernel/lk/platform/inc",
]
env.Append(CPPPATH = INC_PATH_LK)

INC_PATH_STORAGE = ["${INC_ROOT}/core/storage/sd_mgr/inc"]
env.Append(CPPPATH = INC_PATH_STORAGE)

env.Append(CPPPATH = "${INC_ROOT}/core/securemsm/trustzone/qsee/services/external/inc")
env.Append(CPPPATH = "${INC_ROOT}/core/storage/sd_mgr/inc/")
env.Append(CPPPATH = "${INC_ROOT}/core/securemsm/trustzone/qsee/arch/${CHIPSET}/cfg/${TZBSP_TARG_PATH}")
env.Append(CPPPATH = "${INC_ROOT}/core/securemsm/trustzone/qsee/arch/${CHIPSET}/src/")


env.Append(CCFLAGS = " --diag_suppress=1786,2523 ")
env.Append(ASFLAGS = " --diag_suppress=1786,2523 ")

#-------------------------------------------------------------------------------
# Compiler options
#-------------------------------------------------------------------------------
env.Append(CCFLAGS = "--gnu")

#-------------------------------------------------------------------------------
# Sources, libraries
#-------------------------------------------------------------------------------

QSEE_SEC_APP_SOURCES = [
   '${BUILDPATH}/src/apps.c',
   '${BUILDPATH}/src/apps_unpaged.c',
   '${BUILDPATH}/src/message.c',
   '${BUILDPATH}/src/qsee_handle.c',
   '${BUILDPATH}/src/smc.c',
   '${BUILDPATH}/src/map.c',
   '${BUILDPATH}/src/qsee_log.c',
   '${BUILDPATH}/src/tzos_legacy.c',
   '${BUILDPATH}/src/syscall_handler.c',
   '${BUILDPATH}/src/tzos_init_thread.s',
]

QSEE_SEC_APP_SOURCES_2 = [
   '${BUILDPATH}/src/fuse_hw_mutex.c',
]

#-------------------------------------------------------------------------------
# Add Libraries to image
#-------------------------------------------------------------------------------
env.AddBinaryObject(['TZOS_IMAGE'], QSEE_SEC_APP_SOURCES_2)
env.AddBinaryLibrary(['TZOS_IMAGE'], '${BUILDPATH}/QSEESECAPP', QSEE_SEC_APP_SOURCES)

