/* PING_MDM_RPC TOOL VERSION: 4.35 */
/*=============================================================================
                        P I N G _ M D M _ R P C . X D R

GENERAL DESCRIPTION
  This is an AUTO GENERATED file that provides an xdr compatible definition of
  the ping_mdm_rpc API.

  ---------------------------------------------------------------------------
  Copyright (c) 2009 QUALCOMM Incorporated.
  All Rights Reserved. QUALCOMM Proprietary and Confidential.
  ---------------------------------------------------------------------------
=============================================================================*/

/*=============================================================================

                              Edit History

                             AUTO GENERATED

Generated by following versions of Htorpc modules:
Id: //source/qcom/qct/core/mproc/tools/rel/04.07/htorpc/htorpc.pl#7 
Id: //source/qcom/qct/core/mproc/tools/rel/04.07/htorpc/lib/Htorpc/Start.pm#2 
Id: //source/qcom/qct/core/mproc/tools/rel/04.07/htorpc/lib/Htorpc/Htoxdr.pm#1 
Id: //source/qcom/qct/core/mproc/tools/rel/04.07/htorpc/lib/Htorpc/XDR.pm#2 
Id: //source/qcom/qct/core/mproc/tools/rel/04.07/htorpc/lib/Htorpc/Output.pm#6 
Id: //source/qcom/qct/core/mproc/tools/rel/04.07/htorpc/lib/Htorpc/Parser.pm#1 
Id: //source/qcom/qct/core/mproc/tools/rel/04.07/htorpc/lib/Htorpc/Metacomments.pm#4 
Id: //source/qcom/qct/core/mproc/tools/rel/04.07/htorpc/lib/Htorpc/SymbolTable.pm#2  

ping_mdm_rpc Definition File(s):
Id: //source/qcom/qct/core/api/rapi/mproc/rel/04.07/inc/ping_mdm_rpc.h#1
=============================================================================*/
/*=============================================================================
$Header$ 
=============================================================================*/



typedef rpc_uint32 rpc_ping_mdm_rpc_api_versions_return_type<>;

/*
 * Declare an rpc_uint32 type for each callback type in the API
 */
typedef rpc_uint32 rpc_ping_mdm_data_cb_f_type;

typedef rpc_uint32 rpc_ping_mdm_cb_f_type;



/*
 * These are struct declarations for the function arguments
 */

struct rpc_ping_mdm_register_args {
  rpc_ping_mdm_cb_f_type ping_mdm_cb_func;
  int num;
};

struct rpc_ping_mdm_un_register_args {
  rpc_ping_mdm_cb_f_type ping_mdm_cb_func;
};

struct rpc_ping_mdm_data_args {
  rpc_uint32 data<>;
  rpc_uint32 size_words;
};

struct rpc_ping_mdm_un_register_data_cb_args {
  rpc_ping_mdm_data_cb_f_type ping_mdm_data_cb_func;
};

struct rpc_ping_mdm_register_data_cb_args {
  rpc_ping_mdm_data_cb_f_type ping_mdm_data_cb_func;
  rpc_uint32 num_callbacks;
  rpc_uint32 size_words;
  rpc_uint32 interval_ms;
  rpc_uint32 num_tasks;
};

struct rpc_ping_mdm_register_random_data_cb_args {
  rpc_ping_mdm_data_cb_f_type ping_mdm_data_cb_func;
  rpc_uint32 num_callbacks;
  rpc_uint32 size_words_min;
  rpc_uint32 size_words_max;
  rpc_uint32 interval_ms;
  rpc_uint32 num_tasks;
};



struct rpc_ping_mdm_rpc_api_version_s_args {
  rpc_boolean len_not_null;
};

/*
 * These are struct declarations for the function results
 */

struct rpc_ping_mdm_rpc_rpc_glue_code_info_remote_rets {
  rpc_uint32 toolvers;   /* Tool version */
  rpc_uint32 features;   /* Features turned on in the code.
                          * 0x00000001    ONCRPC Server Cleanup Support
                          */
  rpc_uint32 proghash;   /* Unique hash value for the API XDR definition */
  rpc_uint32 cbproghash; /* Unique hash value for the Callbacks' XDR definition */
};

struct rpc_ping_mdm_register_rets {
  unsigned long ping_mdm_register_result;
};

struct rpc_ping_mdm_un_register_rets {
  unsigned long ping_mdm_un_register_result;
};

struct rpc_ping_mdm_data_rets {
  rpc_uint32 ping_mdm_data_result;
};

struct rpc_ping_mdm_un_register_data_cb_rets {
  unsigned long ping_mdm_un_register_data_cb_result;
};

struct rpc_ping_mdm_register_data_cb_rets {
  unsigned long ping_mdm_register_data_cb_result;
};

struct rpc_ping_mdm_register_random_data_cb_rets {
  unsigned long ping_mdm_register_random_data_cb_result;
};

struct rpc_ping_mdm_reset_nominal_tasks_rets {
  rpc_uint32 ping_mdm_reset_nominal_tasks_result;
};

struct rpc_ping_mdm_get_current_num_tasks_rets {
  rpc_uint32 ping_mdm_get_current_num_tasks_result;
};

struct rpc_ping_mdm_get_max_tasks_rets {
  rpc_uint32 ping_mdm_get_max_tasks_result;
};

 struct rpc_ping_mdm_rpc_api_versions_rets {
  rpc_ping_mdm_rpc_api_versions_return_type ping_mdm_rpc_api_versions_result;
  rpc_uint32 *len;
};

/*
 * XDR definition of the PING_MDM_RPC program ( vers. 0x00010002 )
 */

program PING_MDM_RPCPROG {
  version PING_MDM_RPCVERS_0001 {

    void
      rpc_ping_mdm_rpc_null( void ) = 0;

    rpc_ping_mdm_rpc_rpc_glue_code_info_remote_rets
      rpc_ping_mdm_rpc_rpc_glue_code_info_remote( void ) = 1;

    rpc_ping_mdm_register_rets
      rpc_ping_mdm_register( rpc_ping_mdm_register_args ) = 2;

    rpc_ping_mdm_un_register_rets
      rpc_ping_mdm_un_register( rpc_ping_mdm_un_register_args ) = 3;

    rpc_ping_mdm_data_rets
      rpc_ping_mdm_data( rpc_ping_mdm_data_args ) = 4;

    rpc_ping_mdm_un_register_data_cb_rets
      rpc_ping_mdm_un_register_data_cb( rpc_ping_mdm_un_register_data_cb_args ) = 5;

    rpc_ping_mdm_register_data_cb_rets
      rpc_ping_mdm_register_data_cb( rpc_ping_mdm_register_data_cb_args ) = 6;

      rpc_ping_mdm_rpc_api_versions_rets
      rpc_ping_mdm_rpc_api_versions( void ) = 0xffffffff;


  } = 0x00010001;

version PING_MDM_RPCVERS_0002 {

	void
	rpc_ping_mdm_rpc_null( void ) = 0;


    rpc_ping_mdm_get_max_tasks_rets
      rpc_ping_mdm_get_max_tasks( void ) = 7;


    rpc_ping_mdm_reset_nominal_tasks_rets
      rpc_ping_mdm_reset_nominal_tasks( void ) = 8;


    rpc_ping_mdm_get_current_num_tasks_rets
      rpc_ping_mdm_get_current_num_tasks( void ) = 9;


    rpc_ping_mdm_register_random_data_cb_rets
      rpc_ping_mdm_register_random_data_cb( rpc_ping_mdm_register_random_data_cb_args ) = 10;

      } = 0x00010002;
} = 0x30000081;

const PING_MDM_RPCVERS = 0x00010002;
