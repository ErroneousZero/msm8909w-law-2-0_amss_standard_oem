/* SMD_BRIDGE_MODEM TOOL VERSION: 4.41 */
/* GENERATED: TUE JUL 20 2010 */
/*=============================================================================
             S M D _ B R I D G E _ M O D E M _ C O M M O N . X D R

GENERAL DESCRIPTION
  This is an AUTO GENERATED file that provides an xdr compatible definition of
  an api that represents the grouping of the different callback functions the
  smd_bridge_modem API supports.

  ---------------------------------------------------------------------------
  Copyright (c) 2010 QUALCOMM Incorporated.
  All Rights Reserved. QUALCOMM Proprietary and Confidential.
  ---------------------------------------------------------------------------
=============================================================================*/

/*=============================================================================

                              Edit History

                             AUTO GENERATED

Generated by following versions of Htorpc modules:
Id: //source/qcom/qct/core/mproc/tools/rel/05.02/htorpc/htorpc.pl#2 
Id: //source/qcom/qct/core/mproc/tools/rel/05.02/htorpc/lib/Htorpc/Start.pm#1 
Id: //source/qcom/qct/core/mproc/tools/rel/05.02/htorpc/lib/Htorpc/Htoxdr.pm#1 
Id: //source/qcom/qct/core/mproc/tools/rel/05.02/htorpc/lib/Htorpc/XDR.pm#2 
Id: //source/qcom/qct/core/mproc/tools/rel/05.02/htorpc/lib/Htorpc/Output.pm#3 
Id: //source/qcom/qct/core/mproc/tools/rel/05.02/htorpc/lib/Htorpc/Parser.pm#2 
Id: //source/qcom/qct/core/mproc/tools/rel/05.02/htorpc/lib/Htorpc/Metacomments.pm#1 
Id: //source/qcom/qct/core/mproc/tools/rel/05.02/htorpc/lib/Htorpc/SymbolTable.pm#1  

smd_bridge_modem Definition File(s):
Id: //source/qcom/qct/core/api/mproc/rel/05.02/smd_bridge_modem.h#2
=============================================================================*/
/*=============================================================================
$Header$ 
=============================================================================*/



const SMD_BRIDGE_MODEM_TOOLVERS = 0x00040029;
const SMD_BRIDGE_MODEM_FEATURES = 0x00000001;

const RPC_SMD_BRIDGE_MODEM_RPC_GLUE_CODE_INFO_REMOTE_VERSION = 0x00040001;
const RPC_SMD_BRIDGE_MODEM_NULL_VERSION = 0x00040001;
const RPC_SMD_BRIDGE_FORWARD_CALLBACK_MODEM_VERSION = 0x00040001;
const RPC_SMD_BRIDGE_RECEIVE_CMD_MODEM_VERSION = 0x00040001;
const RPC_SMD_BRIDGE_REGISTER_FORWARD_CALLBACK_MODEM_VERSION = 0x00040001;
const RPC_SMD_BRIDGE_REGISTER_SERVER_MODEM_VERSION = 0x00040001;

const RPC_SMD_BRIDGE_FORWARD_CALLBACK_F_TYPE_VERSION = 0x00040001;
const RPC_SMD_BRIDGE_SERVER_RECEIVE_F_TYPE_VERSION = 0x00040001;

const RPC_SMD_BRIDGE_MODEMAPI_VERSION_IS_HASHKEY = 0;
const RPC_SMD_BRIDGE_MODEM_API_MAJOR_NUM = 0x0004;

typedef bool rpc_boolean;
typedef unsigned long rpc_uint32;

typedef unsigned char rpc_uint8;

typedef unsigned char rpc_byte;

typedef unsigned short rpc_word;

enum rpc_sio_flow_ctl_type {
  RPC_SIO_FCTL_BEST = 0,
  RPC_SIO_FCTL_OFF,
  RPC_SIO_XONXOFF_STRIP_FCTL_FS,
  RPC_SIO_XONXOFF_STRIP_FCTL_NFS,
  RPC_SIO_CTSRFR_FCTL,
  RPC_SIO_XONXOFF_NSTRIP_FCTL_FS,
  RPC_SIO_XONXOFF_NSTRIP_FCTL_NFS,
  RPC_SIO_MAX_FLOW,
  RPC_SIO_CTSRFR_AUTO_FCTL
};

enum rpc_sio_stream_mode_type {
  RPC_SIO_DS_AUTODETECT_MODE,
  RPC_SIO_DS_RAWDATA_MODE,
  RPC_SIO_DS_PKT_MODE,
  RPC_SIO_DM_MODE,
  RPC_SIO_GENERIC_MODE,
  RPC_SIO_MAX_MODE
};

enum rpc_sio_bitrate_type {
  RPC_SIO_BITRATE_ILLEGAL_1,
  RPC_SIO_BITRATE_ILLEGAL_3,
  RPC_SIO_BITRATE_ILLEGAL_4,
  RPC_SIO_BITRATE_ILLEGAL_5,
  RPC_SIO_BITRATE_ILLEGAL_6,
  RPC_SIO_BITRATE_ILLEGAL_7,
  RPC_SIO_BITRATE_300,
  RPC_SIO_BITRATE_600,
  RPC_SIO_BITRATE_1200,
  RPC_SIO_BITRATE_2400,
  RPC_SIO_BITRATE_4800,
  RPC_SIO_BITRATE_9600,
  RPC_SIO_BITRATE_14400,
  RPC_SIO_BITRATE_ILLEGAL_8 = RPC_SIO_BITRATE_14400,
  RPC_SIO_BITRATE_19200,
  RPC_SIO_BITRATE_38400,
  RPC_SIO_BITRATE_57600,
  RPC_SIO_BITRATE_76800,
  RPC_SIO_BITRATE_ILLEGAL_9 = RPC_SIO_BITRATE_76800,
  RPC_SIO_BITRATE_115200,
  RPC_SIO_BITRATE_230400,
  RPC_SIO_BITRATE_ILLEGAL_2 = RPC_SIO_BITRATE_230400,
  RPC_SIO_BITRATE_460800,
  RPC_SIO_BITRATE_ILLEGAL_10 = RPC_SIO_BITRATE_460800,
  RPC_SIO_BITRATE_921600,
  RPC_SIO_BITRATE_2900000,
  RPC_SIO_BITRATE_3200000,
  RPC_SIO_BITRATE_3686400,
  RPC_SIO_BITRATE_4000000,
  RPC_SIO_BITRATE_HS_CUSTOM,
  RPC_SIO_BITRATE_ILLEGAL_11 = RPC_SIO_BITRATE_HS_CUSTOM,
  RPC_SIO_BITRATE_BEST = 32766,
  RPC_SIO_BITRATE_MAX = 32767
};

enum rpc_sio_port_id_type {
  RPC_SIO_PORT_NULL = 0,
  RPC_SIO_PORT_UART_MAIN = 257,
  RPC_SIO_PORT_UART_AUX = 258,
  RPC_SIO_PORT_UART_THIRD = 259,
  RPC_SIO_PORT_UART_GEN_4 = 260,
  RPC_SIO_PORT_UART_GEN_5 = 261,
  RPC_SIO_PORT_UART_GEN_6 = 262,
  RPC_SIO_PORT_UART_GEN_7 = 263,
  RPC_SIO_PORT_USB_MDM = 513,
  RPC_SIO_PORT_USB_CDC_ACM = RPC_SIO_PORT_USB_MDM,
  RPC_SIO_PORT_USB_SER1 = 514,
  RPC_SIO_PORT_USB_DIAG = RPC_SIO_PORT_USB_SER1,
  RPC_SIO_PORT_USB_MMC = 517,
  RPC_SIO_PORT_USB_SER2 = 515,
  RPC_SIO_PORT_USB_NMEA = RPC_SIO_PORT_USB_SER2,
  RPC_SIO_PORT_USB_RRDM = 518,
  RPC_SIO_PORT_USB_NET_WWAN = 775,
  RPC_SIO_PORT_USB_RMNET2 = 776,
  RPC_SIO_PORT_USB_RMNET3 = 777,
  RPC_SIO_PORT_USB_SER3 = 516,
  RPC_SIO_PORT_USB_BREW_EXTENDED_DATA = 522,
  RPC_SIO_PORT_USB_BREW_EXTENDED_NOTIFICATION = 523,
  RPC_SIO_PORT_USB_GEN_12 = 524,
  RPC_SIO_PORT_USB_GEN_13 = 525,
  RPC_SIO_PORT_USB_GEN_14 = 526,
  RPC_SIO_PORT_USB_GEN_15 = 527,
  RPC_SIO_PORT_SMD_FIRST = 1025,
  RPC_SIO_PORT_SMD_DS = RPC_SIO_PORT_SMD_FIRST,
  RPC_SIO_PORT_SMD_DIAG = 1026,
  RPC_SIO_PORT_SMD_DIAG_APPS = 2818,
  RPC_SIO_PORT_SMD_DIAG_MODEM = 3074,
  RPC_SIO_PORT_SMD_DIAG_QDSP = 3330,
  RPC_SIO_PORT_SMD_RPC_CALL = 1030,
  RPC_SIO_PORT_SMD_RPC_REPLY = 1031,
  RPC_SIO_PORT_SMD_BT = 1032,
  RPC_SIO_PORT_SMD_CONTROL = 1033,
  RPC_SIO_PORT_SMD_MEMCPY_SPARE1 = 1034,
  RPC_SIO_PORT_SMD_DATA_FIRST = 1035,
  RPC_SIO_PORT_SMD_DATA1 = RPC_SIO_PORT_SMD_DATA_FIRST,
  RPC_SIO_PORT_SMD_WINMOB_MODEM_PORT1 = RPC_SIO_PORT_SMD_DATA1,
  RPC_SIO_PORT_SMD_DATA2 = 1036,
  RPC_SIO_PORT_SMD_WINMOB_MODEM_PORT2 = RPC_SIO_PORT_SMD_DATA2,
  RPC_SIO_PORT_SMD_DATA3 = 1037,
  RPC_SIO_PORT_SMD_WINMOB_MODEM_PORT3 = RPC_SIO_PORT_SMD_DATA3,
  RPC_SIO_PORT_SMD_DATA4 = 1038,
  RPC_SIO_PORT_SMD_WINMOB_MODEM_PORT4 = RPC_SIO_PORT_SMD_DATA4,
  RPC_SIO_PORT_SMD_DATA5 = 1039,
  RPC_SIO_PORT_SMD_WINMOB_QMI_WWAN = RPC_SIO_PORT_SMD_DATA5,
  RPC_SIO_PORT_SMD_RMNET1 = RPC_SIO_PORT_SMD_DATA5,
  RPC_SIO_PORT_SMD_DATA6 = 1040,
  RPC_SIO_PORT_SMD_RMNET2 = RPC_SIO_PORT_SMD_DATA6,
  RPC_SIO_PORT_SMD_DATA7 = 1041,
  RPC_SIO_PORT_SMD_RMNET3 = RPC_SIO_PORT_SMD_DATA7,
  RPC_SIO_PORT_SMD_DATA8 = 1042,
  RPC_SIO_PORT_SMD_RMNET4 = RPC_SIO_PORT_SMD_DATA8,
  RPC_SIO_PORT_SMD_DATA9 = 1043,
  RPC_SIO_PORT_SMD_RMNET5 = RPC_SIO_PORT_SMD_DATA9,
  RPC_SIO_PORT_SMD_DATA10 = 1044,
  RPC_SIO_PORT_SMD_WINMOB_QVP_MVS = RPC_SIO_PORT_SMD_DATA10,
  RPC_SIO_PORT_SMD_DATA11 = 1045,
  RPC_SIO_PORT_SMD_WINMOB_QVP_DATA = RPC_SIO_PORT_SMD_DATA11,
  RPC_SIO_PORT_SMD_DATA12 = 1046,
  RPC_SIO_PORT_SMD_RMNET6 = RPC_SIO_PORT_SMD_DATA12,
  RPC_SIO_PORT_SMD_DATA13 = 1047,
  RPC_SIO_PORT_SMD_RMNET7 = RPC_SIO_PORT_SMD_DATA13,
  RPC_SIO_PORT_SMD_DATA14 = 1048,
  RPC_SIO_PORT_SMD_RMNET8 = RPC_SIO_PORT_SMD_DATA14,
  RPC_SIO_PORT_SMD_DATA15 = 1049,
  RPC_SIO_PORT_SMD_DATA16 = 1050,
  RPC_SIO_PORT_SMD_DATA17 = 1051,
  RPC_SIO_PORT_SMD_DATA18 = 1052,
  RPC_SIO_PORT_SMD_DATA19 = 1053,
  RPC_SIO_PORT_SMD_DATA20 = 1054,
  RPC_SIO_PORT_SMD_DATA21 = 1055,
  RPC_SIO_PORT_SMD_DATA22 = 1056,
  RPC_SIO_PORT_SMD_DATA23 = 1057,
  RPC_SIO_PORT_SMD_DATA24 = 1058,
  RPC_SIO_PORT_SMD_DATA25 = 1059,
  RPC_SIO_PORT_SMD_DATA26 = 1060,
  RPC_SIO_PORT_SMD_DATA27 = 1061,
  RPC_SIO_PORT_SMD_DATA28 = 1062,
  RPC_SIO_PORT_SMD_DATA29 = 1063,
  RPC_SIO_PORT_SMD_DATA30 = 1064,
  RPC_SIO_PORT_SMD_DATA31 = 1065,
  RPC_SIO_PORT_SMD_DATA32 = 1066,
  RPC_SIO_PORT_SMD_DATA33 = 1067,
  RPC_SIO_PORT_SMD_DATA34 = 1068,
  RPC_SIO_PORT_SMD_DATA35 = 1069,
  RPC_SIO_PORT_SMD_DATA36 = 1070,
  RPC_SIO_PORT_SMD_DATA37 = 1071,
  RPC_SIO_PORT_SMD_DATA38 = 1072,
  RPC_SIO_PORT_SMD_DATA39 = 1073,
  RPC_SIO_PORT_SMD_DATA40 = 1074,
  RPC_SIO_PORT_SMD_GPS_NMEA = 1075,
  RPC_SIO_PORT_SMD_DATA_LAST = RPC_SIO_PORT_SMD_GPS_NMEA,
  RPC_SIO_PORT_SMD_BRIDGE_LEGACY = 1280,
  RPC_SIO_PORT_SMD_BRIDGE_FIRST = 1281,
  RPC_SIO_PORT_SMD_BRIDGE_1 = RPC_SIO_PORT_SMD_BRIDGE_FIRST,
  RPC_SIO_PORT_SMD_BRIDGE_2 = 1282,
  RPC_SIO_PORT_SMD_BRIDGE_3 = 1283,
  RPC_SIO_PORT_SMD_BRIDGE_4 = 1284,
  RPC_SIO_PORT_SMD_BRIDGE_5 = 1285,
  RPC_SIO_PORT_SMD_BRIDGE_LAST = RPC_SIO_PORT_SMD_BRIDGE_5,
  RPC_SIO_PORT_SMD_BRIDGE_TO_LEGACY = 2560,
  RPC_SIO_PORT_SMD_BRIDGE_TO_APPS = 2571,
  RPC_SIO_PORT_SMD_BRIDGE_TO_MODEM = 2572,
  RPC_SIO_PORT_SMD_BRIDGE_TO_QDSP6 = 2573,
  RPC_SIO_PORT_SMEM_DS = 1537,
  RPC_SIO_PORT_BT_SPP = 1793,
  RPC_SIO_PORT_BT_NA = 1794,
  RPC_SIO_PORT_LSM_CSD = 2049,
  RPC_SIO_PORT_APS_SERIAL_VSP = 2305,
  RPC_SIO_PORT_QMIP = 0,
  RPC_SIO_PORT_A2_MDM = 3584,
  RPC_SIO_PORT_A2_RMNET_1 = 3585,
  RPC_SIO_PORT_A2_RMNET_2 = 3586,
  RPC_SIO_PORT_A2_RMNET_3 = 3587,
  RPC_SIO_PORT_A2_GEN_4 = 3588,
  RPC_SIO_PORT_A2_GEN_5 = 3589,
  RPC_SIO_PORT_A2_GEN_6 = 3590,
  RPC_SIO_PORT_A2_GEN_7 = 3591,
  RPC_SIO_PORT_DATA_MUX_1 = 3841,
  RPC_SIO_PORT_DATA_MUX_2 = 3842,
  RPC_SIO_PORT_DATA_MUX_3 = 3843,
  RPC_SIO_PORT_DATA_MUX_4 = 3844,
  RPC_SIO_PORT_DATA_MUX_5 = 3845,
  RPC_SIO_PORT_DATA_MUX_6 = 3846,
  RPC_SIO_PORT_DATA_MUX_7 = 3847,
  RPC_SIO_PORT_DATA_MUX_8 = 3848,
  RPC_SIO_PORT_DATA_MUX_9 = 3849,
  RPC_SIO_PORT_DATA_MUX_10 = 3850,
  RPC_SIO_PORT_DATA_MUX_11 = 3851,
  RPC_SIO_PORT_DATA_MUX_12 = 3852,
  RPC_SIO_PORT_DATA_MUX_13 = 3853,
  RPC_SIO_PORT_DATA_MUX_14 = 3854,
  RPC_SIO_PORT_DATA_MUX_15 = 3855,
  RPC_SIO_PORT_DATA_MUX_16 = 3856
};

enum rpc_sio_ioctl_cmd_type {
  RPC_SIO_IOCTL_CD_ASSERT = 0,
  RPC_SIO_IOCTL_CD_DEASSERT,
  RPC_SIO_IOCTL_GET_CURRENT_CD,
  RPC_SIO_IOCTL_RI_ASSERT,
  RPC_SIO_IOCTL_RI_DEASSERT,
  RPC_SIO_IOCTL_GET_CURRENT_RI,
  RPC_SIO_IOCTL_ENABLE_DTR_EVENT,
  RPC_SIO_IOCTL_DISABLE_DTR_EVENT,
  RPC_SIO_IOCTL_INBOUND_FLOW_ENABLE,
  RPC_SIO_IOCTL_INBOUND_FLOW_DISABLE,
  RPC_SIO_IOCTL_DSR_ASSERT,
  RPC_SIO_IOCTL_DSR_DEASSERT,
  RPC_SIO_IOCTL_DTE_READY_ASSERTED,
  RPC_SIO_IOCTL_GET_CURRENT_RTS,
  RPC_SIO_IOCTL_SET_FLOW_CTL,
  RPC_SIO_IOCTL_GET_FLOW_CTL,
  RPC_SIO_IOCTL_ENABLE_AUTODETECT,
  RPC_SIO_IOCTL_RECORD_ESC_FUNC_PTR,
  RPC_SIO_IOCTL_RECORD_PKT_FUNC_PTR,
  RPC_SIO_IOCTL_BEGIN_FAX_IMAGE,
  RPC_SIO_IOCTL_CHANGE_BAUD_RATE,
  RPC_SIO_IOCTL_CHANGE_BAUD_NOW,
  RPC_SIO_IOCTL_FLUSH_TX,
  RPC_SIO_IOCTL_CHANGE_MODE,
  RPC_SIO_IOCTL_REG_TLP_CHANGE_CB,
  RPC_SIO_IOCTL_GET_PACKET_SIZE,
  RPC_SIO_IOCTL_SET_PACKET_SIZE,
  RPC_SIO_IOCTL_GET_BUFFER_SIZE,
  RPC_SIO_IOCTL_SET_BUFFER_SIZE,
  RPC_SIO_IOCTL_GET_XFR_MODE,
  RPC_SIO_IOCTL_SET_XFR_MODE,
  RPC_SIO_IOCTL_GET_XFR_TYPE,
  RPC_SIO_IOCTL_SET_XFR_TYPE,
  RPC_SIO_IOCTL_ENABLE_DTR_EVENT_EXT,
  RPC_SIO_IOCTL_DISABLE_DTR_EVENT_EXT,
  RPC_SIO_IOCTL_ENABLE_CD_EVENT_EXT,
  RPC_SIO_IOCTL_DISABLE_CD_EVENT_EXT,
  RPC_SIO_IOCTL_ENABLE_RI_EVENT_EXT,
  RPC_SIO_IOCTL_DISABLE_RI_EVENT_EXT,
  RPC_SIO_IOCTL_SET_DROP_PEND,
  RPC_SIO_IOCTL_GET_DROP_PEND,
  RPC_SIO_IOCTL_BT_CONFIGURE,
  RPC_SIO_IOCTL_BT_DISCONNECT,
  RPC_SIO_IOCTL_BT_GET_STATUS,
  RPC_SIO_IOCTL_POWERDOWN,
  RPC_SIO_IOCTL_WAKEUP,
  RPC_SIO_IOCTL_TX_START_BREAK,
  RPC_SIO_IOCTL_TX_END_BREAK,
  RPC_SIO_IOCTL_RX_HIGH_EVENT,
  RPC_SIO_IOCTL_CHECK_RX_STATE,
  RPC_SIO_IOCTL_WM_SET_WAIT,
  RPC_SIO_IOCTL_WM_GET_WAIT,
  RPC_SIO_IOCTL_NETWORK_CONNECTION_NOTIF,
  RPC_SIO_IOCTL_CONNECTION_SPEED_CHANGE_NOTIF,
  RPC_SIO_IOCTL_ENABLE_SET_PACKET_FILTER_EVENT,
  RPC_SIO_IOCTL_GET_MAC_ADDRESS,
  RPC_SIO_IOCTL_IS_STANDARD_ECM
};

typedef rpc_word rpc_sio_ioctl_default_param_type;

struct rpc_sio_ioctl_connection_speed_change_notif {
  rpc_uint32 upstream_bitrate;
  rpc_uint32 downstream_bitrate;
};

typedef struct rpc_sio_ioctl_connection_speed_change_notif rpc_sio_ioctl_connection_speed_change_notif_type;

union rpc_sio_ioctl_param switch (rpc_sio_ioctl_cmd_type disc) {
  case RPC_SIO_IOCTL_CHANGE_BAUD_NOW:
    rpc_sio_ioctl_default_param_type rearm_autobaud;
  case RPC_SIO_IOCTL_NETWORK_CONNECTION_NOTIF:
    rpc_boolean link_up;
  case RPC_SIO_IOCTL_CONNECTION_SPEED_CHANGE_NOTIF:
    rpc_sio_ioctl_connection_speed_change_notif_type connection_speed_change_notif;
  case RPC_SIO_IOCTL_GET_MAC_ADDRESS:
    opaque mac_address[13];
  case RPC_SIO_IOCTL_IS_STANDARD_ECM:
    rpc_boolean is_standard_ecm;
  default:
    void;
};

typedef union rpc_sio_ioctl_param rpc_sio_ioctl_param_type;

enum rpc_smd_bridge_remote_cmd_type {
  RPC_SMD_BRIDGE_CMD_CONNECT = 0,
  RPC_SMD_BRIDGE_CMD_DISCONNECT,
  RPC_SMD_BRIDGE_CMD_IOCTL
};

enum rpc_smd_bridge_callback_type {
  RPC_SMD_BRIDGE_SERVER_CALLBACK = 0,
  RPC_SMD_BRIDGE_CLOSE_CALLBACK,
  RPC_SMD_BRIDGE_IOCTL_CALLBACK
};

enum rpc_smd_bridge_remote_cmd_ret_type {
  RPC_SMD_BRIDGE_CMD_SUCCEEDED = 0,
  RPC_SMD_BRIDGE_CMD_INVOKE_CB,
  RPC_SMD_BRIDGE_CMD_FAILED
};

struct rpc_smd_bridge_open {
  rpc_sio_stream_mode_type stream_mode;
  rpc_sio_bitrate_type rx_bitrate;
  rpc_sio_bitrate_type tx_bitrate;
  rpc_sio_port_id_type port_id;
  rpc_boolean tail_char_used;
  rpc_byte tail_char;
  rpc_sio_flow_ctl_type tx_flow;
  rpc_sio_flow_ctl_type rx_flow;
  rpc_boolean control;
};

typedef struct rpc_smd_bridge_open rpc_smd_bridge_open_type;

struct rpc_smd_bridge_ioctl_cmd {
  rpc_sio_ioctl_cmd_type cmd;
  rpc_sio_ioctl_param_type *param;
};

typedef struct rpc_smd_bridge_ioctl_cmd rpc_smd_bridge_ioctl_cmd_type;

union rpc_struct_smd_bridge_remote_cmd_param_param switch (rpc_smd_bridge_remote_cmd_type disc) {
  case RPC_SMD_BRIDGE_CMD_CONNECT:
    rpc_smd_bridge_open_type open_struct;
  case RPC_SMD_BRIDGE_CMD_IOCTL:
    rpc_smd_bridge_ioctl_cmd_type ioctl_struct;
  default:
    rpc_uint8 dummy;
};

struct rpc_smd_bridge_remote_cmd_param {
  rpc_smd_bridge_remote_cmd_type cmd;
  rpc_uint32 bridge_id;
  rpc_uint32 proc_major_id;
  rpc_uint32 rsvd;
  rpc_struct_smd_bridge_remote_cmd_param_param param;
};

typedef struct rpc_smd_bridge_remote_cmd_param rpc_smd_bridge_remote_cmd_param_type;

typedef rpc_uint32 rpc_smd_bridge_server_receive_f_type_args_arg2;

typedef rpc_uint32 rpc_smd_bridge_forward_callback_f_type_args_arg3;

typedef rpc_uint32 rpc_smd_bridge_receive_cmd_modem_args_data;

typedef rpc_uint32 rpc_smd_bridge_register_server_modem_args_data;

typedef rpc_uint32 rpc_smd_bridge_register_forward_callback_modem_args_data;

typedef rpc_uint32 rpc_smd_bridge_forward_callback_modem_args_data;

