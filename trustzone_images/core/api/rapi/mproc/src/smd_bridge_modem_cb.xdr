/* SMD_BRIDGE_MODEM TOOL VERSION: 4.41 */
/* GENERATED: TUE JUL 20 2010 */
/*=============================================================================
                 S M D _ B R I D G E _ M O D E M _ C B . X D R

GENERAL DESCRIPTION
  This is an AUTO GENERATED file that provides an xdr compatible definition of
  an api that represents the grouping of the different callback functions the
  smd_bridge_modem API supports.

  ---------------------------------------------------------------------------
  Copyright (c) 2010 QUALCOMM Incorporated.
  All Rights Reserved. QUALCOMM Proprietary and Confidential.
  ---------------------------------------------------------------------------
=============================================================================*/

/*=============================================================================

                              Edit History

                             AUTO GENERATED

Generated by following versions of Htorpc modules:
Id: //source/qcom/qct/core/mproc/tools/rel/05.02/htorpc/htorpc.pl#2 
Id: //source/qcom/qct/core/mproc/tools/rel/05.02/htorpc/lib/Htorpc/Start.pm#1 
Id: //source/qcom/qct/core/mproc/tools/rel/05.02/htorpc/lib/Htorpc/Htoxdr.pm#1 
Id: //source/qcom/qct/core/mproc/tools/rel/05.02/htorpc/lib/Htorpc/XDR.pm#2 
Id: //source/qcom/qct/core/mproc/tools/rel/05.02/htorpc/lib/Htorpc/Output.pm#3 
Id: //source/qcom/qct/core/mproc/tools/rel/05.02/htorpc/lib/Htorpc/Parser.pm#2 
Id: //source/qcom/qct/core/mproc/tools/rel/05.02/htorpc/lib/Htorpc/Metacomments.pm#1 
Id: //source/qcom/qct/core/mproc/tools/rel/05.02/htorpc/lib/Htorpc/SymbolTable.pm#1  

smd_bridge_modem Definition File(s):
Id: //source/qcom/qct/core/api/mproc/rel/05.02/smd_bridge_modem.h#2
=============================================================================*/
/*=============================================================================
$Header$ 
=============================================================================*/




/*
 * These are struct declarations for the function arguments
 */

struct rpc_smd_bridge_server_receive_f_type_args {
  rpc_uint32 cb_id;
  rpc_smd_bridge_remote_cmd_param_type arg1;
  rpc_smd_bridge_server_receive_f_type_args_arg2 arg2;
};

struct rpc_smd_bridge_forward_callback_f_type_args {
  rpc_uint32 cb_id;
  rpc_uint32 arg1;
  rpc_smd_bridge_callback_type arg2;
  rpc_smd_bridge_forward_callback_f_type_args_arg3 arg3;
};





/*
 * These are struct declaratios for the function results
 */

struct rpc_smd_bridge_server_receive_f_type_rets {
  rpc_smd_bridge_remote_cmd_ret_type smd_bridge_server_receive_f_type_result;
};

struct rpc_smd_bridge_forward_callback_f_type_rets {
  rpc_boolean smd_bridge_forward_callback_f_type_result;
};



/*
 * XDR definition of the SMD_BRIDGE_MODEM callback program ( vers. 0x00040001 )
 */

program SMD_BRIDGE_MODEMCBPROG {
  version SMD_BRIDGE_MODEMCBVERS_0001 {

	rpc_smd_bridge_forward_callback_f_type_rets
		rpc_smd_bridge_forward_callback_f_type( rpc_smd_bridge_forward_callback_f_type_args ) = 3;

	rpc_smd_bridge_server_receive_f_type_rets
		rpc_smd_bridge_server_receive_f_type( rpc_smd_bridge_server_receive_f_type_args ) = 4;




  } = 0x00040001;
} = 0x310000A1;

const SMD_BRIDGE_MODEMCBVERS = 0x00040001;
