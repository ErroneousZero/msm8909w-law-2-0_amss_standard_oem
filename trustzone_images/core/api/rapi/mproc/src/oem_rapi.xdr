/* OEM_RAPI TOOL VERSION: 4.30 */
/*=============================================================================
                            O E M _ R A P I . X D R

GENERAL DESCRIPTION
  This is an AUTO GENERATED file that provides an xdr compatible definition of
  the oem_rapi API.

  ---------------------------------------------------------------------------
  Copyright (c) 2009 QUALCOMM Incorporated.
  All Rights Reserved. QUALCOMM Proprietary and Confidential.
  ---------------------------------------------------------------------------
=============================================================================*/

/*=============================================================================

                              Edit History

                             AUTO GENERATED

Generated by following versions of Htorpc modules:
Id: //source/qcom/qct/core/mproc/tools/rel/04.01/htorpc/htorpc.pl#11 
Id: //source/qcom/qct/core/mproc/tools/rel/04.01/htorpc/lib/Htorpc/Start.pm#2 
Id: //source/qcom/qct/core/mproc/tools/rel/04.01/htorpc/lib/Htorpc/Htoxdr.pm#1 
Id: //source/qcom/qct/core/mproc/tools/rel/04.01/htorpc/lib/Htorpc/XDR.pm#6 
Id: //source/qcom/qct/core/mproc/tools/rel/04.01/htorpc/lib/Htorpc/Output.pm#20 
Id: //source/qcom/qct/core/mproc/tools/rel/04.01/htorpc/lib/Htorpc/Parser.pm#1 
Id: //source/qcom/qct/core/mproc/tools/rel/04.01/htorpc/lib/Htorpc/Metacomments.pm#3 
Id: //source/qcom/qct/core/mproc/tools/rel/04.01/htorpc/lib/Htorpc/SymbolTable.pm#2 

=============================================================================*/
/*=============================================================================
$Header$ 
=============================================================================*/



typedef rpc_uint32 rpc_oem_rapi_api_versions_return_type<>;

/*
 * Declare an rpc_uint32 type for each callback type in the API
 */
typedef rpc_uint32 rpc_oem_rapi_streaming_cb_type;



/*
 * These are struct declarations for the function arguments
 */

struct rpc_oem_rapi_streaming_function_args {
  rpc_oem_rapi_client_event_e_type event;
  rpc_oem_rapi_streaming_cb_type callback;
  rpc_oem_rapi_streaming_function_args_handle handle;
  rpc_uint32 in_len;
  opaque input<OEM_RAPI_MAX_CLIENT_INPUT_BUFFER_SIZE>;
  rpc_boolean out_len_not_null;
  unsigned int output_max_length;
};



struct rpc_oem_rapi_api_version_s_args {
  rpc_boolean len_not_null;
};

/*
 * These are struct declarations for the function results
 */

struct rpc_oem_rapi_rpc_glue_code_info_remote_rets {
  rpc_uint32 toolvers;   /* Tool version */
  rpc_uint32 features;   /* Features turned on in the code.
                          * 0x00000001    ONCRPC Server Cleanup Support
                          */
  rpc_uint32 proghash;   /* Unique hash value for the API XDR definition */
  rpc_uint32 cbproghash; /* Unique hash value for the Callbacks' XDR definition */
};

struct rpc_oem_rapi_streaming_function_rets {
  rpc_uint32 *out_len;
  opaque output<OEM_RAPI_MAX_CLIENT_OUTPUT_BUFFER_SIZE>;
};

 struct rpc_oem_rapi_api_versions_rets {
  rpc_oem_rapi_api_versions_return_type oem_rapi_api_versions_result;
  rpc_uint32 *len;
};

/*
 * XDR definition of the OEM_RAPI program ( vers. 0x00010001 )
 */

program OEM_RAPIPROG {
  version OEM_RAPIVERS_0001 {

    void
      rpc_oem_rapi_null( void ) = 0;

    rpc_oem_rapi_rpc_glue_code_info_remote_rets
      rpc_oem_rapi_rpc_glue_code_info_remote( void ) = 1;

    rpc_oem_rapi_streaming_function_rets
      rpc_oem_rapi_streaming_function( rpc_oem_rapi_streaming_function_args ) = 2;

      rpc_oem_rapi_api_versions_rets
      rpc_oem_rapi_api_versions( void ) = 0xffffffff;


  } = 0x00010001;
} = 0x3000006b;

const OEM_RAPIVERS = 0x00010001;
