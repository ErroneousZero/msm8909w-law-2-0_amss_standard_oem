/* SMD_BRIDGE_MODEM TOOL VERSION: 4.41 */
/* GENERATED: TUE JUL 20 2010 */
/*=============================================================================
                    S M D _ B R I D G E _ M O D E M . X D R

GENERAL DESCRIPTION
  This is an AUTO GENERATED file that provides an xdr compatible definition of
  the smd_bridge_modem API.

  ---------------------------------------------------------------------------
  Copyright (c) 2010 QUALCOMM Incorporated.
  All Rights Reserved. QUALCOMM Proprietary and Confidential.
  ---------------------------------------------------------------------------
=============================================================================*/

/*=============================================================================

                              Edit History

                             AUTO GENERATED

Generated by following versions of Htorpc modules:
Id: //source/qcom/qct/core/mproc/tools/rel/05.02/htorpc/htorpc.pl#2 
Id: //source/qcom/qct/core/mproc/tools/rel/05.02/htorpc/lib/Htorpc/Start.pm#1 
Id: //source/qcom/qct/core/mproc/tools/rel/05.02/htorpc/lib/Htorpc/Htoxdr.pm#1 
Id: //source/qcom/qct/core/mproc/tools/rel/05.02/htorpc/lib/Htorpc/XDR.pm#2 
Id: //source/qcom/qct/core/mproc/tools/rel/05.02/htorpc/lib/Htorpc/Output.pm#3 
Id: //source/qcom/qct/core/mproc/tools/rel/05.02/htorpc/lib/Htorpc/Parser.pm#2 
Id: //source/qcom/qct/core/mproc/tools/rel/05.02/htorpc/lib/Htorpc/Metacomments.pm#1 
Id: //source/qcom/qct/core/mproc/tools/rel/05.02/htorpc/lib/Htorpc/SymbolTable.pm#1  

smd_bridge_modem Definition File(s):
Id: //source/qcom/qct/core/api/mproc/rel/05.02/smd_bridge_modem.h#2
=============================================================================*/
/*=============================================================================
$Header$ 
=============================================================================*/



typedef rpc_uint32 rpc_smd_bridge_modem_api_versions_return_type<>;

/*
 * Declare an rpc_uint32 type for each callback type in the API
 */
typedef rpc_uint32 rpc_smd_bridge_server_receive_f_type;

typedef rpc_uint32 rpc_smd_bridge_forward_callback_f_type;



/*
 * These are struct declarations for the function arguments
 */

struct rpc_smd_bridge_receive_cmd_modem_args {
  rpc_smd_bridge_remote_cmd_param_type param;
  rpc_smd_bridge_receive_cmd_modem_args_data data;
};

struct rpc_smd_bridge_register_server_modem_args {
  rpc_smd_bridge_server_receive_f_type server_cb;
  rpc_uint32 proc_id;
  rpc_smd_bridge_register_server_modem_args_data data;
};

struct rpc_smd_bridge_register_forward_callback_modem_args {
  rpc_smd_bridge_forward_callback_f_type forward_cb;
  rpc_uint32 proc_id;
  rpc_smd_bridge_register_forward_callback_modem_args_data data;
};

struct rpc_smd_bridge_forward_callback_modem_args {
  rpc_uint32 bridge_id;
  rpc_smd_bridge_callback_type callback;
  rpc_smd_bridge_forward_callback_modem_args_data data;
};



struct rpc_smd_bridge_modem_api_version_s_args {
  rpc_boolean len_not_null;
};

/*
 * These are struct declarations for the function results
 */

struct rpc_smd_bridge_modem_rpc_glue_code_info_remote_rets {
  rpc_uint32 toolvers;   /* Tool version */
  rpc_uint32 features;   /* Features turned on in the code.
                          * 0x00000001    ONCRPC Server Cleanup Support
                          */
  rpc_uint32 proghash;   /* Unique hash value for the API XDR definition */
  rpc_uint32 cbproghash; /* Unique hash value for the Callbacks' XDR definition */
};

struct rpc_smd_bridge_receive_cmd_modem_rets {
  rpc_smd_bridge_remote_cmd_ret_type smd_bridge_receive_cmd_modem_result;
};

struct rpc_smd_bridge_register_server_modem_rets {
  rpc_boolean smd_bridge_register_server_modem_result;
};

struct rpc_smd_bridge_register_forward_callback_modem_rets {
  rpc_boolean smd_bridge_register_forward_callback_modem_result;
};

struct rpc_smd_bridge_forward_callback_modem_rets {
  rpc_boolean smd_bridge_forward_callback_modem_result;
};

 struct rpc_smd_bridge_modem_api_versions_rets {
  rpc_smd_bridge_modem_api_versions_return_type smd_bridge_modem_api_versions_result;
  rpc_uint32 *len;
};

/*
 * XDR definition of the SMD_BRIDGE_MODEM program ( vers. 0x00040001 )
 */

program SMD_BRIDGE_MODEMPROG {
  version SMD_BRIDGE_MODEMVERS_0001 {

	void
		rpc_smd_bridge_modem_null( void ) = 0;

	rpc_smd_bridge_modem_rpc_glue_code_info_remote_rets
		rpc_smd_bridge_modem_rpc_glue_code_info_remote( void ) = 1;

	rpc_smd_bridge_receive_cmd_modem_rets
		rpc_smd_bridge_receive_cmd_modem( rpc_smd_bridge_receive_cmd_modem_args ) = 2;

	rpc_smd_bridge_register_server_modem_rets
		rpc_smd_bridge_register_server_modem( rpc_smd_bridge_register_server_modem_args ) = 3;

	rpc_smd_bridge_register_forward_callback_modem_rets
		rpc_smd_bridge_register_forward_callback_modem( rpc_smd_bridge_register_forward_callback_modem_args ) = 4;

	rpc_smd_bridge_forward_callback_modem_rets
		rpc_smd_bridge_forward_callback_modem( rpc_smd_bridge_forward_callback_modem_args ) = 5;

	rpc_smd_bridge_modem_api_versions_rets
		rpc_smd_bridge_modem_api_versions( void ) = 0xFFFFFFFF;




  } = 0x00040001;
} = 0x300000A1;

const SMD_BRIDGE_MODEMVERS = 0x00040001;
