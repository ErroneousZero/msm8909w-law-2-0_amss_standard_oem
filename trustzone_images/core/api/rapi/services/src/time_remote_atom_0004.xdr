/*=============================================================================
                              G O L D E N   X D R 

 DESCRIPTION
  This file is Auto-Generated by HTORPC Tool and contains the XDR 
  (External Data Representation) This file is used as a backwards
  compatibility reference for the generation of new versions of the
  API.

  ---------------------------------------------------------------------------
  Copyright (c) 2010 QUALCOMM Incorporated.
  All Rights Reserved. QUALCOMM Proprietary and Confidential.
  ---------------------------------------------------------------------------
=========================================================================== */




/* BEGIN_COMMON_XDR */




/* TIME_REMOTE_ATOM TOOL VERSION: 4.39 */
/* GENERATED: TUE AUG 17 2010 */
/*=============================================================================
             T I M E _ R E M O T E _ A T O M _ C O M M O N . X D R

GENERAL DESCRIPTION
  This is an AUTO GENERATED file that provides an xdr compatible definition of
  an api that represents the grouping of the different callback functions the
  time_remote_atom API supports.

  ---------------------------------------------------------------------------
  Copyright (c) 2009 QUALCOMM Incorporated.
  All Rights Reserved. QUALCOMM Proprietary and Confidential.
  ---------------------------------------------------------------------------
=============================================================================*/

/*=============================================================================

                              Edit History

                             AUTO GENERATED

Generated by following versions of Htorpc modules:
Id: //source/qcom/qct/core/mproc/tools/rel/04.01/htorpc/htorpc.pl#20 
Id: //source/qcom/qct/core/mproc/tools/rel/04.01/htorpc/lib/Htorpc/Start.pm#3 
Id: //source/qcom/qct/core/mproc/tools/rel/04.01/htorpc/lib/Htorpc/Htoxdr.pm#1 
Id: //source/qcom/qct/core/mproc/tools/rel/04.01/htorpc/lib/Htorpc/XDR.pm#7 
Id: //source/qcom/qct/core/mproc/tools/rel/04.01/htorpc/lib/Htorpc/Output.pm#29 
Id: //source/qcom/qct/core/mproc/tools/rel/04.01/htorpc/lib/Htorpc/Parser.pm#2 
Id: //source/qcom/qct/core/mproc/tools/rel/04.01/htorpc/lib/Htorpc/Metacomments.pm#6 
Id: //source/qcom/qct/core/mproc/tools/rel/04.01/htorpc/lib/Htorpc/SymbolTable.pm#3  

time_remote_atom Definition File(s):
Id: //depot/asic/msm7500/services/time/00.03/base/main/latest/src/time_remote_atom.h#5
=============================================================================*/
/*=============================================================================
$Header$ 
=============================================================================*/



const TIME_REMOTE_ATOM_TOOLVERS = 0x00040027;
const TIME_REMOTE_ATOM_FEATURES = 0x00000001;

const RPC_TIME_REMOTE_ATOM_RPC_GLUE_CODE_INFO_REMOTE_VERSION = 0x00040001;
const RPC_TIME_REMOTE_ATOM_NULL_VERSION = 0x00040001;
const RPC_TIME_REMOTE_SET_USER_TIME_VERSION = 0x00040001;
const RPC_TIME_ALARM_SET_VERSION = 0x00040001;
const RPC_TIME_GET_LOCAL_OFFSET_INFO_VERSION = 0x00040001;
const RPC_TIME_TOD_REQUEST_APPS_BASES_VERSION = 0x00040001;
const RPC_TIME_TOD_REQUEST_RESET_VERSION = 0x00040001;
const RPC_TIME_REMOTE_SET_JULIAN_VERSION = 0x00040001;
const RPC_TIME_REMOTE_GET_JULIAN_VERSION = 0x00040001;
const RPC_TIME_REMOTE_SECURE_SET_VERSION = 0x00040001;
const RPC_TIME_REMOTE_SECURE_GET_VERSION = 0x00040001;
const RPC_TIME_REMOTE_SECURE_GET_JULIAN_VERSION = 0x00040001;
const RPC_TIME_SECURE_VALID_VERSION = 0x00040001;
const RPC_TIME_ALARM_SET_MS_VERSION = 0x00040001;
const RPC_TIME_ALARM_SET_SECS_VERSION = 0x00040001;
const RPC_TIME_REMOTE_UPDATE_APPS_TO_MODEM_OFFSET_VERSION = 0x00040001;
const RPC_TIME_REMOTE_SECURE_SET_JULIAN_VERSION = 0x00040001;
const RPC_ATS_CLIENT_INIT_VERSION = 0x00040001;
const RPC_ATS_CLIENT_RELEASE_VERSION = 0x00040001;
const RPC_ATS_CLIENT_DEACTIVATE_VERSION = 0x00040001;
const RPC_ATS_CLIENT_REG_CFG_CB_VERSION = 0x00040001;
const RPC_ATS_CLIENT_ACTIVATE_VERSION = 0x00040001;
const RPC_TIME_REMOTE_GENOFF_OPR_VERSION = 0x00040001;
const RPC_TIME_REMOTE_ATOM_GENOFF_SET_GENERIC_OFFSET_VERSION = 0x00040001;

const RPC_ATS_CFG_EVENT_CB_TYPE_VERSION = 0x00040001;

const RPC_TIME_REMOTE_ATOMAPI_VERSION_IS_HASHKEY = 0;
const RPC_TIME_REMOTE_ATOM_API_MAJOR_NUM = 0x0004;

const RPC_TIME_REMOTE_ATOM_API_VERSIONS_VERSION = 0x00040001;
const RPC_TIMER_IPC_REMOTE_GET_VERSION = 0x00040002;
const RPC_TIMER_IPC_REMOTE_CLR_VERSION = 0x00040002;
const RPC_TIMER_IPC_REMOTE_RESUME_VERSION = 0x00040002;
const RPC_TIMER_IPC_REMOTE_SET_VERSION = 0x00040002;
const RPC_TIMER_IPC_REMOTE_PAUSE_VERSION = 0x00040002;
const RPC_TIME_REMOTE_ATOM_CB_NULL_VERSION = 0x00040002;
const RPC_TIME_REMOTE_GENOFF_SET_ALLOW_REMOTE_UPDATES_VERSION = 0x00040005;
typedef bool rpc_boolean;

enum rpc_timer_unit_type {
  RPC_T_SCLK,
  RPC_T_USEC,
  RPC_T_MSEC,
  RPC_T_SEC,
  RPC_T_MIN,
  RPC_T_HOUR,
  RPC_T_NONE = RPC_T_SCLK
};


/*Added rpc_timer_unit_type in Minor Rev 0x00000002*/



struct rpc_ats_timer_ipc_update_s {
  rpc_uint32 expired_handle;
};


/*Added rpc_ats_timer_ipc_update_s in Minor Rev 0x00000002*/


typedef unsigned long rpc_uint32;

typedef unsigned short rpc_uint16;

typedef unsigned char rpc_uint8;

typedef long rpc_int32;

typedef hyper rpc_int64;

typedef unsigned hyper rpc_uint64;

typedef unsigned long rpc_qword[2];

typedef rpc_qword rpc_time_type;

struct rpc_time_julian_type {
  rpc_uint16 year;
  rpc_uint16 month;
  rpc_uint16 day;
  rpc_uint16 hour;
  rpc_uint16 minute;
  rpc_uint16 second;
  rpc_uint16 day_of_week;
};

typedef rpc_uint32 rpc_timetick_type;

enum rpc_time_bases {
  RPC_ATS_RTC = 0,
  RPC_ATS_TOD,
  RPC_ATS_USER,
  RPC_ATS_SECURE,
  RPC_ATS_DRM,
  RPC_ATS_USER_UTC,
  RPC_ATS_USER_TZ_DL,
  RPC_ATS_GPS,
  RPC_ATS_1X,
  RPC_ATS_HDR,
  RPC_ATS_WCDMA,
  RPC_ATS_MFLO,
  RPC_ATS_INVALID = 268435456
};

/* In Enum rpc_time_bases following elements added
RPC_ATS_DRM
RPC_ATS_GPS
RPC_ATS_USER_UTC
RPC_ATS_USER_TZ_DL
RPC_ATS_WCDMA
RPC_ATS_1X
RPC_ATS_HDR
RPC_ATS_MFLO
in Minor Rev 0x00000004*/

typedef enum rpc_time_bases rpc_time_bases_type;

enum rpc_time_unit {
  RPC_TIME_STAMP,
  RPC_TIME_MSEC,
  RPC_TIME_SECS,
  RPC_TIME_JULIAN,
  RPC_TIME_20MS_FRAME,
  RPC_TIME_NONE
};

typedef enum rpc_time_unit rpc_time_unit_type;

enum rpc_time_genoff_opr {
  RPC_T_SET,
  RPC_T_GET,
  RPC_T_MAX
};

typedef enum rpc_time_genoff_opr rpc_time_genoff_opr_type;

enum rpc_base_time_source {
  RPC_TIME_SCLK,
  RPC_TIMETICK_SCLK64
};

typedef enum rpc_base_time_source rpc_base_time_source_type;

enum rpc_ats_cfg_event_e_type {
  RPC_ATS_CFG_EVENT_TOD_CHANGE = 0,
  RPC_ATS_CFG_EVENT_GENOFF_CHANGE,
  RPC_ATS_CFG_EVENT_TIMER_IPC_CHANGE,
  RPC_ATS_CFG_EVENT_MAX32 = 268435456
};

/* In Enum rpc_ats_cfg_event_e_type following elements added
RPC_ATS_CFG_EVENT_TIMER_IPC_CHANGE
in Minor Rev 0x00000002*/

struct rpc_ats_tod_update_s {
  rpc_timetick_type tick;
  rpc_time_type stamp;
  rpc_uint32 freq;
};

typedef struct rpc_ats_tod_update_s rpc_ats_tod_update_s_type;

struct rpc_ats_genoff_update_s {
  rpc_time_bases_type base_type;
  rpc_int64 offset;
};

typedef struct rpc_ats_genoff_update_s rpc_ats_genoff_update_s_type;

union rpc_ats_cfg_event_info_u switch (rpc_ats_cfg_event_e_type disc) {
  case RPC_ATS_CFG_EVENT_TOD_CHANGE:
    rpc_ats_tod_update_s_type ats_tod_update;
  case RPC_ATS_CFG_EVENT_GENOFF_CHANGE:
    rpc_ats_genoff_update_s_type ats_genoff_update;
  default:
    void;
};

typedef union rpc_ats_cfg_event_info_u rpc_ats_cfg_event_info_s_type;

enum rpc_ats_client_type_e_type {
  RPC_ATS_CLIENT_TYPE_GEN1 = 0,
  RPC_ATS_CLIENT_FLOATING1,
  RPC_ATS_CLIENT_FLOATING2,
  RPC_ATS_CLIENT_TYPE_INTERNAL,
  RPC_ATS_CLIENT_TYPE_GENOFF_UPDATE,
  RPC_ATS_CLIENT_TYPE_MM_GENOFF_UPDATE,
  RPC_ATS_CLIENT_TYPE_MAX32 = 268435456
};

/* In Enum rpc_ats_client_type_e_type following elements added
RPC_ATS_CLIENT_TYPE_MM_GENOFF_UPDATE
in Minor Rev 0x00000003*/

enum rpc_ats_client_processor_e_type {
  RPC_ATS_CLIENT_PROCESSOR_NONE = 0,
  RPC_ATS_CLIENT_PROCESSOR_MODEM,
  RPC_ATS_CLIENT_PROCESSOR_APP1,
  RPC_ATS_CLIENT_PROCESSOR_APP2,
  RPC_ATS_CLIENT_PROCESSOR_MM_MODEM,
  RPC_ATS_CLIENT_PROCESSOR_MAX32
};

/* In Enum rpc_ats_client_processor_e_type following elements added
RPC_ATS_CLIENT_PROCESSOR_MM_MODEM(Added before sentinel elements)
in Minor Rev 0x00000003*/

typedef rpc_uint8 rpc_ats_client_id_type;

enum rpc_ats_client_err_e_type {
  RPC_ATS_CLIENT_ERR_NONE,
  RPC_ATS_CLIENT_ERR_CLIENT_ID_PTR,
  RPC_ATS_CLIENT_ERR_CLIENT_TYPE,
  RPC_ATS_CLIENT_ERR_CLIENT_ID,
  RPC_ATS_CLIENT_ERR_TASK_NOT_READY,
  RPC_ATS_CLIENT_ERR_INVALID_PROCESSOR,
  RPC_ATS_CLIENT_ERR_UNSUPPORTED,
  RPC_ATS_CLIENT_ERR_GENERAL,
  RPC_ATS_CLIENT_ERR_RPC,
  RPC_ATS_CLIENT_ERR_ALREADY_REG,
  RPC_ATS_CLIENT_ERR_MAX32 = 268435456
};

union rpc_time_remote_opr switch (rpc_time_unit_type disc) {
  case RPC_TIME_20MS_FRAME:
    rpc_time_type timestamp;
  case RPC_TIME_JULIAN:
    rpc_time_julian_type julian;
  default:
    void;
};

typedef union rpc_time_remote_opr rpc_time_remote_opr_type;






/* END_COMMON_XDR */


/* BEGIN_FORWARD_XDR */




/* TIME_REMOTE_ATOM TOOL VERSION: 4.39 */
/* GENERATED: TUE AUG 17 2010 */
/*=============================================================================
                    T I M E _ R E M O T E _ A T O M . X D R

GENERAL DESCRIPTION
  This is an AUTO GENERATED file that provides an xdr compatible definition of
  the time_remote_atom API.

  ---------------------------------------------------------------------------
  Copyright (c) 2009 QUALCOMM Incorporated.
  All Rights Reserved. QUALCOMM Proprietary and Confidential.
  ---------------------------------------------------------------------------
=============================================================================*/

/*=============================================================================

                              Edit History

                             AUTO GENERATED

Generated by following versions of Htorpc modules:
Id: //source/qcom/qct/core/mproc/tools/rel/04.01/htorpc/htorpc.pl#20 
Id: //source/qcom/qct/core/mproc/tools/rel/04.01/htorpc/lib/Htorpc/Start.pm#3 
Id: //source/qcom/qct/core/mproc/tools/rel/04.01/htorpc/lib/Htorpc/Htoxdr.pm#1 
Id: //source/qcom/qct/core/mproc/tools/rel/04.01/htorpc/lib/Htorpc/XDR.pm#7 
Id: //source/qcom/qct/core/mproc/tools/rel/04.01/htorpc/lib/Htorpc/Output.pm#29 
Id: //source/qcom/qct/core/mproc/tools/rel/04.01/htorpc/lib/Htorpc/Parser.pm#2 
Id: //source/qcom/qct/core/mproc/tools/rel/04.01/htorpc/lib/Htorpc/Metacomments.pm#6 
Id: //source/qcom/qct/core/mproc/tools/rel/04.01/htorpc/lib/Htorpc/SymbolTable.pm#3  

time_remote_atom Definition File(s):
Id: //depot/asic/msm7500/services/time/00.03/base/main/latest/src/time_remote_atom.h#5
=============================================================================*/
/*=============================================================================
$Header$ 
=============================================================================*/



typedef rpc_uint32 rpc_time_remote_atom_api_versions_return_type<>;

/*
 * Declare an rpc_uint32 type for each callback type in the API
 */
typedef rpc_uint32 rpc_ats_cfg_event_cb_type;



/*
 * These are struct declarations for the function arguments
 */

/*Added rpc_time_remote_genoff_set_allow_remote_updates_args in Minor Rev 0x00000005*/

struct rpc_time_remote_genoff_set_allow_remote_updates_args {
  rpc_uint32 curbs;
};


/*Added rpc_timer_ipc_remote_get_args in Minor Rev 0x00000002*/

struct rpc_timer_ipc_remote_get_args {
  rpc_uint32 handle;
  rpc_timer_unit_type unit;
  rpc_boolean retval_not_null;
};


/*Added rpc_timer_ipc_remote_pause_args in Minor Rev 0x00000002*/

struct rpc_timer_ipc_remote_pause_args {
  rpc_uint32 handle;
};


/*Added rpc_timer_ipc_remote_resume_args in Minor Rev 0x00000002*/

struct rpc_timer_ipc_remote_resume_args {
  rpc_uint32 handle;
};


/*Added rpc_timer_ipc_remote_clr_args in Minor Rev 0x00000002*/

struct rpc_timer_ipc_remote_clr_args {
  rpc_uint32 handle;
  rpc_timer_unit_type unit;
  rpc_boolean retval_not_null;
};


/*Added rpc_timer_ipc_remote_set_args in Minor Rev 0x00000002*/

struct rpc_timer_ipc_remote_set_args {
  rpc_timetick_type time;
  rpc_timetick_type reload;
  rpc_timer_unit_type unit;
  rpc_boolean defer;
  rpc_ats_cfg_event_cb_type cfg_cb;
  rpc_boolean handle_not_null;
};


struct rpc_time_remote_set_user_time_args {
  rpc_time_type ts_val;
};

struct rpc_time_alarm_set_args {
  rpc_uint32 expiration;
};

struct rpc_time_get_local_offset_info_args {
  rpc_boolean local_timezone_not_null;
  rpc_boolean daylight_savings_not_null;
};

struct rpc_time_remote_set_julian_args {
  rpc_time_julian_type *jul_time;
};

struct rpc_time_remote_get_julian_args {
  rpc_boolean jul_time_not_null;
};

struct rpc_time_remote_secure_set_args {
  rpc_uint64 *ts_val;
};

struct rpc_time_remote_secure_get_args {
  rpc_boolean ts_val_not_null;
};

struct rpc_time_remote_secure_get_julian_args {
  rpc_boolean julian_not_null;
};

struct rpc_time_alarm_set_ms_args {
  rpc_uint32 expiration;
};

struct rpc_time_alarm_set_secs_args {
  rpc_uint32 expiration;
};

struct rpc_time_remote_update_apps_to_modem_offset_args {
  rpc_int32 offset;
};

struct rpc_time_remote_secure_set_julian_args {
  rpc_time_julian_type *julian;
};

struct rpc_ats_client_init_args {
  rpc_ats_client_type_e_type client_type;
  rpc_ats_client_id_type *client_id_ptr;
  rpc_ats_client_processor_e_type processor;
};

struct rpc_ats_client_release_args {
  rpc_ats_client_id_type client_id;
};

struct rpc_ats_client_deactivate_args {
  rpc_ats_client_id_type client_id;
};

struct rpc_ats_client_reg_cfg_cb_args {
  rpc_ats_client_id_type client_id;
  rpc_ats_cfg_event_cb_type cfg_event_cb;
};

struct rpc_ats_client_activate_args {
  rpc_ats_client_id_type client_id;
};

struct rpc_time_remote_genoff_opr_args {
  rpc_time_bases_type base;
  rpc_time_unit_type unit;
  rpc_time_genoff_opr_type operation;
  rpc_base_time_source_type base_source;
  rpc_time_remote_opr_type *ts_val;
};

struct rpc_time_remote_atom_genoff_set_generic_offset_args {
  rpc_time_bases_type base;
  rpc_int64 offset;
};



struct rpc_time_remote_atom_api_version_s_args {
  rpc_boolean len_not_null;
};

/*
 * These are struct declarations for the function results
 */

/*Added rpc_timer_ipc_remote_get_rets in Minor Rev 0x00000002*/

struct rpc_timer_ipc_remote_get_rets {
  rpc_timetick_type *retval;
};


/*Added rpc_timer_ipc_remote_clr_rets in Minor Rev 0x00000002*/

struct rpc_timer_ipc_remote_clr_rets {
  rpc_timetick_type *retval;
};


/*Added rpc_timer_ipc_remote_set_rets in Minor Rev 0x00000002*/

struct rpc_timer_ipc_remote_set_rets {
  rpc_uint32 *handle;
};


struct rpc_time_remote_atom_rpc_glue_code_info_remote_rets {
  rpc_uint32 toolvers;   /* Tool version */
  rpc_uint32 features;   /* Features turned on in the code.
                          * 0x00000001    ONCRPC Server Cleanup Support
                          */
  rpc_uint32 proghash;   /* Unique hash value for the API XDR definition */
  rpc_uint32 cbproghash; /* Unique hash value for the Callbacks' XDR definition */
};

struct rpc_time_alarm_set_rets {
  rpc_int32 time_alarm_set_result;
};

struct rpc_time_get_local_offset_info_rets {
  rpc_int32 *local_timezone;
  rpc_boolean *daylight_savings;
};

struct rpc_time_remote_get_julian_rets {
  rpc_time_julian_type *jul_time;
};

struct rpc_time_remote_secure_get_rets {
  rpc_uint64 *ts_val;
};

struct rpc_time_remote_secure_get_julian_rets {
  rpc_time_julian_type *julian;
};

struct rpc_time_secure_valid_rets {
  rpc_boolean time_secure_valid_result;
};

struct rpc_time_alarm_set_ms_rets {
  rpc_int32 time_alarm_set_ms_result;
};

struct rpc_time_alarm_set_secs_rets {
  rpc_int32 time_alarm_set_secs_result;
};

struct rpc_ats_client_init_rets {
  rpc_ats_client_err_e_type ats_client_init_result;
  rpc_ats_client_id_type *client_id_ptr;
};

struct rpc_ats_client_release_rets {
  rpc_ats_client_err_e_type ats_client_release_result;
};

struct rpc_ats_client_deactivate_rets {
  rpc_ats_client_err_e_type ats_client_deactivate_result;
};

struct rpc_ats_client_reg_cfg_cb_rets {
  rpc_ats_client_err_e_type ats_client_reg_cfg_cb_result;
};

struct rpc_ats_client_activate_rets {
  rpc_ats_client_err_e_type ats_client_activate_result;
};

struct rpc_time_remote_genoff_opr_rets {
  rpc_time_remote_opr_type *ts_val;
};

 struct rpc_time_remote_atom_api_versions_rets {
  rpc_time_remote_atom_api_versions_return_type time_remote_atom_api_versions_result;
  rpc_uint32 *len;
};

/*
 * XDR definition of the TIME_REMOTE_ATOM program ( vers. 0x00040001 )
 */

program TIME_REMOTE_ATOMPROG {
  version TIME_REMOTE_ATOMVERS_0001 {

	void
		rpc_time_remote_atom_null( void ) = 0;

	rpc_time_remote_atom_rpc_glue_code_info_remote_rets
		rpc_time_remote_atom_rpc_glue_code_info_remote( void ) = 1;

	void
		rpc_time_remote_set_user_time( rpc_time_remote_set_user_time_args ) = 2;

	rpc_time_alarm_set_rets
		rpc_time_alarm_set( rpc_time_alarm_set_args ) = 3;

	rpc_time_get_local_offset_info_rets
		rpc_time_get_local_offset_info( rpc_time_get_local_offset_info_args ) = 4;

	void
		rpc_time_tod_request_apps_bases( void ) = 5;

	void
		rpc_time_remote_set_julian( rpc_time_remote_set_julian_args ) = 6;

	rpc_time_remote_get_julian_rets
		rpc_time_remote_get_julian( rpc_time_remote_get_julian_args ) = 7;

	void
		rpc_time_tod_request_reset( void ) = 8;

	void
		rpc_time_remote_secure_set( rpc_time_remote_secure_set_args ) = 9;

	rpc_time_remote_secure_get_rets
		rpc_time_remote_secure_get( rpc_time_remote_secure_get_args ) = 10;

	rpc_time_remote_secure_get_julian_rets
		rpc_time_remote_secure_get_julian( rpc_time_remote_secure_get_julian_args ) = 11;

	rpc_time_secure_valid_rets
		rpc_time_secure_valid( void ) = 12;

	rpc_time_alarm_set_ms_rets
		rpc_time_alarm_set_ms( rpc_time_alarm_set_ms_args ) = 13;

	rpc_time_alarm_set_secs_rets
		rpc_time_alarm_set_secs( rpc_time_alarm_set_secs_args ) = 14;

	void
		rpc_time_remote_update_apps_to_modem_offset( rpc_time_remote_update_apps_to_modem_offset_args ) = 15;

	void
		rpc_time_remote_secure_set_julian( rpc_time_remote_secure_set_julian_args ) = 16;

	rpc_ats_client_deactivate_rets
		rpc_ats_client_deactivate( rpc_ats_client_deactivate_args ) = 17;

	rpc_ats_client_init_rets
		rpc_ats_client_init( rpc_ats_client_init_args ) = 18;

	void
		rpc_time_remote_atom_genoff_set_generic_offset( rpc_time_remote_atom_genoff_set_generic_offset_args ) = 19;

	rpc_ats_client_release_rets
		rpc_ats_client_release( rpc_ats_client_release_args ) = 20;

	rpc_ats_client_activate_rets
		rpc_ats_client_activate( rpc_ats_client_activate_args ) = 21;

	rpc_time_remote_genoff_opr_rets
		rpc_time_remote_genoff_opr( rpc_time_remote_genoff_opr_args ) = 22;

	rpc_ats_client_reg_cfg_cb_rets
		rpc_ats_client_reg_cfg_cb( rpc_ats_client_reg_cfg_cb_args ) = 23;

	rpc_time_remote_atom_api_versions_rets
		rpc_time_remote_atom_api_versions( void ) = 0xffffffff;




  } = 0x00040001;



    version TIME_REMOTE_ATOMVERS_0002 {

	void
	rpc_time_remote_atom_null( void ) = 0;


    rpc_timer_ipc_remote_get_rets
      rpc_timer_ipc_remote_get( rpc_timer_ipc_remote_get_args ) = 24;


    rpc_timer_ipc_remote_clr_rets
      rpc_timer_ipc_remote_clr( rpc_timer_ipc_remote_clr_args ) = 25;


    void
      rpc_timer_ipc_remote_resume( rpc_timer_ipc_remote_resume_args ) = 26;


    rpc_timer_ipc_remote_set_rets
      rpc_timer_ipc_remote_set( rpc_timer_ipc_remote_set_args ) = 27;


    void
      rpc_timer_ipc_remote_pause( rpc_timer_ipc_remote_pause_args ) = 28;

/* Following elements added in enum rpc_ats_cfg_event_e_type in 0x00040002 
RPC_ATS_CFG_EVENT_TIMER_IPC_CHANGE
*/

      } = 0x00040002;



    version TIME_REMOTE_ATOMVERS_0003 {

/* Following elements added in enum rpc_ats_client_processor_e_type in 0x00040003 
RPC_ATS_CLIENT_PROCESSOR_MM_MODEM(Added before sentinel elements)
*/
/* Following elements added in enum rpc_ats_client_type_e_type in 0x00040003 
RPC_ATS_CLIENT_TYPE_MM_GENOFF_UPDATE
*/

	void
	rpc_time_remote_atom_null( void ) = 0;

      } = 0x00040003;



    version TIME_REMOTE_ATOMVERS_0004 {

/* Following elements added in enum rpc_time_bases in 0x00040004 
RPC_ATS_DRM
RPC_ATS_GPS
RPC_ATS_USER_UTC
RPC_ATS_USER_TZ_DL
RPC_ATS_WCDMA
RPC_ATS_1X
RPC_ATS_HDR
RPC_ATS_MFLO
*/

	void
	rpc_time_remote_atom_null( void ) = 0;

      } = 0x00040004;



    version TIME_REMOTE_ATOMVERS_0005 {

	void
	rpc_time_remote_atom_null( void ) = 0;


    void
      rpc_time_remote_genoff_set_allow_remote_updates( rpc_time_remote_genoff_set_allow_remote_updates_args ) = 29;

      } = 0x00040005;








} = 0x30000048;

const TIME_REMOTE_ATOMVERS = 0x00040005;





/* END_FORWARD_XDR */


/* BEGIN_CALLBACK_XDR */




/* TIME_REMOTE_ATOM TOOL VERSION: 4.39 */
/* GENERATED: TUE AUG 17 2010 */
/*=============================================================================
                 T I M E _ R E M O T E _ A T O M _ C B . X D R

GENERAL DESCRIPTION
  This is an AUTO GENERATED file that provides an xdr compatible definition of
  an api that represents the grouping of the different callback functions the
  time_remote_atom API supports.

  ---------------------------------------------------------------------------
  Copyright (c) 2009 QUALCOMM Incorporated.
  All Rights Reserved. QUALCOMM Proprietary and Confidential.
  ---------------------------------------------------------------------------
=============================================================================*/

/*=============================================================================

                              Edit History

                             AUTO GENERATED

Generated by following versions of Htorpc modules:
Id: //source/qcom/qct/core/mproc/tools/rel/04.01/htorpc/htorpc.pl#20 
Id: //source/qcom/qct/core/mproc/tools/rel/04.01/htorpc/lib/Htorpc/Start.pm#3 
Id: //source/qcom/qct/core/mproc/tools/rel/04.01/htorpc/lib/Htorpc/Htoxdr.pm#1 
Id: //source/qcom/qct/core/mproc/tools/rel/04.01/htorpc/lib/Htorpc/XDR.pm#7 
Id: //source/qcom/qct/core/mproc/tools/rel/04.01/htorpc/lib/Htorpc/Output.pm#29 
Id: //source/qcom/qct/core/mproc/tools/rel/04.01/htorpc/lib/Htorpc/Parser.pm#2 
Id: //source/qcom/qct/core/mproc/tools/rel/04.01/htorpc/lib/Htorpc/Metacomments.pm#6 
Id: //source/qcom/qct/core/mproc/tools/rel/04.01/htorpc/lib/Htorpc/SymbolTable.pm#3  

time_remote_atom Definition File(s):
Id: //depot/asic/msm7500/services/time/00.03/base/main/latest/src/time_remote_atom.h#5
=============================================================================*/
/*=============================================================================
$Header$ 
=============================================================================*/




/*
 * These are struct declarations for the function arguments
 */

struct rpc_ats_cfg_event_cb_type_args {
  rpc_uint32 cb_id;
  rpc_ats_cfg_event_e_type event;
  rpc_ats_cfg_event_info_s_type *info_ptr;
};





/*
 * These are struct declaratios for the function results
 */

struct rpc_ats_cfg_event_cb_type_rets {
  rpc_ats_client_err_e_type ats_cfg_event_cb_type_result;
};



/*
 * XDR definition of the TIME_REMOTE_ATOM callback program ( vers. 0x00040001 )
 */

program TIME_REMOTE_ATOMCBPROG {
  version TIME_REMOTE_ATOMCBVERS_0001 {

	rpc_ats_cfg_event_cb_type_rets
		rpc_ats_cfg_event_cb_type( rpc_ats_cfg_event_cb_type_args ) = 1;




  } = 0x00040001;



    version TIME_REMOTE_ATOMCBVERS_0002 {
       /* The function(s) rpc_timer_ipc_remote_get 
	 rpc_timer_ipc_remote_clr 
	 rpc_timer_ipc_remote_resume 
	 rpc_timer_ipc_remote_set 
	 rpc_timer_ipc_remote_pause 
	  added in the 
         forward xdr */
         int
             rpc_time_remote_atom_cb_null( void ) = 0xffffff00;

/* Following elements added in enum rpc_ats_cfg_event_e_type in 0x00040002 
RPC_ATS_CFG_EVENT_TIMER_IPC_CHANGE
*/

      } = 0x00040002;



    version TIME_REMOTE_ATOMCBVERS_0003 {

/* Following elements added in enum rpc_ats_client_processor_e_type in 0x00040003 
RPC_ATS_CLIENT_PROCESSOR_MM_MODEM(Added before sentinel elements)
*/
/* Following elements added in enum rpc_ats_client_type_e_type in 0x00040003 
RPC_ATS_CLIENT_TYPE_MM_GENOFF_UPDATE
*/

	int
	rpc_time_remote_atom_cb_null( void ) = 0xffffff00;

      } = 0x00040003;



    version TIME_REMOTE_ATOMCBVERS_0004 {

/* Following elements added in enum rpc_time_bases in 0x00040004 
RPC_ATS_DRM
RPC_ATS_GPS
RPC_ATS_USER_UTC
RPC_ATS_USER_TZ_DL
RPC_ATS_WCDMA
RPC_ATS_1X
RPC_ATS_HDR
RPC_ATS_MFLO
*/

	int
	rpc_time_remote_atom_cb_null( void ) = 0xffffff00;

      } = 0x00040004;



    version TIME_REMOTE_ATOMCBVERS_0005 {
       /* The function(s) rpc_time_remote_genoff_set_allow_remote_updates 
	  added in the 
         forward xdr */
         int
             rpc_time_remote_atom_cb_null( void ) = 0xffffff00;

      } = 0x00040005;








} = 0x31000048;

const TIME_REMOTE_ATOMCBVERS = 0x00040005;





/* END_CALLBACK_XDR */
