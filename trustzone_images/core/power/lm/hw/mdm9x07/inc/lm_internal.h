/*==============================================================================

  FILE:         lm_internal.h

  OVERVIEW:     This file provides declarations needed internal to LM module

  DEPENDENCIES: None

                Copyright (c) 2014 QUALCOMM Technologies Incorporated.
                All Rights Reserved.
                Qualcomm Confidential and Proprietary
================================================================================
$Header: 
$DateTime: 
==============================================================================*/

/*----------------------------------------------------------------------------
 * Include Files
 * -------------------------------------------------------------------------*/
#include <stddef.h>
#include <stdlib.h>
#include "comdef.h"
#include "HALhwio.h"
#include "DALSys.h"
#include "msmhwiobase.h"

/*----------------------------------------------------------------------------
 * Preprocessor Definitions and Constants
 * -------------------------------------------------------------------------*/
 
//IDDQ APC info
#define SECURITY_CONTROL_CORE_REG_BASE                                 (SECURITY_CONTROL_BASE      + 0x00000000)
#define HWIO_QFPROM_RAW_CALIB_ROW1_MSB_ADDR                            (SECURITY_CONTROL_CORE_REG_BASE      + 0x000000dc)
#define HWIO_QFPROM_RAW_CALIB_ROW1_MSB_IDDQ_APC_ACTIVE_BMSK                                    0x7f80000
#define HWIO_QFPROM_RAW_CALIB_ROW1_MSB_IDDQ_APC_ACTIVE_SHFT                                         0x13
#define HWIO_QFPROM_RAW_CALIB_ROW1_MSB_INM(m)      \
        in_dword_masked(HWIO_QFPROM_RAW_CALIB_ROW1_MSB_ADDR, m)
#define LM_IDDQ_APC_ACTIVE_VALUE(m)   \
           (HWIO_QFPROM_RAW_CALIB_ROW1_MSB_INM(m) >> HWIO_QFPROM_RAW_CALIB_ROW1_MSB_IDDQ_APC_ACTIVE_SHFT)

/* S1LM CLK dive specific   APCS_KPSS_GLB  */
#define APCS_KPSS_GLB_REG_BASE                                                   (A7SS_BASE      + 0x00011000)
#define HWIO_APCS_S1LM_SEC_DIVIDER_DIV_VALUE_ADDR                                (APCS_KPSS_GLB_REG_BASE      + 0x00000300)
#define HWIO_APCS_S1LM_SEC_DIVIDER_DIV_VALUE_OFFS                                (APCS_KPSS_GLB_REG_BASE_OFFS + 0x00000300)
#define HWIO_APCS_S1LM_SEC_DIVIDER_DIV_VALUE_RMSK                                       0x7
#define HWIO_APCS_S1LM_SEC_DIVIDER_DIV_VALUE_IN          \
        in_dword_masked(HWIO_APCS_S1LM_SEC_DIVIDER_DIV_VALUE_ADDR, HWIO_APCS_S1LM_SEC_DIVIDER_DIV_VALUE_RMSK)
#define HWIO_APCS_S1LM_SEC_DIVIDER_DIV_VALUE_INM(m)      \
        in_dword_masked(HWIO_APCS_S1LM_SEC_DIVIDER_DIV_VALUE_ADDR, m)
#define HWIO_APCS_S1LM_SEC_DIVIDER_DIV_VALUE_OUT(v)      \
        out_dword(HWIO_APCS_S1LM_SEC_DIVIDER_DIV_VALUE_ADDR,v)
#define HWIO_APCS_S1LM_SEC_DIVIDER_DIV_VALUE_OUTM(m,v) \
        out_dword_masked_ns(HWIO_APCS_S1LM_SEC_DIVIDER_DIV_VALUE_ADDR,m,v,HWIO_APCS_S1LM_SEC_DIVIDER_DIV_VALUE_IN)
#define HWIO_APCS_S1LM_SEC_DIVIDER_DIV_VALUE_CDIV_DIV_VALUE_BMSK                        0x7
#define HWIO_APCS_S1LM_SEC_DIVIDER_DIV_VALUE_CDIV_DIV_VALUE_SHFT                        0x0

/* Clock div value */
#define GCC_CLK_CTL_REG_REG_BASE                                     (CLK_CTL_BASE      + 0x00000000)
#define HWIO_GCC_S1LM_APPS_DIV_VOTE_ADDR                                                        (GCC_CLK_CTL_REG_REG_BASE      + 0x0007e000)
#define HWIO_GCC_S1LM_APPS_DIV_VOTE_RMSK                                                        0xffffffff
#define HWIO_GCC_S1LM_APPS_DIV_VOTE_IN          \
        in_dword_masked(HWIO_GCC_S1LM_APPS_DIV_VOTE_ADDR, HWIO_GCC_S1LM_APPS_DIV_VOTE_RMSK)
#define HWIO_GCC_S1LM_APPS_DIV_VOTE_INM(m)      \
        in_dword_masked(HWIO_GCC_S1LM_APPS_DIV_VOTE_ADDR, m)
#define HWIO_GCC_S1LM_APPS_DIV_VOTE_OUT(v)      \
        out_dword(HWIO_GCC_S1LM_APPS_DIV_VOTE_ADDR,v)
#define HWIO_GCC_S1LM_APPS_DIV_VOTE_OUTM(m,v) \
        out_dword_masked_ns(HWIO_GCC_S1LM_APPS_DIV_VOTE_ADDR,m,v,HWIO_GCC_S1LM_APPS_DIV_VOTE_IN)
#define HWIO_GCC_S1LM_APPS_DIV_VOTE_S1LM_APPS_DIV_VOTE_BMSK                                            0x1
#define HWIO_GCC_S1LM_APPS_DIV_VOTE_S1LM_APPS_DIV_VOTE_SHFT                                            0x0


/* Driver specific Macros defined */ 
 #define LM_IDDQ_APC_ACTIVE_VALUE_LIMIT    93

/* system states */
#define LM_THERMAL_LEVEL_MAX              3
#define LM_ACPU_CNT_MAX                   4
#define LM_CORNER_STATE_MAX               4
#define LM_HASH_TABLE_SIZE_MAX  \
     (LM_THERMAL_LEVEL_MAX * LM_ACPU_CNT_MAX * LM_CORNER_STATE_MAX * LM_CORNER_STATE_MAX * LM_CORNER_STATE_MAX)

/* indexes used to calculate HashValue */
#define LM_LKP_INDEX_1                    1
#define LM_LKP_INDEX_2                    (LM_LKP_INDEX_1 * LM_THERMAL_LEVEL_MAX)
#define LM_LKP_INDEX_3                    (LM_LKP_INDEX_2 * LM_ACPU_CNT_MAX)
#define LM_LKP_INDEX_4                    (LM_LKP_INDEX_3 * LM_CORNER_STATE_MAX)
#define LM_LKP_INDEX_5                    (LM_LKP_INDEX_4 * LM_CORNER_STATE_MAX)

/* pre and post clk div vote specific macros */
#define LM_CLK_DIV_VOTE_BMASK    		0xFFFF
#define LM_POST_CLK_DIV_VOTE_LSHIFT  	0x10
#define LM_INITIAL_CLK_DIV_VALUE        0x3

/* Return  macros */
#define LM_SUCCESS  0
#define LM_FAILED   -1
#define LM_INVALID_ARG     -15

/* mitigation look up data type */
typedef struct  {
  uint32    hash_value;  
  uint32    pre_clk_div_vote;
  uint32    core_online_req;
  uint32    freq_req;
  uint32    post_clk_div_vote;
 }lm_mitigation_lookup_data_type;


/* Look up table for high IDDQ */
lm_mitigation_lookup_data_type lookup_table_high[] =
{
	{0,	0,	0,	0xFFFF,			0},
	{767,	1,	1,	200000,		0},
	{191,	1,	2,	400000,		0},
	{623,	1,	4,	1401000,	1},
	{47,	1,	4,	1401000,	1},
	{515,	1,	4,	1401000,	1},
	{131,	1,	4,	1401000,	1},
	{419,	1,	4,	1401000,	1},
	{35,	1,	4,	1401000,	1},
	{263,	1,	4,	1401000,	1},
	{71,	1,	4,	1401000,	1},
	{215,	1,	4,	1401000,	1},
	{23,	1,	4,	1401000,	1},
	{764,	1,	1,	200000,		0},
	{188,	1,	2,	400000,		0},
	{620,	1,	4,	1401000,	1},
	{44,	1,	4,	1401000,	1},
	{512,	1,	3,	1401000,	1},
	{128,	1,	4,	1401000,	1},
	{416,	1,	4,  1401000,	1},
	{32,    1,	4,	1401000,	1},
	{260,	1,	4,	1401000,	1},
	{68,	1,	4,	1401000,	1},
	{212,	1,	4,	1401000,	1},
	{20,	1,	4,	1401000,	1},
	{761,	1,	1,	200000,		0},
	{185,	1,	2,	400000,		0},
	{617,	1,	4,	1401000,	1},
	{41,	1,	4,	1401000,	1},
	{509,	1,	3,	1401000,	1},
	{125,	0,	4,	1401000,	0},
	{413,	1,	4,	1401000,	1},
	{29,	0,	4,	1401000,	0},
	{257,	1,	4,	1401000,	1},
	{65,	0,	4,	1401000,	0},
	{209,	1,	4,	1401000,	1},
	{17,	0,	4,	1401000,	0},
	{758,	1,	1,	200000,		0},
	{182,	0,	1,	1401000,	0},
	{614,	1,	4,	1401000,	1},
	{38,	0,	4,	1401000,	0},
	{506,	0,	3,	1401000,	0},
	{122,	0,	4,	1401000,	0},
	{410,	0,	4,	1401000,	0},
	{26,	0,	4,	1401000,	0},
	{254,	0,	4,	1401000,	0},
	{62,	0,	4,	1401000,	0},
	{206,	0,	4,	1401000,	0},
	{14,	0,	4,	1401000,	0},
	{766,	1,	1,	998400,		0},
	{190,	1,	2,	998400,		0},
	{622,	1,	4,	1401000,	1},
	{46,	1,	4,	1401000,	1},
	{514,	1,	4,	1401000,	1},
	{130,	1,	4,	1401000,	1},
	{418,	1,	4,	1401000,	1},
	{34,	1,	4,	1401000,	1},
	{262,	1,	4,	1401000,	1},
	{70,	1,	4,	1401000,	1},
	{214,	1,	4,	1401000,	1},
	{22,	1,	4,	1401000,	1},
	{763,	1,	1,	998400,		0},
	{187,	1,	2,	998400,		1},
	{619,	1,	4,	1401000,	1},
	{43,	1,	4,	1401000,	1},
	{511,	1,	4,	1401000,	1},
	{127,	1,	4,	1401000,	1},
	{415,	1,	4,	1401000,	1},
	{31,	1,	4,	1401000,	1},
	{259,	1,	4,	1401000,	1},
	{67,	0,	4,	1401000,	0},
	{211,	1,	4,	1401000,	1},
	{19,	0,	4,	1401000,	0},
	{760,	1,	1,	998400,		0},
	{184,	1,	2,	998400,		0},
	{616,	1,	4,	1401000,	1},
	{40,	1,	4,	1401000,	1},
	{508,	1,	4,	1401000,	1},
	{124,	0,	4,	1401000,	0},
	{412,	1,	4,	1401000,	1},
	{28,	0,	4,	1401000,	0},
	{256,	0,	4,	1401000,	0},
	{64,	0,	4,	1401000,	0},
	{208,	0,	4,	1401000,	0},
	{16,	0,	4,	1401000,	0},
	{757,	1,	1,	998400,		0},
	{181,	0,	1,	1401000,	0},
	{613,	1,	4,	1401000,	1},
	{37,	0,	4,	1401000,	0},
	{505,	0,	4,	1401000,	0},
	{121,	0,	4,	1401000,	0},
	{409,	0,	4,	1401000,	0},
	{25,	0,	4,	1401000,	0},
	{253,	0,	4,	1401000,	0},
	{61,	0,	4,	1401000,	0},
	{205,	0,	4,	1401000,	0},
	{13,	0,	4,	1401000,	0},
	{765,	1,	2,	533333,		0},
	{189,	1,	3,	800000,		0},
	{621,	1,	4,	1401000,	1},
	{45,	1,	4,	1401000,	1},
	{513,	1,	4,	1401000,	1},
	{129,	1,	4,	1401000,	1},
	{417,	1,	4,	1401000,	1},
	{33,	1,	4,	1401000,	1},
	{261,	1,	4,	1401000,	1},
	{69,	0,	4,	1401000,	0},
	{213,	1,	4,	1401000,	1},
	{21,	0,	4,	1401000,	0},
	{762,	1,	2,	533333,		0},
	{186,	1,	3,	800000,		0},
	{618,	1,	4,	1401000,	1},
	{42,	1,	4,	1401000,	1},
	{510,	1,	4,	1401000,	1},
	{126,	1,	4,	1401000,	1},
	{414,	1,	4,	1401000,	1},
	{30,	1,	4,	1401000,	1},
	{258,	0,	4,	1401000,	0},
	{66,	0,	4,	1401000,	0},
	{210,   0,	4,	1401000,	0},
	{18,	0,	4,	1401000,	0},
	{759,	1,	2,	533333,		0},
	{183,	1,	2,	1401000,	1},
	{615,	1,	4,	1401000,	1},
	{39,	1,	4,	1401000,	1},
	{507,	1,	4,	1401000,	1},
	{123,	0,	4,	1401000,	0},
	{411,	1,	4,	1401000,	1},
	{27,	0,	4,	1401000,	0},
	{255,	0,	4,	1401000,	0},
	{63,	0,	4,	1401000,	0},
	{207,	0,	4,	1401000,	0},
	{15,	0,	4,	1401000,	0},
	{756,	1,	1,	1401000,	1},
	{180,	0,	2,	1401000,	0},
	{612,	1,	4,	1401000,	1},
	{36,	0,	4,	1401000,	0},
	{504,	0,	4,	1401000,	0},
	{120,	0,	4,	1401000,	0},
	{408,	0,	4,	1401000,	0},
	{24,	0,	4,	1401000,	0},
	{252,	0,	4,	1401000,	0},
	{60,	0,	4,	1401000,	0},
	{204,	0,	4,	1401000,	0},
	{12,	0,	4,	1401000,	0}
};

/* Look up table for low IDDQ */
lm_mitigation_lookup_data_type lookup_table_normal[] =
{
	{0, 	0,	0,	0xFFFF,		0},
	{767,	1,	1,	400000,		0},
	{191,	1,	2,	800000,		0},
	{623,	1,	4,	1401000,	1},
	{47,	1,	4,	1401000,	1},
	{515,	1,	4,	1401000,	1},
	{131,	1,	4,	1401000,	1},
	{419,	1,	4,	1401000,	1},
	{35,	1,	4,	1401000,	1},
	{263,	1,	4,	1401000,	1},
	{71,	1,	4,	1401000,	1},
	{215,	1,	4,	1401000,	1},
	{23,	1,	4,	1401000,	1},
	{764,	1,	1,	400000,		0},
	{188,	1,	2,	800000,		0},
	{620,	1,	4,	1401000,	1},
	{44,	1,	4,	1401000,	1},
	{512,	1,	3,	1401000,	1},
	{128,	1,	4,	1401000,	1},
	{416,	1,	4,	1401000,	1},
	{32,	1,	4,	1401000,	1},
	{260,	1,	4,	1401000,	1},
	{68,	0,	4,	1401000,	0},
	{212,	1,	4,	1401000,	1},
	{20,	0,	4,	1401000,	0},
	{761,	1,	1,	400000,		0},
	{185,	1,	2,	800000,		0},
	{617,	1,	4,	1401000,	1},
	{41,	1,	4,	1401000,	1},
	{509,	1,	3,	1401000,	1},
	{125,	0,	4,	1401000,	0},
	{413,	1,	4,	1401000,	1},
	{29,	0,	4,	1401000,	0},
	{257,	0,	4,	1401000,	0},
	{65,	0,	4,	1401000,	0},
	{209,	0,	4,	1401000,	0},
	{17,	0,	4,	1401000,	0},
	{758,	1,	1,	400000,		0},
	{182,	0,	1,	1401000,	0},
	{614,	1,	4,	1401000,	1},
	{38,	0,	4,	1401000,	0},
	{506,	0,	3,	1401000,	0},
	{122,	0,	4,	1401000,	0},
	{410,	0,	4,	1401000,	0},
	{26,	0,	4,	1401000,	0},
	{254,	0,	4,	1401000,	0},
	{62,	0,	4,	1401000,	0},
	{206,	0,	4,	1401000,	0},
	{14,	0,	4,	1401000,	0},
	{766,	1,	2,	800000,		0},
	{190,	1,	3,	800000,		0},
	{622,	1,	4,	1401000,	1},
	{46,	1,	4,	1401000,	1},
	{514,	1,	4,	1401000,	1},
	{130,	1,	4,	1401000,	1},
	{418,	1,	4,	1401000,	1},
	{34,	1,	4,	1401000,	1},
	{262,	1,	4,	1401000,	1},
	{70,	0,	4,	1401000,	0},
	{214,	1,	4,	1401000,	1},
	{22,	0,	4,	1401000,	0},
	{763,	1,	2,	800000,		0},
	{187,	1,	3,	800000,		0},
	{619,	1,	4,	1401000,	1},
	{43,	1,	4,	1401000,	1},
	{511,	1,	4,	1401000,	1},
	{127,	1,	4,	1401000,	1},
	{415,	1,	4,	1401000,	1},
	{31,	1,	4,	1401000,	1},
	{259,	0,	4,	1401000,	0},
	{67,	0,	4,	1401000,	0},
	{211,	0,	4,	1401000,	0},
	{19,	0,	4,	1401000,	0},
	{760,	1,	2,	800000,		0},
	{184,	1,	2,	1401000,	0},
	{616,	1,	4,	1401000,	1},
	{40,	1,	4,	1401000,	1},
	{508,	1,	4,	1401000,	1},
	{124,	0,	4,	1401000,	0},
	{412,	1,	4,	1401000,	1},
	{28,	0,	4,	1401000,	0},
	{256,	0,	4,	1401000,	0},
	{64,	0,	4,	1401000,	0},
	{208,	0,	4,	1401000,	0},
	{16,	0,	4,	1401000,	0},
	{757,	1,	1,	1401000,	0},
	{181,	0,	1,	1401000,	0},
	{613,	1,	4,	1401000,	1},
	{37,	0,	4,	1401000,	0},
	{505,	0,	4,	1401000,	0},
	{121,	0,	4,	1401000,	0},
	{409,	0,	4,	1401000,	0},
	{25,	0,	4,	1401000,	0},
	{253,	0,	4,	1401000,	0},
	{61,	0,	4,	1401000,	0},
	{205,	0,	4,	1401000,	0},
	{13,	0,	4,	1401000,	0},
	{765,	1,	2,	800000,		0},
	{189,	1,	3,	998400,		0},
	{621,	1,	4,	1401000,	1},
	{45,	1,	4,	1401000,	1},
	{513,	1,	4,	1401000,	1},
	{129,	1,	4,	1401000,	1},
	{417,	1,	4,	1401000,	1},
	{33,	1,	4,	1401000,	1},
	{261,	1,	4,	1401000,	1},
	{69,	0,	4,	1401000,	0},
	{213,	1,	4,	1401000,	1},
	{21,	0,	4,	1401000,	0},
	{762,	1,	2,	800000,		0},
	{186,	1,	3,	998400,		0},
	{618,	1,	4,	1401000,	1},
	{42,	1,	4,	1401000,	1},
	{510,	1,	4,	1401000,	1},
	{126,	0,	4,	1401000,	0},
	{414,	1,	4,	1401000,	1},
	{30,	0,	4,	1401000,	0},
	{258,	0,	4,	1401000,	0},
	{66,	0,	4,	1401000,	0},
	{210,	0,	4,	1401000,	0},
	{18,	0,	4,	1401000,	0},
	{759,	1,	2,	800000,		0},
	{183,	1,	2,	1401000,	0},
	{615,	1,	4,	1401000,	1},
	{39,	1,	4,	1401000,	1},
	{507,	1,	4,	1401000,	1},
	{123,	0,	4,	1401000,	0},
	{411,	1,	4,	1401000,	1},
	{27,	0,	4,	1401000,	0},
	{255,	0,	4,	1401000,	0},
	{63,	0,	4,	1401000,	0},
	{207,	0,	4,	1401000,	0},
	{15,	0,	4,	1401000,	0},
	{756,	1,	1,	1401000,	0},
	{180,	0,	2,	1401000,	0},
	{612,	1,	4,	1401000,	1},
	{36,	0,	4,	1401000,	0},
	{504,	0,	4,	1401000,	0},
	{120,	0,	4,	1401000,	0},
	{408,	0,	4,	1401000,	0},
	{24,	0,	4,	1401000,	0},
	{252,	0,	4,	1401000,	0},
	{60,	0,	4,	1401000,	0},
	{204,	0,	4,	1401000,	0},
	{12,	0,	4,	1401000,	0}
};


